{
  "contractName": "Proposals",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_proposals",
      "outputs": [
        {
          "internalType": "enum Proposals.proposalState",
          "name": "_state",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_providerInfo",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "providerInfo",
          "type": "string"
        }
      ],
      "name": "sendProposal",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "approveProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "retrieveProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieveCertificatesContractAddress",
      "outputs": [
        {
          "internalType": "contract Certificates",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieveChairPerson",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_proposals\",\"outputs\":[{\"internalType\":\"enum Proposals.proposalState\",\"name\":\"_state\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_providerInfo\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"approveProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveCertificatesContractAddress\",\"outputs\":[{\"internalType\":\"contract Certificates\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveChairPerson\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"retrieveProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"providerInfo\",\"type\":\"string\"}],\"name\":\"sendProposal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/d-aam/GitHub/Certificates/contracts/Proposals.sol\":\"Proposals\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/d-aam/GitHub/Certificates/contracts/Certificates.sol\":{\"keccak256\":\"0xaffe254922da55a9b7d4441e03039616b28f8e302770e5ef74677739df4b4359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1636846d9085f1fd8cc8d291ee6a9e0950a497bc6d0bc8cae62c679010132dbf\",\"dweb:/ipfs/QmcZG616tN5qR2gRtANRJFYk5g1r1rixb8QrpontiAV4QD\"]},\"/C/Users/d-aam/GitHub/Certificates/contracts/Proposals.sol\":{\"keccak256\":\"0x634334f63b25dee71053ec78579ea7b16976f4120a397d09eda6710fa7fe3dcc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e07ba1ada26cb8c04c9120b580776fcde78e8b686b9a16791db6d8c1b6417f6e\",\"dweb:/ipfs/QmYaLR4b6VuUseaWBjiQkvtZC23nGX61E6U9ve6iwoFHQ5\"]}},\"version\":1}",
  "bytecode": "0x608060405233600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060036040516100b690610195565b8080602001828103825283818154815260200191508054801561012e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116100e4575b505092505050604051809103906000f080158015610150573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101a2565b612dc380610e3283390190565b610c81806101b16000396000f3fe6080604052600436106100555760003560e01c806303354faa1461005a5780633bd2993c146100ab5780634f3f6c29146100ec578063858e7ce6146101c8578063db85bc4d146102a3578063efec414b146102e4575b600080fd5b34801561006657600080fd5b506100a96004803603602081101561007d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103b5565b005b3480156100b757600080fd5b506100c06106c3565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100f857600080fd5b5061013b6004803603602081101561010f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106ec565b6040518083600381111561014b57fe5b815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561018c578082015181840152602081019050610171565b50505050905090810190601f1680156101b95780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6102a1600480360360408110156101de57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561021b57600080fd5b82018360208201111561022d57600080fd5b8035906020019184600183028401116401000000008311171561024f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506107b5565b005b3480156102af57600080fd5b506102b8610954565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102f057600080fd5b506103336004803603602081101561030757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061097e565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561037957808201518184015260208101905061035e565b50505050905090810190601f1680156103a65780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610478576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4e6f7420616c6c6f77656420746f20617070726f76652070726f706f73616c7381525060200191505060405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660038111156104d357fe5b600060038111156104e057fe5b1415610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f546869732070726f706f73616c20646f6573206e6f742065786973740000000081525060200191505060405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc00050082600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252838181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156106875780601f1061065c57610100808354040283529160200191610687565b820191906000526020600020905b81548152906001019060200180831161066a57829003601f168201915b50509350505050600060405180830381600087803b1580156106a857600080fd5b505af11580156106bc573d6000803e3d6000fd5b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026020528060005260406000206000915090508060000160009054906101000a900460ff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107ab5780601f10610780576101008083540402835291602001916107ab565b820191906000526020600020905b81548152906001019060200180831161078e57829003601f168201915b5050505050905082565b600a34101561082c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420656e6f7567682066756e64730000000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610894573d6000803e3d6000fd5b506001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908360038111156108f457fe5b021790555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101908051906020019061094f929190610ba0565b505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006060600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660038111156109dd57fe5b600060038111156109ea57fe5b1415610a5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f546869732070726f706f73616c20646f6573206e6f742065786973740000000081525060200191505060405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115610ab957fe5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b905780601f10610b6557610100808354040283529160200191610b90565b820191906000526020600020905b815481529060010190602001808311610b7357829003601f168201915b5050505050905091509150915091565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282610bd65760008555610c1d565b82601f10610bef57805160ff1916838001178555610c1d565b82800160010185558215610c1d579182015b82811115610c1c578251825591602001919060010190610c01565b5b509050610c2a9190610c2e565b5090565b5b80821115610c47576000816000905550600101610c2f565b509056fea264697066735822122033f8e66636c3b99858b0d10c02c930a305298530cea8fa497adff2bad3e8cf8064736f6c63430007060033608060405260405162002dc338038062002dc3833981810160405260208110156200002957600080fd5b81019080805160405193929190846401000000008211156200004a57600080fd5b838201915060208201858111156200006157600080fd5b82518660208202830111640100000000821117156200007f57600080fd5b8083526020830192505050908051906020019060200280838360005b83811015620000b85780820151818401526020810190506200009b565b50505050905001604052505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160048190555060005b81518110156200026c57600360008383815181106200018357fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156000151514156200025e57600160036000848481518110620001f357fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016004600082825401925050819055505b808060010191505062000168565b50600060028190555050612b3d80620002866000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806383ce57b3116100a2578063bf3a5c0211610071578063bf3a5c0214610c5f578063d610d85f14610cb9578063d744d2f314610ce7578063eefe768114610d05578063fc00050014610d2357610116565b806383ce57b3146108755780638a355a57146108a95780639f25cd12146108ed578063ad5ed47c14610aa657610116565b806337583499116100e957806337583499146102b257806340f5ba1c1461036f5780637065cb4814610562578063769d7235146105a657806382ff66a31461066c57610116565b80631660c22a1461011b578063173825d9146101f657806317c082541461023a5780632f54bf6e14610258575b600080fd5b6101f46004803603604081101561013157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561016e57600080fd5b82018360208201111561018057600080fd5b803590602001918460018302840111640100000000831117156101a257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610dfe565b005b6102386004803603602081101561020c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061101e565b005b61024261126c565b6040518082815260200191505060405180910390f35b61029a6004803603602081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611279565b60405180821515815260200191505060405180910390f35b6102f4600480360360208110156102c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112cf565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610334578082015181840152602081019050610319565b50505050905090810190601f1680156103615780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105606004803603608081101561038557600080fd5b8101908080359060200190929190803590602001906401000000008111156103ac57600080fd5b8201836020820111156103be57600080fd5b803590602001918460018302840111640100000000831117156103e057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561044357600080fd5b82018360208201111561045557600080fd5b8035906020019184600183028401116401000000008311171561047757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156104da57600080fd5b8201836020820111156104ec57600080fd5b8035906020019184600183028401116401000000008311171561050e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061147c565b005b6105a46004803603602081101561057857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611678565b005b6105e8600480360360208110156105bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118c6565b60405180831515815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610630578082015181840152602081019050610615565b50505050905090810190601f16801561065d5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6108736004803603608081101561068257600080fd5b810190808035906020019064010000000081111561069f57600080fd5b8201836020820111156106b157600080fd5b803590602001918460018302840111640100000000831117156106d357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561073657600080fd5b82018360208201111561074857600080fd5b8035906020019184600183028401116401000000008311171561076a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156107cd57600080fd5b8201836020820111156107df57600080fd5b8035906020019184600183028401116401000000008311171561080157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061198f565b005b61087d611c1c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108eb600480360360208110156108bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c45565b005b6109196004803603602081101561090357600080fd5b8101908080359060200190929190505050611e79565b604051808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b8381101561099957808201518184015260208101905061097e565b50505050905090810190601f1680156109c65780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b838110156109ff5780820151818401526020810190506109e4565b50505050905090810190601f168015610a2c5780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b83811015610a65578082015181840152602081019050610a4a565b50505050905090810190601f168015610a925780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b610ad260048036036020811015610abc57600080fd5b81019080803590602001909291905050506120c7565b604051808673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff168152602001848103845288818151815260200191508051906020019080838360005b83811015610b52578082015181840152602081019050610b37565b50505050905090810190601f168015610b7f5780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b83811015610bb8578082015181840152602081019050610b9d565b50505050905090810190601f168015610be55780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b83811015610c1e578082015181840152602081019050610c03565b50505050905090810190601f168015610c4b5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b610ca160048036036020811015610c7557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612409565b60405180821515815260200191505060405180910390f35b610ce560048036036020811015610ccf57600080fd5b8101908080359060200190929190505050612429565b005b610cef612678565b6040518082815260200191505060405180910390f35b610d0d612682565b6040518082815260200191505060405180910390f35b610dfc60048036036040811015610d3957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610d7657600080fd5b820183602082011115610d8857600080fd5b80359060200191846001830284011164010000000083111715610daa57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061268c565b005b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515600115151480610e8857508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610efa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4e6f7420616c6c6f77656420746f207570646174652070726f7669646572730081525060200191505060405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615156001151514610fc3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f50726f7669646572206e6f74206163746976617465640000000000000000000081525060200191505060405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010190805190602001906110199291906128dc565b505050565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156001151514806110c8575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61113a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4e6f7420616c6c6f77656420746f2072656d6f7665206f776e6572730000000081525060200191505060405180910390fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156001151514611200576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4f776e657220616c72656164792064652d61637469766174656400000000000081525060200191505060405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160046000828254039250508190555050565b6000600580549050905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161515600115151461139a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f50726f766964657220646f6573206e6f7420657869737400000000000000000081525060200191505060405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114705780601f1061144557610100808354040283529160200191611470565b820191906000526020600020905b81548152906001019060200180831161145357829003601f168201915b50505050509050919050565b6005848154811061148957fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461153e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612aa66031913960400191505060405180910390fd5b60058054905084106115b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f436572746966696361746520646f6573206e6f7420657869737400000000000081525060200191505060405180910390fd5b8251600010156115f65782600585815481106115d057fe5b906000526020600020906005020160020190805190602001906115f49291906128dc565b505b81516000101561163457816005858154811061160e57fe5b906000526020600020906005020160030190805190602001906116329291906128dc565b505b80516000101561167257806005858154811061164c57fe5b9060005260206000209060050201600401908051906020019061167092919061296a565b505b50505050565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515600115151480611722575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b611794576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4e6f7420616c6c6f77656420746f20616464206f776e6572730000000000000081525060200191505060405180910390fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515600015151461185a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f4f776e657220616c72656164792061637469766174656400000000000000000081525060200191505060405180910390fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160046000828254019250508190555050565b60016020528060005260406000206000915090508060000160009054906101000a900460ff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119855780601f1061195a57610100808354040283529160200191611985565b820191906000526020600020905b81548152906001019060200180831161196857829003601f168201915b5050505050905082565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615156001151514611a58576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4e6f7420616c6c6f77656420746f20616464204365727469666963617465730081525060200191505060405180910390fd5b825160001080611a69575083516000105b611a7257600080fd5b60056040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200184815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190611b9a9291906128dc565b506060820151816003019080519060200190611bb79291906128dc565b506080820151816004019080519060200190611bd492919061296a565b5050507f17027320caf3eac157f42e54b35a0728ffed8184d38487008f3b46607cfb8f9c6001600580549050036040518082815260200191505060405180910390a150505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515600115151480611ccf57508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b611d41576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4e6f7420616c6c6f77656420746f2072656d6f76652070726f7669646572730081525060200191505060405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615156001151514611e0a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f50726f7669646572206e6f74206163746976617465640000000000000000000081525060200191505060405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908315150217905550600160026000828254039250508190555050565b60058181548110611e8957600080fd5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f815780601f10611f5657610100808354040283529160200191611f81565b820191906000526020600020905b815481529060010190602001808311611f6457829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561201f5780601f10611ff45761010080835404028352916020019161201f565b820191906000526020600020905b81548152906001019060200180831161200257829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120bd5780601f10612092576101008083540402835291602001916120bd565b820191906000526020600020905b8154815290600101906020018083116120a057829003601f168201915b5050505050905085565b600060608060606000600580549050861061214a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f436572746966696361746520646f6573206e6f7420657869737400000000000081525060200191505060405180910390fd5b6005868154811061215757fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166005878154811061219657fe5b9060005260206000209060050201600201600588815481106121b457fe5b9060005260206000209060050201600301600589815481106121d257fe5b906000526020600020906005020160040160058a815481106121f057fe5b906000526020600020906005020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122b75780601f1061228c576101008083540402835291602001916122b7565b820191906000526020600020905b81548152906001019060200180831161229a57829003601f168201915b50505050509350828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123535780601f1061232857610100808354040283529160200191612353565b820191906000526020600020905b81548152906001019060200180831161233657829003601f168201915b50505050509250818054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123ef5780601f106123c4576101008083540402835291602001916123ef565b820191906000526020600020905b8154815290600101906020018083116123d257829003601f168201915b505050505091509450945094509450945091939590929450565b60036020528060005260406000206000915054906101000a900460ff1681565b6005818154811061243657fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061250a5750600581815481106124a957fe5b906000526020600020906005020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61255f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612ad76031913960400191505060405180910390fd5b60058054905081106125d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f436572746966696361746520646f6573206e6f7420657869737400000000000081525060200191505060405180910390fd5b600581815481106125e657fe5b9060005260206000209060050201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600061265391906129f8565b60038201600061266391906129f8565b6004820160006126739190612a40565b505050565b6000600254905090565b6000600454905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461274d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4e6f7420616c6c6f77656420746f206164642070726f7669646572730000000081525060200191505060405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615156000151514612816576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f50726f766964657220616c72656164792061637469766174656400000000000081525060200191505060405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101908051906020019061286c9291906128dc565b5060018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555060016002600082825401925050819055505050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826129125760008555612959565b82601f1061292b57805160ff1916838001178555612959565b82800160010185558215612959579182015b8281111561295857825182559160200191906001019061293d565b5b5090506129669190612a88565b5090565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826129a057600085556129e7565b82601f106129b957805160ff19168380011785556129e7565b828001600101855582156129e7579182015b828111156129e65782518255916020019190600101906129cb565b5b5090506129f49190612a88565b5090565b50805460018160011615610100020316600290046000825580601f10612a1e5750612a3d565b601f016020900490600052602060002090810190612a3c9190612a88565b5b50565b50805460018160011615610100020316600290046000825580601f10612a665750612a85565b601f016020900490600052602060002090810190612a849190612a88565b5b50565b5b80821115612aa1576000816000905550600101612a89565b509056fe4e6f7420616c6c6f77656420746f20757064617465207468697320706172746963756c61722043657274696669636174654e6f7420616c6c6f77656420746f2072656d6f7665207468697320706172746963756c6172204365727469666963617465a264697066735822122064c69af19c000943b2d780cd32095931fd9b1dfd8e7ea0e307ce5d9224a9b0bc64736f6c63430007060033",
  "deployedBytecode": "0x6080604052600436106100555760003560e01c806303354faa1461005a5780633bd2993c146100ab5780634f3f6c29146100ec578063858e7ce6146101c8578063db85bc4d146102a3578063efec414b146102e4575b600080fd5b34801561006657600080fd5b506100a96004803603602081101561007d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103b5565b005b3480156100b757600080fd5b506100c06106c3565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100f857600080fd5b5061013b6004803603602081101561010f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106ec565b6040518083600381111561014b57fe5b815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561018c578082015181840152602081019050610171565b50505050905090810190601f1680156101b95780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6102a1600480360360408110156101de57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561021b57600080fd5b82018360208201111561022d57600080fd5b8035906020019184600183028401116401000000008311171561024f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506107b5565b005b3480156102af57600080fd5b506102b8610954565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102f057600080fd5b506103336004803603602081101561030757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061097e565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561037957808201518184015260208101905061035e565b50505050905090810190601f1680156103a65780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610478576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4e6f7420616c6c6f77656420746f20617070726f76652070726f706f73616c7381525060200191505060405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660038111156104d357fe5b600060038111156104e057fe5b1415610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f546869732070726f706f73616c20646f6573206e6f742065786973740000000081525060200191505060405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc00050082600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252838181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156106875780601f1061065c57610100808354040283529160200191610687565b820191906000526020600020905b81548152906001019060200180831161066a57829003601f168201915b50509350505050600060405180830381600087803b1580156106a857600080fd5b505af11580156106bc573d6000803e3d6000fd5b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026020528060005260406000206000915090508060000160009054906101000a900460ff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107ab5780601f10610780576101008083540402835291602001916107ab565b820191906000526020600020905b81548152906001019060200180831161078e57829003601f168201915b5050505050905082565b600a34101561082c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420656e6f7567682066756e64730000000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610894573d6000803e3d6000fd5b506001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908360038111156108f457fe5b021790555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101908051906020019061094f929190610ba0565b505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006060600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660038111156109dd57fe5b600060038111156109ea57fe5b1415610a5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f546869732070726f706f73616c20646f6573206e6f742065786973740000000081525060200191505060405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115610ab957fe5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b905780601f10610b6557610100808354040283529160200191610b90565b820191906000526020600020905b815481529060010190602001808311610b7357829003601f168201915b5050505050905091509150915091565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282610bd65760008555610c1d565b82601f10610bef57805160ff1916838001178555610c1d565b82800160010185558215610c1d579182015b82811115610c1c578251825591602001919060010190610c01565b5b509050610c2a9190610c2e565b5090565b5b80821115610c47576000816000905550600101610c2f565b509056fea264697066735822122033f8e66636c3b99858b0d10c02c930a305298530cea8fa497adff2bad3e8cf8064736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "558:1986:1:-:0;;;1045:10;1022:12;;:34;;;;;;;;;;;;;;;;;;1067:12;1093:10;1067:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1157:12;1140:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:21;;:54;;;;;;;;;;;;;;;;;;558:1986;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "558:1986:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1602:339;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2295:129;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;901:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1226:364;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2436:99;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1953:293;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1602:339;1684:12;;;;;;;;;;;1670:26;;:10;:26;;;1662:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1783:10;:20;1794:8;1783:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;1752:58;;;;;;;;:27;:58;;;;;;;;;;1744:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1854:21;;;;;;;;;;:33;;;1888:8;1898:10;:20;1909:8;1898:20;;;;;;;;;;;;;;;:34;;1854:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1602:339;:::o;2295:129::-;2363:12;2395:21;;;;;;;;;;;2388:28;;2295:129;:::o;901:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1226:364::-;680:2;1327:9;:22;;1319:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1380:12;;;;;;;;;;;:21;;:32;1402:9;1380:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1502:21;1472:10;:20;1483:8;1472:20;;;;;;;;;;;;;;;:27;;;:51;;;;;;;;;;;;;;;;;;;;;;;;1570:12;1533:10;:20;1544:8;1533:20;;;;;;;;;;;;;;;:34;;:49;;;;;;;;;;;;:::i;:::-;;1226:364;;:::o;2436:99::-;2488:7;2515:12;;;;;;;;;;;2508:19;;2436:99;:::o;1953:293::-;2018:4;2024:13;2089:10;:20;2100:8;2089:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;2058:58;;;;;;;;:27;:58;;;;;;;;;;2050:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2173:10;:20;2184:8;2173:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;2168:33;;;;;;;;2203:10;:20;2214:8;2203:20;;;;;;;;;;;;;;;:34;;2160:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1953:293;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n/**\r\n * @title Storage\r\n * @dev Store & retrieve value in a variable\r\n */\r\n \r\nimport \"./Certificates.sol\";\r\n\r\n /* \r\n Actors : Chair Person, Anyone\r\n Token : Proposals\r\n\r\n 1- Anyone can submit proposals (paying a fee)\r\n 2- Chair Person can approve proposals creating Providers in Certificates Contract\r\n\r\n\r\n Proposals lifecycle\r\n    Proposals Creation : Anyone (paying fee)\r\n    Proposals Update : \r\n    Proposals Remove :   \r\n    Proposals Validations : Only Chair Person  \r\n\r\n */\r\n\r\ncontract Proposals{\r\n    enum proposalState { NOT_SUBMITTED, PENDING, APPROVED, REJECTED }\r\n    uint constant _PriceWei = 10;\r\n\r\n    Certificates  _CertificatesContract;\r\n    \r\n    struct _proposal{\r\n        //bool _submitted;\r\n        proposalState _state;\r\n        string _providerInfo;\r\n    } \r\n    \r\n    address payable _chairperson;\r\n    mapping(address => _proposal) public _proposals;\r\n    address[] listOfOwners;\r\n    \r\n    constructor() payable{\r\n        _chairperson = payable(msg.sender);\r\n        listOfOwners.push(address(msg.sender));\r\n        _CertificatesContract = new Certificates(listOfOwners);\r\n    }\r\n    \r\n    // PROPOSALS CRUD Operations\r\n\r\n    function sendProposal(address provider, string memory providerInfo) public payable {\r\n       require(msg.value >= _PriceWei, \"Not enough funds\");\r\n       _chairperson.transfer(msg.value);\r\n       //_proposals[provider]._submitted = true;\r\n       _proposals[provider]._state = proposalState.PENDING;\r\n       _proposals[provider]._providerInfo = providerInfo;\r\n    }\r\n    \r\n    function approveProposal(address provider) public{\r\n        require(msg.sender == _chairperson, \"Not allowed to approve proposals\");\r\n        require(proposalState.NOT_SUBMITTED != _proposals[provider]._state, \"This proposal does not exist\");\r\n        _CertificatesContract.addProvider(provider, _proposals[provider]._providerInfo);\r\n    }\r\n    \r\n    function retrieveProposal(address provider) public view returns (uint, string memory) {\r\n        require(proposalState.NOT_SUBMITTED != _proposals[provider]._state, \"This proposal does not exist\");\r\n        return (uint(_proposals[provider]._state), _proposals[provider]._providerInfo);\r\n    }\r\n    \r\n    // Contract basic information\r\n\r\n    function retrieveCertificatesContractAddress() public view returns (Certificates) {\r\n        return _CertificatesContract;\r\n    }\r\n    \r\n    function retrieveChairPerson() public view returns (address) {\r\n        return _chairperson;\r\n    }\r\n    \r\n}",
  "sourcePath": "C:/Users/d-aam/GitHub/Certificates/contracts/Proposals.sol",
  "ast": {
    "absolutePath": "/C/Users/d-aam/GitHub/Certificates/contracts/Proposals.sol",
    "exportedSymbols": {
      "Certificates": [
        601
      ],
      "Proposals": [
        781
      ]
    },
    "id": 782,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 603,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:31:1"
      },
      {
        "absolutePath": "/C/Users/d-aam/GitHub/Certificates/contracts/Certificates.sol",
        "file": "./Certificates.sol",
        "id": 604,
        "nodeType": "ImportDirective",
        "scope": 782,
        "sourceUnit": 602,
        "src": "152:28:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          601
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 781,
        "linearizedBaseContracts": [
          781
        ],
        "name": "Proposals",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Proposals.proposalState",
            "id": 609,
            "members": [
              {
                "id": 605,
                "name": "NOT_SUBMITTED",
                "nodeType": "EnumValue",
                "src": "604:13:1"
              },
              {
                "id": 606,
                "name": "PENDING",
                "nodeType": "EnumValue",
                "src": "619:7:1"
              },
              {
                "id": 607,
                "name": "APPROVED",
                "nodeType": "EnumValue",
                "src": "628:8:1"
              },
              {
                "id": 608,
                "name": "REJECTED",
                "nodeType": "EnumValue",
                "src": "638:8:1"
              }
            ],
            "name": "proposalState",
            "nodeType": "EnumDefinition",
            "src": "583:65:1"
          },
          {
            "constant": true,
            "id": 612,
            "mutability": "constant",
            "name": "_PriceWei",
            "nodeType": "VariableDeclaration",
            "scope": 781,
            "src": "654:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 610,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "654:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 611,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "680:2:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 614,
            "mutability": "mutable",
            "name": "_CertificatesContract",
            "nodeType": "VariableDeclaration",
            "scope": 781,
            "src": "691:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Certificates_$601",
              "typeString": "contract Certificates"
            },
            "typeName": {
              "id": 613,
              "name": "Certificates",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 601,
              "src": "691:12:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Certificates_$601",
                "typeString": "contract Certificates"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Proposals._proposal",
            "id": 619,
            "members": [
              {
                "constant": false,
                "id": 616,
                "mutability": "mutable",
                "name": "_state",
                "nodeType": "VariableDeclaration",
                "scope": 619,
                "src": "794:20:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_proposalState_$609",
                  "typeString": "enum Proposals.proposalState"
                },
                "typeName": {
                  "id": 615,
                  "name": "proposalState",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 609,
                  "src": "794:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_proposalState_$609",
                    "typeString": "enum Proposals.proposalState"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 618,
                "mutability": "mutable",
                "name": "_providerInfo",
                "nodeType": "VariableDeclaration",
                "scope": 619,
                "src": "825:20:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 617,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "825:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "_proposal",
            "nodeType": "StructDefinition",
            "scope": 781,
            "src": "739:114:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 621,
            "mutability": "mutable",
            "name": "_chairperson",
            "nodeType": "VariableDeclaration",
            "scope": 781,
            "src": "866:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 620,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "866:15:1",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "4f3f6c29",
            "id": 625,
            "mutability": "mutable",
            "name": "_proposals",
            "nodeType": "VariableDeclaration",
            "scope": 781,
            "src": "901:47:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$619_storage_$",
              "typeString": "mapping(address => struct Proposals._proposal)"
            },
            "typeName": {
              "id": 624,
              "keyType": {
                "id": 622,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "909:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "901:29:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$619_storage_$",
                "typeString": "mapping(address => struct Proposals._proposal)"
              },
              "valueType": {
                "id": 623,
                "name": "_proposal",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 619,
                "src": "920:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$__proposal_$619_storage_ptr",
                  "typeString": "struct Proposals._proposal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 628,
            "mutability": "mutable",
            "name": "listOfOwners",
            "nodeType": "VariableDeclaration",
            "scope": 781,
            "src": "955:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 626,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "955:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 627,
              "nodeType": "ArrayTypeName",
              "src": "955:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 656,
              "nodeType": "Block",
              "src": "1011:167:1",
              "statements": [
                {
                  "expression": {
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 631,
                      "name": "_chairperson",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 621,
                      "src": "1022:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 634,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1045:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1045:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1037:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 632,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1037:8:1",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1037:19:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1022:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 638,
                  "nodeType": "ExpressionStatement",
                  "src": "1022:34:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 644,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1093:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1093:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1085:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 642,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1085:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1085:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 639,
                        "name": "listOfOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 628,
                        "src": "1067:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1067:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1067:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 648,
                  "nodeType": "ExpressionStatement",
                  "src": "1067:38:1"
                },
                {
                  "expression": {
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 649,
                      "name": "_CertificatesContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 614,
                      "src": "1116:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Certificates_$601",
                        "typeString": "contract Certificates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 652,
                          "name": "listOfOwners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 628,
                          "src": "1157:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        ],
                        "id": 651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1140:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_contract$_Certificates_$601_$",
                          "typeString": "function (address[] memory) payable returns (contract Certificates)"
                        },
                        "typeName": {
                          "id": 650,
                          "name": "Certificates",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 601,
                          "src": "1144:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Certificates_$601",
                            "typeString": "contract Certificates"
                          }
                        }
                      },
                      "id": 653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1140:30:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Certificates_$601",
                        "typeString": "contract Certificates"
                      }
                    },
                    "src": "1116:54:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Certificates_$601",
                      "typeString": "contract Certificates"
                    }
                  },
                  "id": 655,
                  "nodeType": "ExpressionStatement",
                  "src": "1116:54:1"
                }
              ]
            },
            "id": 657,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1001:2:1"
            },
            "returnParameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1011:0:1"
            },
            "scope": 781,
            "src": "990:188:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 694,
              "nodeType": "Block",
              "src": "1309:281:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 665,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1327:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1327:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 667,
                          "name": "_PriceWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 612,
                          "src": "1340:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1327:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682066756e6473",
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1351:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
                          "typeString": "literal_string \"Not enough funds\""
                        },
                        "value": "Not enough funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
                          "typeString": "literal_string \"Not enough funds\""
                        }
                      ],
                      "id": 664,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1319:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1319:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "1319:51:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 675,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1402:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1402:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 672,
                        "name": "_chairperson",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 621,
                        "src": "1380:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1380:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1380:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "1380:32:1"
                },
                {
                  "expression": {
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 679,
                          "name": "_proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 625,
                          "src": "1472:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$619_storage_$",
                            "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                          }
                        },
                        "id": 681,
                        "indexExpression": {
                          "id": 680,
                          "name": "provider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 659,
                          "src": "1483:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1472:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$__proposal_$619_storage",
                          "typeString": "struct Proposals._proposal storage ref"
                        }
                      },
                      "id": 682,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 616,
                      "src": "1472:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_proposalState_$609",
                        "typeString": "enum Proposals.proposalState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 683,
                        "name": "proposalState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "1502:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_proposalState_$609_$",
                          "typeString": "type(enum Proposals.proposalState)"
                        }
                      },
                      "id": 684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PENDING",
                      "nodeType": "MemberAccess",
                      "src": "1502:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_proposalState_$609",
                        "typeString": "enum Proposals.proposalState"
                      }
                    },
                    "src": "1472:51:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_proposalState_$609",
                      "typeString": "enum Proposals.proposalState"
                    }
                  },
                  "id": 686,
                  "nodeType": "ExpressionStatement",
                  "src": "1472:51:1"
                },
                {
                  "expression": {
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 687,
                          "name": "_proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 625,
                          "src": "1533:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$619_storage_$",
                            "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                          }
                        },
                        "id": 689,
                        "indexExpression": {
                          "id": 688,
                          "name": "provider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 659,
                          "src": "1544:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1533:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$__proposal_$619_storage",
                          "typeString": "struct Proposals._proposal storage ref"
                        }
                      },
                      "id": 690,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_providerInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 618,
                      "src": "1533:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 691,
                      "name": "providerInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 661,
                      "src": "1570:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1533:49:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 693,
                  "nodeType": "ExpressionStatement",
                  "src": "1533:49:1"
                }
              ]
            },
            "functionSelector": "858e7ce6",
            "id": 695,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 659,
                  "mutability": "mutable",
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "scope": 695,
                  "src": "1248:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 661,
                  "mutability": "mutable",
                  "name": "providerInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 695,
                  "src": "1266:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 660,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1266:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1247:46:1"
            },
            "returnParameters": {
              "id": 663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1309:0:1"
            },
            "scope": 781,
            "src": "1226:364:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 729,
              "nodeType": "Block",
              "src": "1651:290:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 701,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1670:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1670:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 703,
                          "name": "_chairperson",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 621,
                          "src": "1684:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1670:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616c6c6f77656420746f20617070726f76652070726f706f73616c73",
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1698:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e47a6786529766886d436a345077f435d350ad8948cbcc8f80557eed8f833199",
                          "typeString": "literal_string \"Not allowed to approve proposals\""
                        },
                        "value": "Not allowed to approve proposals"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e47a6786529766886d436a345077f435d350ad8948cbcc8f80557eed8f833199",
                          "typeString": "literal_string \"Not allowed to approve proposals\""
                        }
                      ],
                      "id": 700,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1662:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1662:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 707,
                  "nodeType": "ExpressionStatement",
                  "src": "1662:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_proposalState_$609",
                          "typeString": "enum Proposals.proposalState"
                        },
                        "id": 715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 709,
                            "name": "proposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 609,
                            "src": "1752:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_proposalState_$609_$",
                              "typeString": "type(enum Proposals.proposalState)"
                            }
                          },
                          "id": 710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NOT_SUBMITTED",
                          "nodeType": "MemberAccess",
                          "src": "1752:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_proposalState_$609",
                            "typeString": "enum Proposals.proposalState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 711,
                              "name": "_proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 625,
                              "src": "1783:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$619_storage_$",
                                "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                              }
                            },
                            "id": 713,
                            "indexExpression": {
                              "id": 712,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 697,
                              "src": "1794:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1783:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$__proposal_$619_storage",
                              "typeString": "struct Proposals._proposal storage ref"
                            }
                          },
                          "id": 714,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 616,
                          "src": "1783:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_proposalState_$609",
                            "typeString": "enum Proposals.proposalState"
                          }
                        },
                        "src": "1752:58:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732070726f706f73616c20646f6573206e6f74206578697374",
                        "id": 716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1812:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca5c8ad1855a349d22e6e95653caace74b2a2a8baa1054b1017b98590706ce9a",
                          "typeString": "literal_string \"This proposal does not exist\""
                        },
                        "value": "This proposal does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca5c8ad1855a349d22e6e95653caace74b2a2a8baa1054b1017b98590706ce9a",
                          "typeString": "literal_string \"This proposal does not exist\""
                        }
                      ],
                      "id": 708,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1744:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1744:99:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 718,
                  "nodeType": "ExpressionStatement",
                  "src": "1744:99:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 722,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 697,
                        "src": "1888:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 723,
                            "name": "_proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 625,
                            "src": "1898:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$619_storage_$",
                              "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                            }
                          },
                          "id": 725,
                          "indexExpression": {
                            "id": 724,
                            "name": "provider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 697,
                            "src": "1909:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1898:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$__proposal_$619_storage",
                            "typeString": "struct Proposals._proposal storage ref"
                          }
                        },
                        "id": 726,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_providerInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 618,
                        "src": "1898:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "expression": {
                        "id": 719,
                        "name": "_CertificatesContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 614,
                        "src": "1854:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Certificates_$601",
                          "typeString": "contract Certificates"
                        }
                      },
                      "id": 721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addProvider",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 144,
                      "src": "1854:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1854:79:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 728,
                  "nodeType": "ExpressionStatement",
                  "src": "1854:79:1"
                }
              ]
            },
            "functionSelector": "03354faa",
            "id": 730,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 697,
                  "mutability": "mutable",
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "scope": 730,
                  "src": "1627:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 696,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1627:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1626:18:1"
            },
            "returnParameters": {
              "id": 699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1651:0:1"
            },
            "scope": 781,
            "src": "1602:339:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 763,
              "nodeType": "Block",
              "src": "2039:207:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_proposalState_$609",
                          "typeString": "enum Proposals.proposalState"
                        },
                        "id": 746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 740,
                            "name": "proposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 609,
                            "src": "2058:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_proposalState_$609_$",
                              "typeString": "type(enum Proposals.proposalState)"
                            }
                          },
                          "id": 741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NOT_SUBMITTED",
                          "nodeType": "MemberAccess",
                          "src": "2058:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_proposalState_$609",
                            "typeString": "enum Proposals.proposalState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 742,
                              "name": "_proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 625,
                              "src": "2089:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$619_storage_$",
                                "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                              }
                            },
                            "id": 744,
                            "indexExpression": {
                              "id": 743,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 732,
                              "src": "2100:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2089:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$__proposal_$619_storage",
                              "typeString": "struct Proposals._proposal storage ref"
                            }
                          },
                          "id": 745,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 616,
                          "src": "2089:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_proposalState_$609",
                            "typeString": "enum Proposals.proposalState"
                          }
                        },
                        "src": "2058:58:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732070726f706f73616c20646f6573206e6f74206578697374",
                        "id": 747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2118:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca5c8ad1855a349d22e6e95653caace74b2a2a8baa1054b1017b98590706ce9a",
                          "typeString": "literal_string \"This proposal does not exist\""
                        },
                        "value": "This proposal does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca5c8ad1855a349d22e6e95653caace74b2a2a8baa1054b1017b98590706ce9a",
                          "typeString": "literal_string \"This proposal does not exist\""
                        }
                      ],
                      "id": 739,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2050:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2050:99:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 749,
                  "nodeType": "ExpressionStatement",
                  "src": "2050:99:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 752,
                                "name": "_proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 625,
                                "src": "2173:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$619_storage_$",
                                  "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                                }
                              },
                              "id": 754,
                              "indexExpression": {
                                "id": 753,
                                "name": "provider",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 732,
                                "src": "2184:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2173:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$__proposal_$619_storage",
                                "typeString": "struct Proposals._proposal storage ref"
                              }
                            },
                            "id": 755,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 616,
                            "src": "2173:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_proposalState_$609",
                              "typeString": "enum Proposals.proposalState"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_proposalState_$609",
                              "typeString": "enum Proposals.proposalState"
                            }
                          ],
                          "id": 751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2168:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 750,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2168:4:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2168:33:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 757,
                            "name": "_proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 625,
                            "src": "2203:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$619_storage_$",
                              "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                            }
                          },
                          "id": 759,
                          "indexExpression": {
                            "id": 758,
                            "name": "provider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 732,
                            "src": "2214:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2203:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$__proposal_$619_storage",
                            "typeString": "struct Proposals._proposal storage ref"
                          }
                        },
                        "id": 760,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_providerInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 618,
                        "src": "2203:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "id": 761,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2167:71:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_string_storage_$",
                      "typeString": "tuple(uint256,string storage ref)"
                    }
                  },
                  "functionReturnParameters": 738,
                  "id": 762,
                  "nodeType": "Return",
                  "src": "2160:78:1"
                }
              ]
            },
            "functionSelector": "efec414b",
            "id": 764,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 732,
                  "mutability": "mutable",
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "scope": 764,
                  "src": "1979:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1979:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1978:18:1"
            },
            "returnParameters": {
              "id": 738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 735,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 764,
                  "src": "2018:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2018:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 737,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 764,
                  "src": "2024:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2024:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2017:21:1"
            },
            "scope": 781,
            "src": "1953:293:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 771,
              "nodeType": "Block",
              "src": "2377:47:1",
              "statements": [
                {
                  "expression": {
                    "id": 769,
                    "name": "_CertificatesContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 614,
                    "src": "2395:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Certificates_$601",
                      "typeString": "contract Certificates"
                    }
                  },
                  "functionReturnParameters": 768,
                  "id": 770,
                  "nodeType": "Return",
                  "src": "2388:28:1"
                }
              ]
            },
            "functionSelector": "3bd2993c",
            "id": 772,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveCertificatesContractAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2339:2:1"
            },
            "returnParameters": {
              "id": 768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 767,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "2363:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Certificates_$601",
                    "typeString": "contract Certificates"
                  },
                  "typeName": {
                    "id": 766,
                    "name": "Certificates",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 601,
                    "src": "2363:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Certificates_$601",
                      "typeString": "contract Certificates"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2362:14:1"
            },
            "scope": 781,
            "src": "2295:129:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 779,
              "nodeType": "Block",
              "src": "2497:38:1",
              "statements": [
                {
                  "expression": {
                    "id": 777,
                    "name": "_chairperson",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 621,
                    "src": "2515:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 776,
                  "id": 778,
                  "nodeType": "Return",
                  "src": "2508:19:1"
                }
              ]
            },
            "functionSelector": "db85bc4d",
            "id": 780,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveChairPerson",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2464:2:1"
            },
            "returnParameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 775,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "2488:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2488:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2487:9:1"
            },
            "scope": 781,
            "src": "2436:99:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 782,
        "src": "558:1986:1"
      }
    ],
    "src": "39:2505:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/d-aam/GitHub/Certificates/contracts/Proposals.sol",
      "exportedSymbols": {
        "Certificates": [
          601
        ],
        "Proposals": [
          781
        ]
      },
      "license": "GPL-3.0"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.7",
            ".0",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 603,
        "name": "PragmaDirective",
        "src": "39:31:1"
      },
      {
        "attributes": {
          "SourceUnit": 602,
          "absolutePath": "/C/Users/d-aam/GitHub/Certificates/contracts/Certificates.sol",
          "file": "./Certificates.sol",
          "scope": 782,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 604,
        "name": "ImportDirective",
        "src": "152:28:1"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            601
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            781
          ],
          "name": "Proposals",
          "scope": 782
        },
        "children": [
          {
            "attributes": {
              "canonicalName": "Proposals.proposalState",
              "name": "proposalState"
            },
            "children": [
              {
                "attributes": {
                  "name": "NOT_SUBMITTED"
                },
                "id": 605,
                "name": "EnumValue",
                "src": "604:13:1"
              },
              {
                "attributes": {
                  "name": "PENDING"
                },
                "id": 606,
                "name": "EnumValue",
                "src": "619:7:1"
              },
              {
                "attributes": {
                  "name": "APPROVED"
                },
                "id": 607,
                "name": "EnumValue",
                "src": "628:8:1"
              },
              {
                "attributes": {
                  "name": "REJECTED"
                },
                "id": 608,
                "name": "EnumValue",
                "src": "638:8:1"
              }
            ],
            "id": 609,
            "name": "EnumDefinition",
            "src": "583:65:1"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "_PriceWei",
              "scope": 781,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 610,
                "name": "ElementaryTypeName",
                "src": "654:4:1"
              },
              {
                "attributes": {
                  "hexvalue": "3130",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 10",
                  "value": "10"
                },
                "id": 611,
                "name": "Literal",
                "src": "680:2:1"
              }
            ],
            "id": 612,
            "name": "VariableDeclaration",
            "src": "654:28:1"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_CertificatesContract",
              "scope": 781,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract Certificates",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "Certificates",
                  "referencedDeclaration": 601,
                  "type": "contract Certificates"
                },
                "id": 613,
                "name": "UserDefinedTypeName",
                "src": "691:12:1"
              }
            ],
            "id": 614,
            "name": "VariableDeclaration",
            "src": "691:35:1"
          },
          {
            "attributes": {
              "canonicalName": "Proposals._proposal",
              "name": "_proposal",
              "scope": 781,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "_state",
                  "scope": 619,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum Proposals.proposalState",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "proposalState",
                      "referencedDeclaration": 609,
                      "type": "enum Proposals.proposalState"
                    },
                    "id": 615,
                    "name": "UserDefinedTypeName",
                    "src": "794:13:1"
                  }
                ],
                "id": 616,
                "name": "VariableDeclaration",
                "src": "794:20:1"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "_providerInfo",
                  "scope": 619,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 617,
                    "name": "ElementaryTypeName",
                    "src": "825:6:1"
                  }
                ],
                "id": 618,
                "name": "VariableDeclaration",
                "src": "825:20:1"
              }
            ],
            "id": 619,
            "name": "StructDefinition",
            "src": "739:114:1"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_chairperson",
              "scope": 781,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address payable",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "payable",
                  "type": "address payable"
                },
                "id": 620,
                "name": "ElementaryTypeName",
                "src": "866:15:1"
              }
            ],
            "id": 621,
            "name": "VariableDeclaration",
            "src": "866:28:1"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "4f3f6c29",
              "mutability": "mutable",
              "name": "_proposals",
              "scope": 781,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct Proposals._proposal)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct Proposals._proposal)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 622,
                    "name": "ElementaryTypeName",
                    "src": "909:7:1"
                  },
                  {
                    "attributes": {
                      "name": "_proposal",
                      "referencedDeclaration": 619,
                      "type": "struct Proposals._proposal"
                    },
                    "id": 623,
                    "name": "UserDefinedTypeName",
                    "src": "920:9:1"
                  }
                ],
                "id": 624,
                "name": "Mapping",
                "src": "901:29:1"
              }
            ],
            "id": 625,
            "name": "VariableDeclaration",
            "src": "901:47:1"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "listOfOwners",
              "scope": 781,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address[]",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "address[]"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 626,
                    "name": "ElementaryTypeName",
                    "src": "955:7:1"
                  }
                ],
                "id": 627,
                "name": "ArrayTypeName",
                "src": "955:9:1"
              }
            ],
            "id": 628,
            "name": "VariableDeclaration",
            "src": "955:22:1"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 781,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 629,
                "name": "ParameterList",
                "src": "1001:2:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 630,
                "name": "ParameterList",
                "src": "1011:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address payable"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 621,
                              "type": "address payable",
                              "value": "_chairperson"
                            },
                            "id": 631,
                            "name": "Identifier",
                            "src": "1022:12:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address payable)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "stateMutability": "payable"
                                    },
                                    "id": 632,
                                    "name": "ElementaryTypeName",
                                    "src": "1037:8:1"
                                  }
                                ],
                                "id": 633,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1037:8:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 634,
                                    "name": "Identifier",
                                    "src": "1045:3:1"
                                  }
                                ],
                                "id": 635,
                                "name": "MemberAccess",
                                "src": "1045:10:1"
                              }
                            ],
                            "id": 636,
                            "name": "FunctionCall",
                            "src": "1037:19:1"
                          }
                        ],
                        "id": 637,
                        "name": "Assignment",
                        "src": "1022:34:1"
                      }
                    ],
                    "id": 638,
                    "name": "ExpressionStatement",
                    "src": "1022:34:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "type": "function (address)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 628,
                                  "type": "address[] storage ref",
                                  "value": "listOfOwners"
                                },
                                "id": 639,
                                "name": "Identifier",
                                "src": "1067:12:1"
                              }
                            ],
                            "id": 641,
                            "name": "MemberAccess",
                            "src": "1067:17:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 642,
                                    "name": "ElementaryTypeName",
                                    "src": "1085:7:1"
                                  }
                                ],
                                "id": 643,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1085:7:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 644,
                                    "name": "Identifier",
                                    "src": "1093:3:1"
                                  }
                                ],
                                "id": 645,
                                "name": "MemberAccess",
                                "src": "1093:10:1"
                              }
                            ],
                            "id": 646,
                            "name": "FunctionCall",
                            "src": "1085:19:1"
                          }
                        ],
                        "id": 647,
                        "name": "FunctionCall",
                        "src": "1067:38:1"
                      }
                    ],
                    "id": 648,
                    "name": "ExpressionStatement",
                    "src": "1067:38:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract Certificates"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 614,
                              "type": "contract Certificates",
                              "value": "_CertificatesContract"
                            },
                            "id": 649,
                            "name": "Identifier",
                            "src": "1116:21:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract Certificates",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "function (address[] memory) payable returns (contract Certificates)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "Certificates",
                                      "referencedDeclaration": 601,
                                      "type": "contract Certificates"
                                    },
                                    "id": 650,
                                    "name": "UserDefinedTypeName",
                                    "src": "1144:12:1"
                                  }
                                ],
                                "id": 651,
                                "name": "NewExpression",
                                "src": "1140:16:1"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 628,
                                  "type": "address[] storage ref",
                                  "value": "listOfOwners"
                                },
                                "id": 652,
                                "name": "Identifier",
                                "src": "1157:12:1"
                              }
                            ],
                            "id": 653,
                            "name": "FunctionCall",
                            "src": "1140:30:1"
                          }
                        ],
                        "id": 654,
                        "name": "Assignment",
                        "src": "1116:54:1"
                      }
                    ],
                    "id": 655,
                    "name": "ExpressionStatement",
                    "src": "1116:54:1"
                  }
                ],
                "id": 656,
                "name": "Block",
                "src": "1011:167:1"
              }
            ],
            "id": 657,
            "name": "FunctionDefinition",
            "src": "990:188:1"
          },
          {
            "attributes": {
              "functionSelector": "858e7ce6",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "sendProposal",
              "scope": 781,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "provider",
                      "scope": 695,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 658,
                        "name": "ElementaryTypeName",
                        "src": "1248:7:1"
                      }
                    ],
                    "id": 659,
                    "name": "VariableDeclaration",
                    "src": "1248:16:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "providerInfo",
                      "scope": 695,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 660,
                        "name": "ElementaryTypeName",
                        "src": "1266:6:1"
                      }
                    ],
                    "id": 661,
                    "name": "VariableDeclaration",
                    "src": "1266:26:1"
                  }
                ],
                "id": 662,
                "name": "ParameterList",
                "src": "1247:46:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 663,
                "name": "ParameterList",
                "src": "1309:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
                                  "typeString": "literal_string \"Not enough funds\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 664,
                            "name": "Identifier",
                            "src": "1319:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 665,
                                    "name": "Identifier",
                                    "src": "1327:3:1"
                                  }
                                ],
                                "id": 666,
                                "name": "MemberAccess",
                                "src": "1327:9:1"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 612,
                                  "type": "uint256",
                                  "value": "_PriceWei"
                                },
                                "id": 667,
                                "name": "Identifier",
                                "src": "1340:9:1"
                              }
                            ],
                            "id": 668,
                            "name": "BinaryOperation",
                            "src": "1327:22:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4e6f7420656e6f7567682066756e6473",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Not enough funds\"",
                              "value": "Not enough funds"
                            },
                            "id": 669,
                            "name": "Literal",
                            "src": "1351:18:1"
                          }
                        ],
                        "id": 670,
                        "name": "FunctionCall",
                        "src": "1319:51:1"
                      }
                    ],
                    "id": 671,
                    "name": "ExpressionStatement",
                    "src": "1319:51:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transfer",
                              "type": "function (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 621,
                                  "type": "address payable",
                                  "value": "_chairperson"
                                },
                                "id": 672,
                                "name": "Identifier",
                                "src": "1380:12:1"
                              }
                            ],
                            "id": 674,
                            "name": "MemberAccess",
                            "src": "1380:21:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "value",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 675,
                                "name": "Identifier",
                                "src": "1402:3:1"
                              }
                            ],
                            "id": 676,
                            "name": "MemberAccess",
                            "src": "1402:9:1"
                          }
                        ],
                        "id": 677,
                        "name": "FunctionCall",
                        "src": "1380:32:1"
                      }
                    ],
                    "id": 678,
                    "name": "ExpressionStatement",
                    "src": "1380:32:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum Proposals.proposalState"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "_state",
                              "referencedDeclaration": 616,
                              "type": "enum Proposals.proposalState"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Proposals._proposal storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 625,
                                      "type": "mapping(address => struct Proposals._proposal storage ref)",
                                      "value": "_proposals"
                                    },
                                    "id": 679,
                                    "name": "Identifier",
                                    "src": "1472:10:1"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 659,
                                      "type": "address",
                                      "value": "provider"
                                    },
                                    "id": 680,
                                    "name": "Identifier",
                                    "src": "1483:8:1"
                                  }
                                ],
                                "id": 681,
                                "name": "IndexAccess",
                                "src": "1472:20:1"
                              }
                            ],
                            "id": 682,
                            "name": "MemberAccess",
                            "src": "1472:27:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "PENDING",
                              "type": "enum Proposals.proposalState"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 609,
                                  "type": "type(enum Proposals.proposalState)",
                                  "value": "proposalState"
                                },
                                "id": 683,
                                "name": "Identifier",
                                "src": "1502:13:1"
                              }
                            ],
                            "id": 684,
                            "name": "MemberAccess",
                            "src": "1502:21:1"
                          }
                        ],
                        "id": 685,
                        "name": "Assignment",
                        "src": "1472:51:1"
                      }
                    ],
                    "id": 686,
                    "name": "ExpressionStatement",
                    "src": "1472:51:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "_providerInfo",
                              "referencedDeclaration": 618,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Proposals._proposal storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 625,
                                      "type": "mapping(address => struct Proposals._proposal storage ref)",
                                      "value": "_proposals"
                                    },
                                    "id": 687,
                                    "name": "Identifier",
                                    "src": "1533:10:1"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 659,
                                      "type": "address",
                                      "value": "provider"
                                    },
                                    "id": 688,
                                    "name": "Identifier",
                                    "src": "1544:8:1"
                                  }
                                ],
                                "id": 689,
                                "name": "IndexAccess",
                                "src": "1533:20:1"
                              }
                            ],
                            "id": 690,
                            "name": "MemberAccess",
                            "src": "1533:34:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 661,
                              "type": "string memory",
                              "value": "providerInfo"
                            },
                            "id": 691,
                            "name": "Identifier",
                            "src": "1570:12:1"
                          }
                        ],
                        "id": 692,
                        "name": "Assignment",
                        "src": "1533:49:1"
                      }
                    ],
                    "id": 693,
                    "name": "ExpressionStatement",
                    "src": "1533:49:1"
                  }
                ],
                "id": 694,
                "name": "Block",
                "src": "1309:281:1"
              }
            ],
            "id": 695,
            "name": "FunctionDefinition",
            "src": "1226:364:1"
          },
          {
            "attributes": {
              "functionSelector": "03354faa",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "approveProposal",
              "scope": 781,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "provider",
                      "scope": 730,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 696,
                        "name": "ElementaryTypeName",
                        "src": "1627:7:1"
                      }
                    ],
                    "id": 697,
                    "name": "VariableDeclaration",
                    "src": "1627:16:1"
                  }
                ],
                "id": 698,
                "name": "ParameterList",
                "src": "1626:18:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 699,
                "name": "ParameterList",
                "src": "1651:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e47a6786529766886d436a345077f435d350ad8948cbcc8f80557eed8f833199",
                                  "typeString": "literal_string \"Not allowed to approve proposals\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 700,
                            "name": "Identifier",
                            "src": "1662:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 701,
                                    "name": "Identifier",
                                    "src": "1670:3:1"
                                  }
                                ],
                                "id": 702,
                                "name": "MemberAccess",
                                "src": "1670:10:1"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 621,
                                  "type": "address payable",
                                  "value": "_chairperson"
                                },
                                "id": 703,
                                "name": "Identifier",
                                "src": "1684:12:1"
                              }
                            ],
                            "id": 704,
                            "name": "BinaryOperation",
                            "src": "1670:26:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4e6f7420616c6c6f77656420746f20617070726f76652070726f706f73616c73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Not allowed to approve proposals\"",
                              "value": "Not allowed to approve proposals"
                            },
                            "id": 705,
                            "name": "Literal",
                            "src": "1698:34:1"
                          }
                        ],
                        "id": 706,
                        "name": "FunctionCall",
                        "src": "1662:71:1"
                      }
                    ],
                    "id": 707,
                    "name": "ExpressionStatement",
                    "src": "1662:71:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ca5c8ad1855a349d22e6e95653caace74b2a2a8baa1054b1017b98590706ce9a",
                                  "typeString": "literal_string \"This proposal does not exist\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 708,
                            "name": "Identifier",
                            "src": "1744:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_proposalState_$609",
                                "typeString": "enum Proposals.proposalState"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "NOT_SUBMITTED",
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 609,
                                      "type": "type(enum Proposals.proposalState)",
                                      "value": "proposalState"
                                    },
                                    "id": 709,
                                    "name": "Identifier",
                                    "src": "1752:13:1"
                                  }
                                ],
                                "id": 710,
                                "name": "MemberAccess",
                                "src": "1752:27:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "_state",
                                  "referencedDeclaration": 616,
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Proposals._proposal storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 625,
                                          "type": "mapping(address => struct Proposals._proposal storage ref)",
                                          "value": "_proposals"
                                        },
                                        "id": 711,
                                        "name": "Identifier",
                                        "src": "1783:10:1"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 697,
                                          "type": "address",
                                          "value": "provider"
                                        },
                                        "id": 712,
                                        "name": "Identifier",
                                        "src": "1794:8:1"
                                      }
                                    ],
                                    "id": 713,
                                    "name": "IndexAccess",
                                    "src": "1783:20:1"
                                  }
                                ],
                                "id": 714,
                                "name": "MemberAccess",
                                "src": "1783:27:1"
                              }
                            ],
                            "id": 715,
                            "name": "BinaryOperation",
                            "src": "1752:58:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "546869732070726f706f73616c20646f6573206e6f74206578697374",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"This proposal does not exist\"",
                              "value": "This proposal does not exist"
                            },
                            "id": 716,
                            "name": "Literal",
                            "src": "1812:30:1"
                          }
                        ],
                        "id": 717,
                        "name": "FunctionCall",
                        "src": "1744:99:1"
                      }
                    ],
                    "id": 718,
                    "name": "ExpressionStatement",
                    "src": "1744:99:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "addProvider",
                              "referencedDeclaration": 144,
                              "type": "function (address,string memory) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 614,
                                  "type": "contract Certificates",
                                  "value": "_CertificatesContract"
                                },
                                "id": 719,
                                "name": "Identifier",
                                "src": "1854:21:1"
                              }
                            ],
                            "id": 721,
                            "name": "MemberAccess",
                            "src": "1854:33:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 697,
                              "type": "address",
                              "value": "provider"
                            },
                            "id": 722,
                            "name": "Identifier",
                            "src": "1888:8:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_providerInfo",
                              "referencedDeclaration": 618,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Proposals._proposal storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 625,
                                      "type": "mapping(address => struct Proposals._proposal storage ref)",
                                      "value": "_proposals"
                                    },
                                    "id": 723,
                                    "name": "Identifier",
                                    "src": "1898:10:1"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 697,
                                      "type": "address",
                                      "value": "provider"
                                    },
                                    "id": 724,
                                    "name": "Identifier",
                                    "src": "1909:8:1"
                                  }
                                ],
                                "id": 725,
                                "name": "IndexAccess",
                                "src": "1898:20:1"
                              }
                            ],
                            "id": 726,
                            "name": "MemberAccess",
                            "src": "1898:34:1"
                          }
                        ],
                        "id": 727,
                        "name": "FunctionCall",
                        "src": "1854:79:1"
                      }
                    ],
                    "id": 728,
                    "name": "ExpressionStatement",
                    "src": "1854:79:1"
                  }
                ],
                "id": 729,
                "name": "Block",
                "src": "1651:290:1"
              }
            ],
            "id": 730,
            "name": "FunctionDefinition",
            "src": "1602:339:1"
          },
          {
            "attributes": {
              "functionSelector": "efec414b",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "retrieveProposal",
              "scope": 781,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "provider",
                      "scope": 764,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 731,
                        "name": "ElementaryTypeName",
                        "src": "1979:7:1"
                      }
                    ],
                    "id": 732,
                    "name": "VariableDeclaration",
                    "src": "1979:16:1"
                  }
                ],
                "id": 733,
                "name": "ParameterList",
                "src": "1978:18:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 764,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 734,
                        "name": "ElementaryTypeName",
                        "src": "2018:4:1"
                      }
                    ],
                    "id": 735,
                    "name": "VariableDeclaration",
                    "src": "2018:4:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 764,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 736,
                        "name": "ElementaryTypeName",
                        "src": "2024:6:1"
                      }
                    ],
                    "id": 737,
                    "name": "VariableDeclaration",
                    "src": "2024:13:1"
                  }
                ],
                "id": 738,
                "name": "ParameterList",
                "src": "2017:21:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ca5c8ad1855a349d22e6e95653caace74b2a2a8baa1054b1017b98590706ce9a",
                                  "typeString": "literal_string \"This proposal does not exist\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 739,
                            "name": "Identifier",
                            "src": "2050:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_proposalState_$609",
                                "typeString": "enum Proposals.proposalState"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "NOT_SUBMITTED",
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 609,
                                      "type": "type(enum Proposals.proposalState)",
                                      "value": "proposalState"
                                    },
                                    "id": 740,
                                    "name": "Identifier",
                                    "src": "2058:13:1"
                                  }
                                ],
                                "id": 741,
                                "name": "MemberAccess",
                                "src": "2058:27:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "_state",
                                  "referencedDeclaration": 616,
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Proposals._proposal storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 625,
                                          "type": "mapping(address => struct Proposals._proposal storage ref)",
                                          "value": "_proposals"
                                        },
                                        "id": 742,
                                        "name": "Identifier",
                                        "src": "2089:10:1"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 732,
                                          "type": "address",
                                          "value": "provider"
                                        },
                                        "id": 743,
                                        "name": "Identifier",
                                        "src": "2100:8:1"
                                      }
                                    ],
                                    "id": 744,
                                    "name": "IndexAccess",
                                    "src": "2089:20:1"
                                  }
                                ],
                                "id": 745,
                                "name": "MemberAccess",
                                "src": "2089:27:1"
                              }
                            ],
                            "id": 746,
                            "name": "BinaryOperation",
                            "src": "2058:58:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "546869732070726f706f73616c20646f6573206e6f74206578697374",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"This proposal does not exist\"",
                              "value": "This proposal does not exist"
                            },
                            "id": 747,
                            "name": "Literal",
                            "src": "2118:30:1"
                          }
                        ],
                        "id": 748,
                        "name": "FunctionCall",
                        "src": "2050:99:1"
                      }
                    ],
                    "id": 749,
                    "name": "ExpressionStatement",
                    "src": "2050:99:1"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 738
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(uint256,string storage ref)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_proposalState_$609",
                                      "typeString": "enum Proposals.proposalState"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint"
                                    },
                                    "id": 750,
                                    "name": "ElementaryTypeName",
                                    "src": "2168:4:1"
                                  }
                                ],
                                "id": 751,
                                "name": "ElementaryTypeNameExpression",
                                "src": "2168:4:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "_state",
                                  "referencedDeclaration": 616,
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Proposals._proposal storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 625,
                                          "type": "mapping(address => struct Proposals._proposal storage ref)",
                                          "value": "_proposals"
                                        },
                                        "id": 752,
                                        "name": "Identifier",
                                        "src": "2173:10:1"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 732,
                                          "type": "address",
                                          "value": "provider"
                                        },
                                        "id": 753,
                                        "name": "Identifier",
                                        "src": "2184:8:1"
                                      }
                                    ],
                                    "id": 754,
                                    "name": "IndexAccess",
                                    "src": "2173:20:1"
                                  }
                                ],
                                "id": 755,
                                "name": "MemberAccess",
                                "src": "2173:27:1"
                              }
                            ],
                            "id": 756,
                            "name": "FunctionCall",
                            "src": "2168:33:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_providerInfo",
                              "referencedDeclaration": 618,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Proposals._proposal storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 625,
                                      "type": "mapping(address => struct Proposals._proposal storage ref)",
                                      "value": "_proposals"
                                    },
                                    "id": 757,
                                    "name": "Identifier",
                                    "src": "2203:10:1"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 732,
                                      "type": "address",
                                      "value": "provider"
                                    },
                                    "id": 758,
                                    "name": "Identifier",
                                    "src": "2214:8:1"
                                  }
                                ],
                                "id": 759,
                                "name": "IndexAccess",
                                "src": "2203:20:1"
                              }
                            ],
                            "id": 760,
                            "name": "MemberAccess",
                            "src": "2203:34:1"
                          }
                        ],
                        "id": 761,
                        "name": "TupleExpression",
                        "src": "2167:71:1"
                      }
                    ],
                    "id": 762,
                    "name": "Return",
                    "src": "2160:78:1"
                  }
                ],
                "id": 763,
                "name": "Block",
                "src": "2039:207:1"
              }
            ],
            "id": 764,
            "name": "FunctionDefinition",
            "src": "1953:293:1"
          },
          {
            "attributes": {
              "functionSelector": "3bd2993c",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "retrieveCertificatesContractAddress",
              "scope": 781,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 765,
                "name": "ParameterList",
                "src": "2339:2:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 772,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract Certificates",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Certificates",
                          "referencedDeclaration": 601,
                          "type": "contract Certificates"
                        },
                        "id": 766,
                        "name": "UserDefinedTypeName",
                        "src": "2363:12:1"
                      }
                    ],
                    "id": 767,
                    "name": "VariableDeclaration",
                    "src": "2363:12:1"
                  }
                ],
                "id": 768,
                "name": "ParameterList",
                "src": "2362:14:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 768
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 614,
                          "type": "contract Certificates",
                          "value": "_CertificatesContract"
                        },
                        "id": 769,
                        "name": "Identifier",
                        "src": "2395:21:1"
                      }
                    ],
                    "id": 770,
                    "name": "Return",
                    "src": "2388:28:1"
                  }
                ],
                "id": 771,
                "name": "Block",
                "src": "2377:47:1"
              }
            ],
            "id": 772,
            "name": "FunctionDefinition",
            "src": "2295:129:1"
          },
          {
            "attributes": {
              "functionSelector": "db85bc4d",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "retrieveChairPerson",
              "scope": 781,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 773,
                "name": "ParameterList",
                "src": "2464:2:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 780,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 774,
                        "name": "ElementaryTypeName",
                        "src": "2488:7:1"
                      }
                    ],
                    "id": 775,
                    "name": "VariableDeclaration",
                    "src": "2488:7:1"
                  }
                ],
                "id": 776,
                "name": "ParameterList",
                "src": "2487:9:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 776
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 621,
                          "type": "address payable",
                          "value": "_chairperson"
                        },
                        "id": 777,
                        "name": "Identifier",
                        "src": "2515:12:1"
                      }
                    ],
                    "id": 778,
                    "name": "Return",
                    "src": "2508:19:1"
                  }
                ],
                "id": 779,
                "name": "Block",
                "src": "2497:38:1"
              }
            ],
            "id": 780,
            "name": "FunctionDefinition",
            "src": "2436:99:1"
          }
        ],
        "id": 781,
        "name": "ContractDefinition",
        "src": "558:1986:1"
      }
    ],
    "id": 782,
    "name": "SourceUnit",
    "src": "39:2505:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x147d57060cEEbe8a6B761859b7D7655AcfA75508",
      "transactionHash": "0x20aca4f090990076bb1164872c06ca0855a6868089ac969d4d4d3f66da1d4d1f"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-27T09:44:13.345Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}