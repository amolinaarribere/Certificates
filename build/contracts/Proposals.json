{
  "contractName": "Proposals",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_ApproveProposalId",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_RejectProposalId",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_SendProposalId",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_proposals",
      "outputs": [
        {
          "internalType": "enum Proposals.proposalState",
          "name": "_state",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_providerInfo",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "providerInfo",
          "type": "string"
        }
      ],
      "name": "sendProposal",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "approveProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "rejectProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "retrieveProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieveCertificatesContractAddress",
      "outputs": [
        {
          "internalType": "contract Certificates",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieveChairPerson",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_ApproveProposalId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_RejectProposalId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_SendProposalId\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_proposals\",\"outputs\":[{\"internalType\":\"enum Proposals.proposalState\",\"name\":\"_state\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_providerInfo\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"approveProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"rejectProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveCertificatesContractAddress\",\"outputs\":[{\"internalType\":\"contract Certificates\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveChairPerson\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"retrieveProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"providerInfo\",\"type\":\"string\"}],\"name\":\"sendProposal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/d-aam/GitHub/Certificates/contracts/Proposals.sol\":\"Proposals\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/d-aam/GitHub/Certificates/contracts/Certificates.sol\":{\"keccak256\":\"0x02a8092a71f65dfcde23fcdce8f1e7452c10d8e7771143faa485250849648438\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://97aae87877c4b89290224eb9358321952b73d50a11b6ec68ee09011a5746a3ab\",\"dweb:/ipfs/QmanoMt3KKKz7nxUsg1VBQVmBoNb9a7ZxtGf765Kx8hwuc\"]},\"/C/Users/d-aam/GitHub/Certificates/contracts/Proposals.sol\":{\"keccak256\":\"0xa7b585af89ac13300f295282ea0cafb1a57d7a57c22bb08b60e85dfac16e6bf9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e22cdc7f2bdac0310356f943a537a9e936458e292f1f1c635f77aecebd8e1ad8\",\"dweb:/ipfs/QmS9hFeYfDpFLMxCuyu2LsSXS8LuRCBAbdR57FedU93k8E\"]}},\"version\":1}",
  "bytecode": "0x608060405233600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360016040516100b89061019e565b8080602001838152602001828103825284818154815260200191508054801561013657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116100ec575b50509350505050604051809103906000f080158015610159573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101ab565b61382b8061126783390190565b6110ad806101ba6000396000f3fe6080604052600436106100705760003560e01c8063858e7ce61161004e578063858e7ce6146101e3578063cddab28b146102be578063db85bc4d1461030f578063efec414b1461035057610070565b806303354faa146100755780633bd2993c146100c65780634f3f6c2914610107575b600080fd5b34801561008157600080fd5b506100c46004803603602081101561009857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610421565b005b3480156100d257600080fd5b506100db6107de565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561011357600080fd5b506101566004803603602081101561012a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610807565b6040518083600381111561016657fe5b815260200180602001828103825283818151815260200191508051906020019080838360005b838110156101a757808201518184015260208101905061018c565b50505050905090810190601f1680156101d45780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6102bc600480360360408110156101f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561023657600080fd5b82018360208201111561024857600080fd5b8035906020019184600183028401116401000000008311171561026a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506108d0565b005b3480156102ca57600080fd5b5061030d600480360360208110156102e157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b2e565b005b34801561031b57600080fd5b50610324610d80565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561035c57600080fd5b5061039f6004803603602081101561037357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610daa565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156103e55780820151818401526020810190506103ca565b50505050905090810190601f1680156104125780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4e6f7420616c6c6f77656420746f20617070726f76652070726f706f73616c7381525060200191505060405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600381111561053f57fe5b6001600381111561054c57fe5b146105bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546869732070726f706f73616c2063616e6e6f74206265206d6f64696669656481525060200191505060405180910390fd5b60028060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083600381111561061d57fe5b021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc00050082600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252838181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156107555780601f1061072a57610100808354040283529160200191610755565b820191906000526020600020905b81548152906001019060200180831161073857829003601f168201915b50509350505050600060405180830381600087803b15801561077657600080fd5b505af115801561078a573d6000803e3d6000fd5b505050507f177c08bb2a258cee1a3d193682dd89fb318e12d135f68b304a183e2576168acc81604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026020528060005260406000206000915090508060000160009054906101000a900460ff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108c65780601f1061089b576101008083540402835291602001916108c6565b820191906000526020600020905b8154815290600101906020018083116108a957829003601f168201915b5050505050905082565b600a341015610947576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420656e6f7567682066756e64730000000000000000000000000000000081525060200191505060405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660038111156109a257fe5b600060038111156109af57fe5b14610a22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f50726f706f73616c20616c7265616479207375626d697474656400000000000081525060200191505060405180910390fd5b6001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115610a8157fe5b021790555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190610adc929190610fcc565b507fbaf065d025fe427c7c36f893bdec1c49e6c164c4a6531f4216f64e6e876a9a4f82604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bf1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4e6f7420616c6c6f77656420746f2072656a6563742070726f706f73616c730081525060200191505060405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115610c4c57fe5b60016003811115610c5957fe5b14610ccc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546869732070726f706f73616c2063616e6e6f74206265206d6f64696669656481525060200191505060405180910390fd5b6003600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115610d2b57fe5b02179055507fcc3f9ae01bdc82f13971bfb71fc93d203b797e70714c5c6c2abda1b9e302b19c81604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006060600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115610e0957fe5b60006003811115610e1657fe5b1415610e8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f546869732070726f706f73616c20646f6573206e6f742065786973740000000081525060200191505060405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115610ee557fe5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fbc5780601f10610f9157610100808354040283529160200191610fbc565b820191906000526020600020905b815481529060010190602001808311610f9f57829003601f168201915b5050505050905091509150915091565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826110025760008555611049565b82601f1061101b57805160ff1916838001178555611049565b82800160010185558215611049579182015b8281111561104857825182559160200191906001019061102d565b5b509050611056919061105a565b5090565b5b8082111561107357600081600090555060010161105b565b509056fea2646970667358221220722ad6c395f1479e6d1ac40415ec7d9ccdedc2dd2a0f5f2c7350efa7235fcc7a64736f6c634300070600336080604052600267ffffffffffffffff811180156200001d57600080fd5b506040519080825280602002602001820160405280156200004d5781602001602082028036833780820191505090505b5060019080519060200190620000659291906200031c565b506040516200382b3803806200382b833981810160405260408110156200008b57600080fd5b8101908080516040519392919084640100000000821115620000ac57600080fd5b83820191506020820185811115620000c357600080fd5b8251866020820283011164010000000082111715620000e157600080fd5b8083526020830192505050908051906020019060200280838360005b838110156200011a578082015181840152602081019050620000fd565b5050505090500160405260200180519060200190929190505050815181111562000190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180620037ef603c913960400191505060405180910390fd5b6000811162000207576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4174206c656173742031206d696e696d756d206f776e6572000000000000000081525060200191505060405180910390fd5b600260018160018154018082558091505003906000526020600020505060026001816001815401808255809150500390600052602060002050508060008190555060005b82518110156200031357600160026000815481106200026657fe5b9060005260206000200160000160008584815181106200028257fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908315150217905550600180600081548110620002ee57fe5b906000526020600020016000828254019250508190555080806001019150506200024b565b5050506200038d565b8280548282559060005260206000209081019282156200035b579160200282015b828111156200035a5782518255916020019190600101906200033d565b5b5090506200036a91906200036e565b5090565b5b80821115620003895760008160009055506001016200036f565b5090565b613452806200039d6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806382ff66a311610097578063d744d2f311610066578063d744d2f314610a4d578063eefe768114610a6b578063fc00050014610a89578063fd90ae7614610b6457610100565b806382ff66a3146105345780638a355a571461073d5780639a90be9e146107815780639df665281461083a57610100565b80633542758f116100d35780633542758f146102f657806337583499146103d15780633bc6fe0e1461048e5780636e55d2d4146104dc57610100565b80631270db7a146101055780631660c22a1461017d578063173825d9146102585780632f54bf6e1461029c575b600080fd5b6101676004803603604081101561011b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d20565b6040518082815260200191505060405180910390f35b6102566004803603604081101561019357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156101d057600080fd5b8201836020820111156101e257600080fd5b8035906020019184600183028401116401000000008311171561020457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610e42565b005b61029a6004803603602081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611039565b005b6102de600480360360208110156102b257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611047565b60405180821515815260200191505060405180910390f35b6103cf6004803603604081101561030c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561034957600080fd5b82018360208201111561035b57600080fd5b8035906020019184600183028401116401000000008311171561037d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506110b9565b005b610413600480360360208110156103e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110c9565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610453578082015181840152602081019050610438565b50505050905090810190601f1680156104805780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104da600480360360408110156104a457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112a8565b005b61051e600480360360208110156104f257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061163e565b6040518082815260200191505060405180910390f35b61073b6004803603608081101561054a57600080fd5b810190808035906020019064010000000081111561056757600080fd5b82018360208201111561057957600080fd5b8035906020019184600183028401116401000000008311171561059b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156105fe57600080fd5b82018360208201111561061057600080fd5b8035906020019184600183028401116401000000008311171561063257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561069557600080fd5b8201836020820111156106a757600080fd5b803590602001918460018302840111640100000000831117156106c957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061168a565b005b61077f6004803603602081101561075357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119ff565b005b6107e36004803603604081101561079757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a0d565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561082657808201518184015260208101905061080b565b505050509050019250505060405180910390f35b610a4b600480360360a081101561085057600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561089757600080fd5b8201836020820111156108a957600080fd5b803590602001918460018302840111640100000000831117156108cb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561092e57600080fd5b82018360208201111561094057600080fd5b8035906020019184600183028401116401000000008311171561096257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156109c557600080fd5b8201836020820111156109d757600080fd5b803590602001918460018302840111640100000000831117156109f957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611b99565b005b610a55611fb5565b6040518082815260200191505060405180910390f35b610a73611fd4565b6040518082815260200191505060405180910390f35b610b6260048036036040811015610a9f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610adc57600080fd5b820183602082011115610aee57600080fd5b80359060200191846001830284011164010000000083111715610b1057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611ff4565b005b610bb060048036036040811015610b7a57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612004565b604051808573ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b83811015610c14578082015181840152602081019050610bf9565b50505050905090810190601f168015610c415780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b83811015610c7a578082015181840152602081019050610c5f565b50505050905090810190601f168015610ca75780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b83811015610ce0578082015181840152602081019050610cc5565b50505050905090810190601f168015610d0d5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b6000806000905060005b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610e37578473ffffffffffffffffffffffffffffffffffffffff16600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610dd557fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610e2a576001820191505b8080600101915050610d2a565b508091505092915050565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ee3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4e6f7420616c6c6f77656420746f207570646174652070726f7669646572730081525060200191505060405180910390fd5b6002600181548110610ef157fe5b9060005260206000200160000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615156001151514610fc5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f50726f7669646572206e6f74206163746976617465640000000000000000000081525060200191505060405180910390fd5b806002600181548110610fd457fe5b9060005260206000200160000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010190805190602001906110349291906131f1565b505050565b611044816000612434565b50565b6000600260008154811061105757fe5b9060005260206000200160000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff169050919050565b6110c582826000612add565b5050565b606060026001815481106110d957fe5b9060005260206000200160000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16151560011515146111ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f50726f766964657220646f6573206e6f7420657869737400000000000000000081525060200191505060405180910390fd5b60026001815481106111bb57fe5b9060005260206000200160000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561129c5780601f106112715761010080835404028352916020019161129c565b820191906000526020600020905b81548152906001019060200180831161127f57829003601f168201915b50505050509050919050565b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050821061135f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f436572746966696361746520646f6573206e6f7420657869737400000000000081525060200191505060405180910390fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106113a957fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061143f57508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b611494576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806133ec6031913960400191505060405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106114e057fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061155e57fe5b9060005260206000209060040201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006115a4919061327f565b6002820160006115b4919061327f565b6003820160006115c491906132c7565b50507f709d6b1b4d6f0b57a9f43c17f08c02648af8d37929b58caa594a4b03b8424687818385604051808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b600260018154811061169857fe5b9060005260206000200160000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161515600115151461176c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4e6f7420616c6c6f77656420746f20616464204365727469666963617465730081525060200191505060405180910390fd5b8151600010801561178a5750825160001080611789575083516000105b5b6117fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f436572746966696361746520697320656d70747900000000000000000000000081525060200191505060405180910390fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200184815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906118fe9291906131f1565b50604082015181600201908051906020019061191b9291906131f1565b50606082015181600301908051906020019061193892919061330f565b50505060006001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490500390507f76f4df91a34263fc533728c4689dd106f547d04117b44c2f5606efdbc184bdde338383604051808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050505050565b611a0a816001612434565b50565b60606000611a1b8484610d20565b67ffffffffffffffff81118015611a3157600080fd5b50604051908082528060200260200182016040528015611a605781602001602082028036833780820191505090505b5090506000805b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015611b8d578573ffffffffffffffffffffffffffffffffffffffff16600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611b1257fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611b805780838381518110611b6d57fe5b6020026020010181815250506001820191505b8080600101915050611a67565b50819250505092915050565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508510611c50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f436572746966696361746520646f6573206e6f7420657869737400000000000081525060200191505060405180910390fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208581548110611c9a57fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611d4f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806133bb6031913960400191505060405180910390fd5b825160001015611dca5782600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208681548110611da457fe5b90600052602060002090600402016001019080519060200190611dc89291906131f1565b505b815160001015611e455781600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208681548110611e1f57fe5b90600052602060002090600402016002019080519060200190611e439291906131f1565b505b805160001015611ec05780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208681548110611e9a57fe5b90600052602060002090600402016003019080519060200190611ebe92919061330f565b505b7f736a6334743f8e5fff8d835332a115f2c34c1bbf6e2384459e1a24e0540bd47c600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208681548110611f2b57fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168587604051808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050505050565b600060018081548110611fc457fe5b9060005260206000200154905090565b60006001600081548110611fe457fe5b9060005260206000200154905090565b61200082826001612add565b5050565b60006060806060600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905086106120c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f436572746966696361746520646f6573206e6f7420657869737400000000000081525060200191505060405180910390fd5b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020868154811061210c57fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020878154811061218857fe5b9060005260206000209060040201600101600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002088815481106121e357fe5b9060005260206000209060040201600201600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020898154811061223e57fe5b9060005260206000209060040201600301828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122e45780601f106122b9576101008083540402835291602001916122e4565b820191906000526020600020905b8154815290600101906020018083116122c757829003601f168201915b50505050509250818054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123805780601f1061235557610100808354040283529160200191612380565b820191906000526020600020905b81548152906001019060200180831161236357829003601f168201915b50505050509150808054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561241c5780601f106123f15761010080835404028352916020019161241c565b820191906000526020600020905b8154815290600101906020018083116123ff57829003601f168201915b50505050509050935093509350935092959194509250565b80600180549050116124ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f70726f7669646564206c6973742049642069732077726f6e670000000000000081525060200191505060405180910390fd5b60026000815481106124bc57fe5b9060005260206000200160000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16151560011515148061255457508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6125c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4e6f7420616c6c6f77656420746f2072656d6f766520656e746974790000000081525060200191505060405180910390fd5b600281815481106125d357fe5b9060005260206000200160000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16151560011515146126a7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f456e74697479206e6f742061637469766174656400000000000000000000000081525060200191505060405180910390fd5b600281815481106126b457fe5b9060005260206000200160000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151560001515146127c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f4f776e65722068617320616c726561647920766f74656400000000000000000081525060200191505060405180910390fd5b6001600282815481106127d457fe5b9060005260206000200160000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004016000828254019250508190555060016002828154811061283d57fe5b9060005260206000200160000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061297757506129766002828154811061292357fe5b9060005260206000200160000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401546131d3565b5b15612ad9576002818154811061298957fe5b9060005260206000200160000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549060ff02191690556001820160006129f8919061327f565b6002820160009055600482016000905550506001808281548110612a1857fe5b90600052602060002001600082825403925050819055508060001415612a8a577fdeb2fd983f5ea76ad0475f0a39a88d8c773f60fda03f8048cf465814bde26af382604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1612ad8565b7f7fe3d1469180155418d41d4da2042f53bf3d76fdc4aab220f5d272e0699e4b6e82604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b5b5050565b8060018054905011612b57576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f70726f7669646564206c6973742049642069732077726f6e670000000000000081525060200191505060405180910390fd5b6002600081548110612b6557fe5b9060005260206000200160000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615156001151514612c39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4e6f7420616c6c6f77656420746f2061646420656e746974696573000000000081525060200191505060405180910390fd5b60028181548110612c4657fe5b9060005260206000200160000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615156000151514612d1a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f456e7469747920616c726561647920616374697661746564000000000000000081525060200191505060405180910390fd5b60028181548110612d2757fe5b9060005260206000200160000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156000151514612e38576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f4f776e65722068617320616c726561647920766f74656400000000000000000081525060200191505060405180910390fd5b60028181548110612e4557fe5b9060005260206000200160000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015460001415612f0b578160028281548110612ea957fe5b9060005260206000200160000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190612f099291906131f1565b505b600160028281548110612f1a57fe5b9060005260206000200160000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282540192505081905550600160028281548110612f8357fe5b9060005260206000200160000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506130876002828154811061303457fe5b9060005260206000200160000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546131d3565b156131ce5760016002828154811061309b57fe5b9060005260206000200160000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908315150217905550600180828154811061310d57fe5b9060005260206000200160008282540192505081905550806000141561317f577f68c1703cd1b1bd3a48da3e9a8712cf464730736862199903eac069e0b2e1ab2f83604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16131cd565b7f4e682d2fe27aaaadc497c9446d76e9fad6e638e651d523202c138a0acc6ff52a83604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b5b505050565b600080548210156131e757600090506131ec565b600190505b919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282613227576000855561326e565b82601f1061324057805160ff191683800117855561326e565b8280016001018555821561326e579182015b8281111561326d578251825591602001919060010190613252565b5b50905061327b919061339d565b5090565b50805460018160011615610100020316600290046000825580601f106132a557506132c4565b601f0160209004906000526020600020908101906132c3919061339d565b5b50565b50805460018160011615610100020316600290046000825580601f106132ed575061330c565b601f01602090049060005260206000209081019061330b919061339d565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282613345576000855561338c565b82601f1061335e57805160ff191683800117855561338c565b8280016001018555821561338c579182015b8281111561338b578251825591602001919060010190613370565b5b509050613399919061339d565b5090565b5b808211156133b657600081600090555060010161339e565b509056fe4e6f7420616c6c6f77656420746f20757064617465207468697320706172746963756c61722043657274696669636174654e6f7420616c6c6f77656420746f2072656d6f7665207468697320706172746963756c6172204365727469666963617465a2646970667358221220d0225081ea83ab4e54c942305a1484a4a9b99fba36d4a914033c30a2d7f1529864736f6c634300070600334e6f7420656e6f756768206f776e6572732070726f766964656420746f206d65657420746865206d696e4f776e65727320726571756972656d656e74",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063858e7ce61161004e578063858e7ce6146101e3578063cddab28b146102be578063db85bc4d1461030f578063efec414b1461035057610070565b806303354faa146100755780633bd2993c146100c65780634f3f6c2914610107575b600080fd5b34801561008157600080fd5b506100c46004803603602081101561009857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610421565b005b3480156100d257600080fd5b506100db6107de565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561011357600080fd5b506101566004803603602081101561012a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610807565b6040518083600381111561016657fe5b815260200180602001828103825283818151815260200191508051906020019080838360005b838110156101a757808201518184015260208101905061018c565b50505050905090810190601f1680156101d45780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6102bc600480360360408110156101f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561023657600080fd5b82018360208201111561024857600080fd5b8035906020019184600183028401116401000000008311171561026a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506108d0565b005b3480156102ca57600080fd5b5061030d600480360360208110156102e157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b2e565b005b34801561031b57600080fd5b50610324610d80565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561035c57600080fd5b5061039f6004803603602081101561037357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610daa565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156103e55780820151818401526020810190506103ca565b50505050905090810190601f1680156104125780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4e6f7420616c6c6f77656420746f20617070726f76652070726f706f73616c7381525060200191505060405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600381111561053f57fe5b6001600381111561054c57fe5b146105bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546869732070726f706f73616c2063616e6e6f74206265206d6f64696669656481525060200191505060405180910390fd5b60028060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083600381111561061d57fe5b021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc00050082600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252838181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156107555780601f1061072a57610100808354040283529160200191610755565b820191906000526020600020905b81548152906001019060200180831161073857829003601f168201915b50509350505050600060405180830381600087803b15801561077657600080fd5b505af115801561078a573d6000803e3d6000fd5b505050507f177c08bb2a258cee1a3d193682dd89fb318e12d135f68b304a183e2576168acc81604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026020528060005260406000206000915090508060000160009054906101000a900460ff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108c65780601f1061089b576101008083540402835291602001916108c6565b820191906000526020600020905b8154815290600101906020018083116108a957829003601f168201915b5050505050905082565b600a341015610947576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420656e6f7567682066756e64730000000000000000000000000000000081525060200191505060405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660038111156109a257fe5b600060038111156109af57fe5b14610a22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f50726f706f73616c20616c7265616479207375626d697474656400000000000081525060200191505060405180910390fd5b6001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115610a8157fe5b021790555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190610adc929190610fcc565b507fbaf065d025fe427c7c36f893bdec1c49e6c164c4a6531f4216f64e6e876a9a4f82604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bf1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4e6f7420616c6c6f77656420746f2072656a6563742070726f706f73616c730081525060200191505060405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115610c4c57fe5b60016003811115610c5957fe5b14610ccc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546869732070726f706f73616c2063616e6e6f74206265206d6f64696669656481525060200191505060405180910390fd5b6003600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115610d2b57fe5b02179055507fcc3f9ae01bdc82f13971bfb71fc93d203b797e70714c5c6c2abda1b9e302b19c81604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006060600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115610e0957fe5b60006003811115610e1657fe5b1415610e8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f546869732070726f706f73616c20646f6573206e6f742065786973740000000081525060200191505060405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115610ee557fe5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fbc5780601f10610f9157610100808354040283529160200191610fbc565b820191906000526020600020905b815481529060010190602001808311610f9f57829003601f168201915b5050505050905091509150915091565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826110025760008555611049565b82601f1061101b57805160ff1916838001178555611049565b82800160010185558215611049579182015b8281111561104857825182559160200191906001019061102d565b5b509050611056919061105a565b5090565b5b8082111561107357600081600090555060010161105b565b509056fea2646970667358221220722ad6c395f1479e6d1ac40415ec7d9ccdedc2dd2a0f5f2c7350efa7235fcc7a64736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "558:2617:1:-:0;;;1137:10;1114:12;;:34;;;;;;;;;;;;;;;;;;1159:12;1185:10;1159:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1249:12;1263:1;1232:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1208:21;;:57;;;;;;;;;;;;;;;;;;558:2617;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "558:2617:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1756:451;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2926:129;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;993:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1321:423;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2215:355;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3067:99;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2582:295;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1756:451;1838:12;;;;;;;;;;;1824:26;;:10;:26;;;1816:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1931:10;:20;1942:8;1931:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;1906:52;;;;;;;;:21;:52;;;;;;;;;1898:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2038:22;2008:10;:20;2019:8;2008:20;;;;;;;;;;;;;;;:27;;;:52;;;;;;;;;;;;;;;;;;;;;;;;2071:21;;;;;;;;;;:33;;;2105:8;2115:10;:20;2126:8;2115:20;;;;;;;;;;;;;;;:34;;2071:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2171:28;2190:8;2171:28;;;;;;;;;;;;;;;;;;;;1756:451;:::o;2926:129::-;2994:12;3026:21;;;;;;;;;;;3019:28;;2926:129;:::o;993:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1321:423::-;800:2;1422:9;:22;;1414:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1514:10;:20;1525:8;1514:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;1483:58;;;;;;;;:27;:58;;;;;;;;;1475:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1614:21;1584:10;:20;1595:8;1584:20;;;;;;;;;;;;;;;:27;;;:51;;;;;;;;;;;;;;;;;;;;;;;;1682:12;1645:10;:20;1656:8;1645:20;;;;;;;;;;;;;;;:34;;:49;;;;;;;;;;;;:::i;:::-;;1711:25;1727:8;1711:25;;;;;;;;;;;;;;;;;;;;1321:423;;:::o;2215:355::-;2296:12;;;;;;;;;;;2282:26;;:10;:26;;;2274:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2388:10;:20;2399:8;2388:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;2363:52;;;;;;;;:21;:52;;;;;;;;;2355:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2495:22;2465:10;:20;2476:8;2465:20;;;;;;;;;;;;;;;:27;;;:52;;;;;;;;;;;;;;;;;;;;;;;;2535:27;2553:8;2535:27;;;;;;;;;;;;;;;;;;;;2215:355;:::o;3067:99::-;3119:7;3146:12;;;;;;;;;;;3139:19;;3067:99;:::o;2582:295::-;2647:4;2653:13;2718:10;:20;2729:8;2718:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;2687:58;;;;;;;;:27;:58;;;;;;;;;;2679:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2804:10;:20;2815:8;2804:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;2799:33;;;;;;;;2834:10;:20;2845:8;2834:20;;;;;;;;;;;;;;;:34;;2791:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2582:295;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n/**\r\n * @title Storage\r\n * @dev Store & retrieve value in a variable\r\n */\r\n \r\nimport \"./Certificates.sol\";\r\n\r\n /* \r\n Actors : Chair Person, Anyone\r\n Token : Proposals\r\n\r\n 1- Anyone can submit proposals (paying a fee)\r\n 2- Chair Person can approve proposals creating Providers in Certificates Contract\r\n\r\n\r\n Proposals lifecycle\r\n    Proposals Creation : Anyone (paying fee)\r\n    Proposals Update : \r\n    Proposals Remove :   \r\n    Proposals Validations : Only Chair Person  \r\n\r\n */\r\n\r\ncontract Proposals{\r\n\r\n    event _SendProposalId(address);\r\n    event _ApproveProposalId(address);\r\n    event _RejectProposalId(address);\r\n\r\n    enum proposalState { NOT_SUBMITTED, PENDING, APPROVED, REJECTED }\r\n    uint constant _PriceWei = 10;\r\n\r\n    Certificates  _CertificatesContract;\r\n    \r\n    struct _proposal{\r\n        proposalState _state;\r\n        string _providerInfo;\r\n    } \r\n    \r\n    address payable _chairperson;\r\n    mapping(address => _proposal) public _proposals;\r\n    address[] listOfOwners;\r\n    \r\n    constructor() payable{\r\n        _chairperson = payable(msg.sender);\r\n        listOfOwners.push(address(msg.sender));\r\n        _CertificatesContract = new Certificates(listOfOwners, 1);\r\n    }\r\n    \r\n    // PROPOSALS CRUD Operations\r\n\r\n    function sendProposal(address provider, string memory providerInfo) public payable {\r\n       require(msg.value >= _PriceWei, \"Not enough funds\");\r\n       require(proposalState.NOT_SUBMITTED == _proposals[provider]._state, \"Proposal already submitted\");\r\n\r\n       _proposals[provider]._state = proposalState.PENDING;\r\n       _proposals[provider]._providerInfo = providerInfo;\r\n\r\n       emit _SendProposalId(provider);\r\n    }\r\n    \r\n    function approveProposal(address provider) public{\r\n        require(msg.sender == _chairperson, \"Not allowed to approve proposals\");\r\n        require(proposalState.PENDING == _proposals[provider]._state, \"This proposal cannot be modified\");\r\n\r\n        _proposals[provider]._state = proposalState.APPROVED;\r\n        _CertificatesContract.addProvider(provider, _proposals[provider]._providerInfo);   \r\n\r\n        emit _ApproveProposalId(provider);\r\n    }\r\n\r\n    function rejectProposal(address provider) public{\r\n        require(msg.sender == _chairperson, \"Not allowed to reject proposals\");\r\n        require(proposalState.PENDING == _proposals[provider]._state, \"This proposal cannot be modified\");\r\n\r\n        _proposals[provider]._state = proposalState.REJECTED;\r\n\r\n        emit _RejectProposalId(provider);\r\n    }\r\n    \r\n    function retrieveProposal(address provider) public view returns (uint, string memory) {\r\n        require(proposalState.NOT_SUBMITTED != _proposals[provider]._state, \"This proposal does not exist\");\r\n\r\n        return (uint(_proposals[provider]._state), _proposals[provider]._providerInfo);\r\n    }\r\n    \r\n    // Contract basic information\r\n\r\n    function retrieveCertificatesContractAddress() public view returns (Certificates) {\r\n        return _CertificatesContract;\r\n    }\r\n    \r\n    function retrieveChairPerson() public view returns (address) {\r\n        return _chairperson;\r\n    }\r\n    \r\n}",
  "sourcePath": "C:/Users/d-aam/GitHub/Certificates/contracts/Proposals.sol",
  "ast": {
    "absolutePath": "/C/Users/d-aam/GitHub/Certificates/contracts/Proposals.sol",
    "exportedSymbols": {
      "Certificates": [
        1029
      ],
      "Proposals": [
        1279
      ]
    },
    "id": 1280,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1031,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:31:1"
      },
      {
        "absolutePath": "/C/Users/d-aam/GitHub/Certificates/contracts/Certificates.sol",
        "file": "./Certificates.sol",
        "id": 1032,
        "nodeType": "ImportDirective",
        "scope": 1280,
        "sourceUnit": 1030,
        "src": "152:28:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          1029
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1279,
        "linearizedBaseContracts": [
          1279
        ],
        "name": "Proposals",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 1036,
            "name": "_SendProposalId",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1034,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1036,
                  "src": "607:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "606:9:1"
            },
            "src": "585:31:1"
          },
          {
            "anonymous": false,
            "id": 1040,
            "name": "_ApproveProposalId",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1038,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1040,
                  "src": "647:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "647:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "646:9:1"
            },
            "src": "622:34:1"
          },
          {
            "anonymous": false,
            "id": 1044,
            "name": "_RejectProposalId",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1042,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "686:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "685:9:1"
            },
            "src": "662:33:1"
          },
          {
            "canonicalName": "Proposals.proposalState",
            "id": 1049,
            "members": [
              {
                "id": 1045,
                "name": "NOT_SUBMITTED",
                "nodeType": "EnumValue",
                "src": "724:13:1"
              },
              {
                "id": 1046,
                "name": "PENDING",
                "nodeType": "EnumValue",
                "src": "739:7:1"
              },
              {
                "id": 1047,
                "name": "APPROVED",
                "nodeType": "EnumValue",
                "src": "748:8:1"
              },
              {
                "id": 1048,
                "name": "REJECTED",
                "nodeType": "EnumValue",
                "src": "758:8:1"
              }
            ],
            "name": "proposalState",
            "nodeType": "EnumDefinition",
            "src": "703:65:1"
          },
          {
            "constant": true,
            "id": 1052,
            "mutability": "constant",
            "name": "_PriceWei",
            "nodeType": "VariableDeclaration",
            "scope": 1279,
            "src": "774:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1050,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "774:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 1051,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "800:2:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1054,
            "mutability": "mutable",
            "name": "_CertificatesContract",
            "nodeType": "VariableDeclaration",
            "scope": 1279,
            "src": "811:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Certificates_$1029",
              "typeString": "contract Certificates"
            },
            "typeName": {
              "id": 1053,
              "name": "Certificates",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1029,
              "src": "811:12:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Certificates_$1029",
                "typeString": "contract Certificates"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Proposals._proposal",
            "id": 1059,
            "members": [
              {
                "constant": false,
                "id": 1056,
                "mutability": "mutable",
                "name": "_state",
                "nodeType": "VariableDeclaration",
                "scope": 1059,
                "src": "886:20:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_proposalState_$1049",
                  "typeString": "enum Proposals.proposalState"
                },
                "typeName": {
                  "id": 1055,
                  "name": "proposalState",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1049,
                  "src": "886:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_proposalState_$1049",
                    "typeString": "enum Proposals.proposalState"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1058,
                "mutability": "mutable",
                "name": "_providerInfo",
                "nodeType": "VariableDeclaration",
                "scope": 1059,
                "src": "917:20:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1057,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "917:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "_proposal",
            "nodeType": "StructDefinition",
            "scope": 1279,
            "src": "859:86:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1061,
            "mutability": "mutable",
            "name": "_chairperson",
            "nodeType": "VariableDeclaration",
            "scope": 1279,
            "src": "958:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 1060,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "958:15:1",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "4f3f6c29",
            "id": 1065,
            "mutability": "mutable",
            "name": "_proposals",
            "nodeType": "VariableDeclaration",
            "scope": 1279,
            "src": "993:47:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$1059_storage_$",
              "typeString": "mapping(address => struct Proposals._proposal)"
            },
            "typeName": {
              "id": 1064,
              "keyType": {
                "id": 1062,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1001:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "993:29:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$1059_storage_$",
                "typeString": "mapping(address => struct Proposals._proposal)"
              },
              "valueType": {
                "id": 1063,
                "name": "_proposal",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1059,
                "src": "1012:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$__proposal_$1059_storage_ptr",
                  "typeString": "struct Proposals._proposal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1068,
            "mutability": "mutable",
            "name": "listOfOwners",
            "nodeType": "VariableDeclaration",
            "scope": 1279,
            "src": "1047:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1066,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1047:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1067,
              "nodeType": "ArrayTypeName",
              "src": "1047:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1097,
              "nodeType": "Block",
              "src": "1103:170:1",
              "statements": [
                {
                  "expression": {
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1071,
                      "name": "_chairperson",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1061,
                      "src": "1114:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1074,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1137:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1137:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 1073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1129:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 1072,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1129:8:1",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1129:19:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1114:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1078,
                  "nodeType": "ExpressionStatement",
                  "src": "1114:34:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1084,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1185:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1185:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 1083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1177:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1082,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1177:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1177:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1079,
                        "name": "listOfOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1068,
                        "src": "1159:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1159:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1159:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1088,
                  "nodeType": "ExpressionStatement",
                  "src": "1159:38:1"
                },
                {
                  "expression": {
                    "id": 1095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1089,
                      "name": "_CertificatesContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1054,
                      "src": "1208:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Certificates_$1029",
                        "typeString": "contract Certificates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1092,
                          "name": "listOfOwners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1068,
                          "src": "1249:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "hexValue": "31",
                          "id": 1093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1263:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 1091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1232:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_contract$_Certificates_$1029_$",
                          "typeString": "function (address[] memory,uint256) payable returns (contract Certificates)"
                        },
                        "typeName": {
                          "id": 1090,
                          "name": "Certificates",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1029,
                          "src": "1236:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Certificates_$1029",
                            "typeString": "contract Certificates"
                          }
                        }
                      },
                      "id": 1094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1232:33:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Certificates_$1029",
                        "typeString": "contract Certificates"
                      }
                    },
                    "src": "1208:57:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Certificates_$1029",
                      "typeString": "contract Certificates"
                    }
                  },
                  "id": 1096,
                  "nodeType": "ExpressionStatement",
                  "src": "1208:57:1"
                }
              ]
            },
            "id": 1098,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1069,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1093:2:1"
            },
            "returnParameters": {
              "id": 1070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1103:0:1"
            },
            "scope": 1279,
            "src": "1082:191:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1143,
              "nodeType": "Block",
              "src": "1404:340:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1106,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1422:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1422:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1108,
                          "name": "_PriceWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1052,
                          "src": "1435:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1422:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682066756e6473",
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1446:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
                          "typeString": "literal_string \"Not enough funds\""
                        },
                        "value": "Not enough funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
                          "typeString": "literal_string \"Not enough funds\""
                        }
                      ],
                      "id": 1105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1414:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1414:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1112,
                  "nodeType": "ExpressionStatement",
                  "src": "1414:51:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_proposalState_$1049",
                          "typeString": "enum Proposals.proposalState"
                        },
                        "id": 1120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1114,
                            "name": "proposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1049,
                            "src": "1483:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_proposalState_$1049_$",
                              "typeString": "type(enum Proposals.proposalState)"
                            }
                          },
                          "id": 1115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NOT_SUBMITTED",
                          "nodeType": "MemberAccess",
                          "src": "1483:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_proposalState_$1049",
                            "typeString": "enum Proposals.proposalState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1116,
                              "name": "_proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1065,
                              "src": "1514:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$1059_storage_$",
                                "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                              }
                            },
                            "id": 1118,
                            "indexExpression": {
                              "id": 1117,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1100,
                              "src": "1525:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1514:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$__proposal_$1059_storage",
                              "typeString": "struct Proposals._proposal storage ref"
                            }
                          },
                          "id": 1119,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1056,
                          "src": "1514:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_proposalState_$1049",
                            "typeString": "enum Proposals.proposalState"
                          }
                        },
                        "src": "1483:58:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c20616c7265616479207375626d6974746564",
                        "id": 1121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1543:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0da85400664844d70ccd0359a8efb1e3bee841b9edc8be57f13660e343aac247",
                          "typeString": "literal_string \"Proposal already submitted\""
                        },
                        "value": "Proposal already submitted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0da85400664844d70ccd0359a8efb1e3bee841b9edc8be57f13660e343aac247",
                          "typeString": "literal_string \"Proposal already submitted\""
                        }
                      ],
                      "id": 1113,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1475:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1475:97:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1123,
                  "nodeType": "ExpressionStatement",
                  "src": "1475:97:1"
                },
                {
                  "expression": {
                    "id": 1130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1124,
                          "name": "_proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "1584:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$1059_storage_$",
                            "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                          }
                        },
                        "id": 1126,
                        "indexExpression": {
                          "id": 1125,
                          "name": "provider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1100,
                          "src": "1595:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1584:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$__proposal_$1059_storage",
                          "typeString": "struct Proposals._proposal storage ref"
                        }
                      },
                      "id": 1127,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1056,
                      "src": "1584:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_proposalState_$1049",
                        "typeString": "enum Proposals.proposalState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1128,
                        "name": "proposalState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1049,
                        "src": "1614:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_proposalState_$1049_$",
                          "typeString": "type(enum Proposals.proposalState)"
                        }
                      },
                      "id": 1129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PENDING",
                      "nodeType": "MemberAccess",
                      "src": "1614:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_proposalState_$1049",
                        "typeString": "enum Proposals.proposalState"
                      }
                    },
                    "src": "1584:51:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_proposalState_$1049",
                      "typeString": "enum Proposals.proposalState"
                    }
                  },
                  "id": 1131,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:51:1"
                },
                {
                  "expression": {
                    "id": 1137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1132,
                          "name": "_proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "1645:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$1059_storage_$",
                            "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                          }
                        },
                        "id": 1134,
                        "indexExpression": {
                          "id": 1133,
                          "name": "provider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1100,
                          "src": "1656:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1645:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$__proposal_$1059_storage",
                          "typeString": "struct Proposals._proposal storage ref"
                        }
                      },
                      "id": 1135,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_providerInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1058,
                      "src": "1645:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1136,
                      "name": "providerInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1102,
                      "src": "1682:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1645:49:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1138,
                  "nodeType": "ExpressionStatement",
                  "src": "1645:49:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1140,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1100,
                        "src": "1727:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1139,
                      "name": "_SendProposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1036,
                      "src": "1711:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1711:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1142,
                  "nodeType": "EmitStatement",
                  "src": "1706:30:1"
                }
              ]
            },
            "functionSelector": "858e7ce6",
            "id": 1144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1100,
                  "mutability": "mutable",
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "scope": 1144,
                  "src": "1343:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1343:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1102,
                  "mutability": "mutable",
                  "name": "providerInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 1144,
                  "src": "1361:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1101,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1361:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1342:46:1"
            },
            "returnParameters": {
              "id": 1104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1404:0:1"
            },
            "scope": 1279,
            "src": "1321:423:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1190,
              "nodeType": "Block",
              "src": "1805:402:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 1153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1150,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1824:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1824:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1152,
                          "name": "_chairperson",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1061,
                          "src": "1838:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1824:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616c6c6f77656420746f20617070726f76652070726f706f73616c73",
                        "id": 1154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1852:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e47a6786529766886d436a345077f435d350ad8948cbcc8f80557eed8f833199",
                          "typeString": "literal_string \"Not allowed to approve proposals\""
                        },
                        "value": "Not allowed to approve proposals"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e47a6786529766886d436a345077f435d350ad8948cbcc8f80557eed8f833199",
                          "typeString": "literal_string \"Not allowed to approve proposals\""
                        }
                      ],
                      "id": 1149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1816:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1816:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1156,
                  "nodeType": "ExpressionStatement",
                  "src": "1816:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_proposalState_$1049",
                          "typeString": "enum Proposals.proposalState"
                        },
                        "id": 1164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1158,
                            "name": "proposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1049,
                            "src": "1906:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_proposalState_$1049_$",
                              "typeString": "type(enum Proposals.proposalState)"
                            }
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING",
                          "nodeType": "MemberAccess",
                          "src": "1906:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_proposalState_$1049",
                            "typeString": "enum Proposals.proposalState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1160,
                              "name": "_proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1065,
                              "src": "1931:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$1059_storage_$",
                                "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                              }
                            },
                            "id": 1162,
                            "indexExpression": {
                              "id": 1161,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1146,
                              "src": "1942:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1931:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$__proposal_$1059_storage",
                              "typeString": "struct Proposals._proposal storage ref"
                            }
                          },
                          "id": 1163,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1056,
                          "src": "1931:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_proposalState_$1049",
                            "typeString": "enum Proposals.proposalState"
                          }
                        },
                        "src": "1906:52:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732070726f706f73616c2063616e6e6f74206265206d6f646966696564",
                        "id": 1165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1960:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0908392764ff6d576b46d9dcf28b4be81f3d05bbb0d100b4a2123c28acf9f710",
                          "typeString": "literal_string \"This proposal cannot be modified\""
                        },
                        "value": "This proposal cannot be modified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0908392764ff6d576b46d9dcf28b4be81f3d05bbb0d100b4a2123c28acf9f710",
                          "typeString": "literal_string \"This proposal cannot be modified\""
                        }
                      ],
                      "id": 1157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1898:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1898:97:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1167,
                  "nodeType": "ExpressionStatement",
                  "src": "1898:97:1"
                },
                {
                  "expression": {
                    "id": 1174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1168,
                          "name": "_proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "2008:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$1059_storage_$",
                            "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                          }
                        },
                        "id": 1170,
                        "indexExpression": {
                          "id": 1169,
                          "name": "provider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1146,
                          "src": "2019:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2008:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$__proposal_$1059_storage",
                          "typeString": "struct Proposals._proposal storage ref"
                        }
                      },
                      "id": 1171,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1056,
                      "src": "2008:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_proposalState_$1049",
                        "typeString": "enum Proposals.proposalState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1172,
                        "name": "proposalState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1049,
                        "src": "2038:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_proposalState_$1049_$",
                          "typeString": "type(enum Proposals.proposalState)"
                        }
                      },
                      "id": 1173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "APPROVED",
                      "nodeType": "MemberAccess",
                      "src": "2038:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_proposalState_$1049",
                        "typeString": "enum Proposals.proposalState"
                      }
                    },
                    "src": "2008:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_proposalState_$1049",
                      "typeString": "enum Proposals.proposalState"
                    }
                  },
                  "id": 1175,
                  "nodeType": "ExpressionStatement",
                  "src": "2008:52:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1179,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1146,
                        "src": "2105:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1180,
                            "name": "_proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "2115:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$1059_storage_$",
                              "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                            }
                          },
                          "id": 1182,
                          "indexExpression": {
                            "id": 1181,
                            "name": "provider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1146,
                            "src": "2126:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2115:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$__proposal_$1059_storage",
                            "typeString": "struct Proposals._proposal storage ref"
                          }
                        },
                        "id": 1183,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_providerInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1058,
                        "src": "2115:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "expression": {
                        "id": 1176,
                        "name": "_CertificatesContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1054,
                        "src": "2071:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Certificates_$1029",
                          "typeString": "contract Certificates"
                        }
                      },
                      "id": 1178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addProvider",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 469,
                      "src": "2071:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 1184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2071:79:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1185,
                  "nodeType": "ExpressionStatement",
                  "src": "2071:79:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1187,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1146,
                        "src": "2190:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1186,
                      "name": "_ApproveProposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1040,
                      "src": "2171:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2171:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1189,
                  "nodeType": "EmitStatement",
                  "src": "2166:33:1"
                }
              ]
            },
            "functionSelector": "03354faa",
            "id": 1191,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1146,
                  "mutability": "mutable",
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "scope": 1191,
                  "src": "1781:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1781:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1780:18:1"
            },
            "returnParameters": {
              "id": 1148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1805:0:1"
            },
            "scope": 1279,
            "src": "1756:451:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1227,
              "nodeType": "Block",
              "src": "2263:307:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 1200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1197,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2282:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2282:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1199,
                          "name": "_chairperson",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1061,
                          "src": "2296:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2282:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616c6c6f77656420746f2072656a6563742070726f706f73616c73",
                        "id": 1201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2310:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e87ab8decf728e60123ed750e36ea6d88255b435f630494cd4bb6c3f67c7bdba",
                          "typeString": "literal_string \"Not allowed to reject proposals\""
                        },
                        "value": "Not allowed to reject proposals"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e87ab8decf728e60123ed750e36ea6d88255b435f630494cd4bb6c3f67c7bdba",
                          "typeString": "literal_string \"Not allowed to reject proposals\""
                        }
                      ],
                      "id": 1196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2274:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2274:70:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1203,
                  "nodeType": "ExpressionStatement",
                  "src": "2274:70:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_proposalState_$1049",
                          "typeString": "enum Proposals.proposalState"
                        },
                        "id": 1211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1205,
                            "name": "proposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1049,
                            "src": "2363:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_proposalState_$1049_$",
                              "typeString": "type(enum Proposals.proposalState)"
                            }
                          },
                          "id": 1206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING",
                          "nodeType": "MemberAccess",
                          "src": "2363:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_proposalState_$1049",
                            "typeString": "enum Proposals.proposalState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1207,
                              "name": "_proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1065,
                              "src": "2388:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$1059_storage_$",
                                "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                              }
                            },
                            "id": 1209,
                            "indexExpression": {
                              "id": 1208,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1193,
                              "src": "2399:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2388:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$__proposal_$1059_storage",
                              "typeString": "struct Proposals._proposal storage ref"
                            }
                          },
                          "id": 1210,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1056,
                          "src": "2388:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_proposalState_$1049",
                            "typeString": "enum Proposals.proposalState"
                          }
                        },
                        "src": "2363:52:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732070726f706f73616c2063616e6e6f74206265206d6f646966696564",
                        "id": 1212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2417:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0908392764ff6d576b46d9dcf28b4be81f3d05bbb0d100b4a2123c28acf9f710",
                          "typeString": "literal_string \"This proposal cannot be modified\""
                        },
                        "value": "This proposal cannot be modified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0908392764ff6d576b46d9dcf28b4be81f3d05bbb0d100b4a2123c28acf9f710",
                          "typeString": "literal_string \"This proposal cannot be modified\""
                        }
                      ],
                      "id": 1204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2355:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2355:97:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1214,
                  "nodeType": "ExpressionStatement",
                  "src": "2355:97:1"
                },
                {
                  "expression": {
                    "id": 1221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1215,
                          "name": "_proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "2465:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$1059_storage_$",
                            "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                          }
                        },
                        "id": 1217,
                        "indexExpression": {
                          "id": 1216,
                          "name": "provider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1193,
                          "src": "2476:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2465:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$__proposal_$1059_storage",
                          "typeString": "struct Proposals._proposal storage ref"
                        }
                      },
                      "id": 1218,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1056,
                      "src": "2465:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_proposalState_$1049",
                        "typeString": "enum Proposals.proposalState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1219,
                        "name": "proposalState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1049,
                        "src": "2495:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_proposalState_$1049_$",
                          "typeString": "type(enum Proposals.proposalState)"
                        }
                      },
                      "id": 1220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "REJECTED",
                      "nodeType": "MemberAccess",
                      "src": "2495:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_proposalState_$1049",
                        "typeString": "enum Proposals.proposalState"
                      }
                    },
                    "src": "2465:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_proposalState_$1049",
                      "typeString": "enum Proposals.proposalState"
                    }
                  },
                  "id": 1222,
                  "nodeType": "ExpressionStatement",
                  "src": "2465:52:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1224,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1193,
                        "src": "2553:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1223,
                      "name": "_RejectProposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1044,
                      "src": "2535:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2535:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1226,
                  "nodeType": "EmitStatement",
                  "src": "2530:32:1"
                }
              ]
            },
            "functionSelector": "cddab28b",
            "id": 1228,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rejectProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1193,
                  "mutability": "mutable",
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "scope": 1228,
                  "src": "2239:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2239:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2238:18:1"
            },
            "returnParameters": {
              "id": 1195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2263:0:1"
            },
            "scope": 1279,
            "src": "2215:355:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1261,
              "nodeType": "Block",
              "src": "2668:209:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_proposalState_$1049",
                          "typeString": "enum Proposals.proposalState"
                        },
                        "id": 1244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1238,
                            "name": "proposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1049,
                            "src": "2687:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_proposalState_$1049_$",
                              "typeString": "type(enum Proposals.proposalState)"
                            }
                          },
                          "id": 1239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NOT_SUBMITTED",
                          "nodeType": "MemberAccess",
                          "src": "2687:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_proposalState_$1049",
                            "typeString": "enum Proposals.proposalState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1240,
                              "name": "_proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1065,
                              "src": "2718:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$1059_storage_$",
                                "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                              }
                            },
                            "id": 1242,
                            "indexExpression": {
                              "id": 1241,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1230,
                              "src": "2729:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2718:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$__proposal_$1059_storage",
                              "typeString": "struct Proposals._proposal storage ref"
                            }
                          },
                          "id": 1243,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1056,
                          "src": "2718:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_proposalState_$1049",
                            "typeString": "enum Proposals.proposalState"
                          }
                        },
                        "src": "2687:58:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732070726f706f73616c20646f6573206e6f74206578697374",
                        "id": 1245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2747:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca5c8ad1855a349d22e6e95653caace74b2a2a8baa1054b1017b98590706ce9a",
                          "typeString": "literal_string \"This proposal does not exist\""
                        },
                        "value": "This proposal does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca5c8ad1855a349d22e6e95653caace74b2a2a8baa1054b1017b98590706ce9a",
                          "typeString": "literal_string \"This proposal does not exist\""
                        }
                      ],
                      "id": 1237,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2679:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2679:99:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1247,
                  "nodeType": "ExpressionStatement",
                  "src": "2679:99:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 1250,
                                "name": "_proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1065,
                                "src": "2804:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$1059_storage_$",
                                  "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                                }
                              },
                              "id": 1252,
                              "indexExpression": {
                                "id": 1251,
                                "name": "provider",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1230,
                                "src": "2815:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2804:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$__proposal_$1059_storage",
                                "typeString": "struct Proposals._proposal storage ref"
                              }
                            },
                            "id": 1253,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1056,
                            "src": "2804:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_proposalState_$1049",
                              "typeString": "enum Proposals.proposalState"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_proposalState_$1049",
                              "typeString": "enum Proposals.proposalState"
                            }
                          ],
                          "id": 1249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2799:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 1248,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2799:4:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2799:33:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1255,
                            "name": "_proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "2834:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$1059_storage_$",
                              "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                            }
                          },
                          "id": 1257,
                          "indexExpression": {
                            "id": 1256,
                            "name": "provider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1230,
                            "src": "2845:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2834:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$__proposal_$1059_storage",
                            "typeString": "struct Proposals._proposal storage ref"
                          }
                        },
                        "id": 1258,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_providerInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1058,
                        "src": "2834:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "id": 1259,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2798:71:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_string_storage_$",
                      "typeString": "tuple(uint256,string storage ref)"
                    }
                  },
                  "functionReturnParameters": 1236,
                  "id": 1260,
                  "nodeType": "Return",
                  "src": "2791:78:1"
                }
              ]
            },
            "functionSelector": "efec414b",
            "id": 1262,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1230,
                  "mutability": "mutable",
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "scope": 1262,
                  "src": "2608:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2608:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2607:18:1"
            },
            "returnParameters": {
              "id": 1236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1233,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1262,
                  "src": "2647:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1232,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2647:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1235,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1262,
                  "src": "2653:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1234,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2653:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2646:21:1"
            },
            "scope": 1279,
            "src": "2582:295:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1269,
              "nodeType": "Block",
              "src": "3008:47:1",
              "statements": [
                {
                  "expression": {
                    "id": 1267,
                    "name": "_CertificatesContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1054,
                    "src": "3026:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Certificates_$1029",
                      "typeString": "contract Certificates"
                    }
                  },
                  "functionReturnParameters": 1266,
                  "id": 1268,
                  "nodeType": "Return",
                  "src": "3019:28:1"
                }
              ]
            },
            "functionSelector": "3bd2993c",
            "id": 1270,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveCertificatesContractAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2970:2:1"
            },
            "returnParameters": {
              "id": 1266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1265,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1270,
                  "src": "2994:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Certificates_$1029",
                    "typeString": "contract Certificates"
                  },
                  "typeName": {
                    "id": 1264,
                    "name": "Certificates",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1029,
                    "src": "2994:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Certificates_$1029",
                      "typeString": "contract Certificates"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2993:14:1"
            },
            "scope": 1279,
            "src": "2926:129:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1277,
              "nodeType": "Block",
              "src": "3128:38:1",
              "statements": [
                {
                  "expression": {
                    "id": 1275,
                    "name": "_chairperson",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1061,
                    "src": "3146:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 1274,
                  "id": 1276,
                  "nodeType": "Return",
                  "src": "3139:19:1"
                }
              ]
            },
            "functionSelector": "db85bc4d",
            "id": 1278,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveChairPerson",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3095:2:1"
            },
            "returnParameters": {
              "id": 1274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1273,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1278,
                  "src": "3119:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1272,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3119:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3118:9:1"
            },
            "scope": 1279,
            "src": "3067:99:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1280,
        "src": "558:2617:1"
      }
    ],
    "src": "39:3136:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/d-aam/GitHub/Certificates/contracts/Proposals.sol",
      "exportedSymbols": {
        "Certificates": [
          1029
        ],
        "Proposals": [
          1279
        ]
      },
      "license": "GPL-3.0"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.7",
            ".0",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 1031,
        "name": "PragmaDirective",
        "src": "39:31:1"
      },
      {
        "attributes": {
          "SourceUnit": 1030,
          "absolutePath": "/C/Users/d-aam/GitHub/Certificates/contracts/Certificates.sol",
          "file": "./Certificates.sol",
          "scope": 1280,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1032,
        "name": "ImportDirective",
        "src": "152:28:1"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            1029
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1279
          ],
          "name": "Proposals",
          "scope": 1280
        },
        "children": [
          {
            "attributes": {
              "anonymous": false,
              "name": "_SendProposalId"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1036,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1033,
                        "name": "ElementaryTypeName",
                        "src": "607:7:1"
                      }
                    ],
                    "id": 1034,
                    "name": "VariableDeclaration",
                    "src": "607:7:1"
                  }
                ],
                "id": 1035,
                "name": "ParameterList",
                "src": "606:9:1"
              }
            ],
            "id": 1036,
            "name": "EventDefinition",
            "src": "585:31:1"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "_ApproveProposalId"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1040,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1037,
                        "name": "ElementaryTypeName",
                        "src": "647:7:1"
                      }
                    ],
                    "id": 1038,
                    "name": "VariableDeclaration",
                    "src": "647:7:1"
                  }
                ],
                "id": 1039,
                "name": "ParameterList",
                "src": "646:9:1"
              }
            ],
            "id": 1040,
            "name": "EventDefinition",
            "src": "622:34:1"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "_RejectProposalId"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1044,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1041,
                        "name": "ElementaryTypeName",
                        "src": "686:7:1"
                      }
                    ],
                    "id": 1042,
                    "name": "VariableDeclaration",
                    "src": "686:7:1"
                  }
                ],
                "id": 1043,
                "name": "ParameterList",
                "src": "685:9:1"
              }
            ],
            "id": 1044,
            "name": "EventDefinition",
            "src": "662:33:1"
          },
          {
            "attributes": {
              "canonicalName": "Proposals.proposalState",
              "name": "proposalState"
            },
            "children": [
              {
                "attributes": {
                  "name": "NOT_SUBMITTED"
                },
                "id": 1045,
                "name": "EnumValue",
                "src": "724:13:1"
              },
              {
                "attributes": {
                  "name": "PENDING"
                },
                "id": 1046,
                "name": "EnumValue",
                "src": "739:7:1"
              },
              {
                "attributes": {
                  "name": "APPROVED"
                },
                "id": 1047,
                "name": "EnumValue",
                "src": "748:8:1"
              },
              {
                "attributes": {
                  "name": "REJECTED"
                },
                "id": 1048,
                "name": "EnumValue",
                "src": "758:8:1"
              }
            ],
            "id": 1049,
            "name": "EnumDefinition",
            "src": "703:65:1"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "_PriceWei",
              "scope": 1279,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 1050,
                "name": "ElementaryTypeName",
                "src": "774:4:1"
              },
              {
                "attributes": {
                  "hexvalue": "3130",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 10",
                  "value": "10"
                },
                "id": 1051,
                "name": "Literal",
                "src": "800:2:1"
              }
            ],
            "id": 1052,
            "name": "VariableDeclaration",
            "src": "774:28:1"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_CertificatesContract",
              "scope": 1279,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract Certificates",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "Certificates",
                  "referencedDeclaration": 1029,
                  "type": "contract Certificates"
                },
                "id": 1053,
                "name": "UserDefinedTypeName",
                "src": "811:12:1"
              }
            ],
            "id": 1054,
            "name": "VariableDeclaration",
            "src": "811:35:1"
          },
          {
            "attributes": {
              "canonicalName": "Proposals._proposal",
              "name": "_proposal",
              "scope": 1279,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "_state",
                  "scope": 1059,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum Proposals.proposalState",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "proposalState",
                      "referencedDeclaration": 1049,
                      "type": "enum Proposals.proposalState"
                    },
                    "id": 1055,
                    "name": "UserDefinedTypeName",
                    "src": "886:13:1"
                  }
                ],
                "id": 1056,
                "name": "VariableDeclaration",
                "src": "886:20:1"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "_providerInfo",
                  "scope": 1059,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 1057,
                    "name": "ElementaryTypeName",
                    "src": "917:6:1"
                  }
                ],
                "id": 1058,
                "name": "VariableDeclaration",
                "src": "917:20:1"
              }
            ],
            "id": 1059,
            "name": "StructDefinition",
            "src": "859:86:1"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_chairperson",
              "scope": 1279,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address payable",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "payable",
                  "type": "address payable"
                },
                "id": 1060,
                "name": "ElementaryTypeName",
                "src": "958:15:1"
              }
            ],
            "id": 1061,
            "name": "VariableDeclaration",
            "src": "958:28:1"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "4f3f6c29",
              "mutability": "mutable",
              "name": "_proposals",
              "scope": 1279,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct Proposals._proposal)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct Proposals._proposal)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 1062,
                    "name": "ElementaryTypeName",
                    "src": "1001:7:1"
                  },
                  {
                    "attributes": {
                      "name": "_proposal",
                      "referencedDeclaration": 1059,
                      "type": "struct Proposals._proposal"
                    },
                    "id": 1063,
                    "name": "UserDefinedTypeName",
                    "src": "1012:9:1"
                  }
                ],
                "id": 1064,
                "name": "Mapping",
                "src": "993:29:1"
              }
            ],
            "id": 1065,
            "name": "VariableDeclaration",
            "src": "993:47:1"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "listOfOwners",
              "scope": 1279,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address[]",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "address[]"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 1066,
                    "name": "ElementaryTypeName",
                    "src": "1047:7:1"
                  }
                ],
                "id": 1067,
                "name": "ArrayTypeName",
                "src": "1047:9:1"
              }
            ],
            "id": 1068,
            "name": "VariableDeclaration",
            "src": "1047:22:1"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 1279,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1069,
                "name": "ParameterList",
                "src": "1093:2:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1070,
                "name": "ParameterList",
                "src": "1103:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address payable"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1061,
                              "type": "address payable",
                              "value": "_chairperson"
                            },
                            "id": 1071,
                            "name": "Identifier",
                            "src": "1114:12:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address payable)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "stateMutability": "payable"
                                    },
                                    "id": 1072,
                                    "name": "ElementaryTypeName",
                                    "src": "1129:8:1"
                                  }
                                ],
                                "id": 1073,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1129:8:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1074,
                                    "name": "Identifier",
                                    "src": "1137:3:1"
                                  }
                                ],
                                "id": 1075,
                                "name": "MemberAccess",
                                "src": "1137:10:1"
                              }
                            ],
                            "id": 1076,
                            "name": "FunctionCall",
                            "src": "1129:19:1"
                          }
                        ],
                        "id": 1077,
                        "name": "Assignment",
                        "src": "1114:34:1"
                      }
                    ],
                    "id": 1078,
                    "name": "ExpressionStatement",
                    "src": "1114:34:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "type": "function (address)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1068,
                                  "type": "address[] storage ref",
                                  "value": "listOfOwners"
                                },
                                "id": 1079,
                                "name": "Identifier",
                                "src": "1159:12:1"
                              }
                            ],
                            "id": 1081,
                            "name": "MemberAccess",
                            "src": "1159:17:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 1082,
                                    "name": "ElementaryTypeName",
                                    "src": "1177:7:1"
                                  }
                                ],
                                "id": 1083,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1177:7:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1084,
                                    "name": "Identifier",
                                    "src": "1185:3:1"
                                  }
                                ],
                                "id": 1085,
                                "name": "MemberAccess",
                                "src": "1185:10:1"
                              }
                            ],
                            "id": 1086,
                            "name": "FunctionCall",
                            "src": "1177:19:1"
                          }
                        ],
                        "id": 1087,
                        "name": "FunctionCall",
                        "src": "1159:38:1"
                      }
                    ],
                    "id": 1088,
                    "name": "ExpressionStatement",
                    "src": "1159:38:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract Certificates"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1054,
                              "type": "contract Certificates",
                              "value": "_CertificatesContract"
                            },
                            "id": 1089,
                            "name": "Identifier",
                            "src": "1208:21:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract Certificates",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "function (address[] memory,uint256) payable returns (contract Certificates)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "Certificates",
                                      "referencedDeclaration": 1029,
                                      "type": "contract Certificates"
                                    },
                                    "id": 1090,
                                    "name": "UserDefinedTypeName",
                                    "src": "1236:12:1"
                                  }
                                ],
                                "id": 1091,
                                "name": "NewExpression",
                                "src": "1232:16:1"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1068,
                                  "type": "address[] storage ref",
                                  "value": "listOfOwners"
                                },
                                "id": 1092,
                                "name": "Identifier",
                                "src": "1249:12:1"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 1093,
                                "name": "Literal",
                                "src": "1263:1:1"
                              }
                            ],
                            "id": 1094,
                            "name": "FunctionCall",
                            "src": "1232:33:1"
                          }
                        ],
                        "id": 1095,
                        "name": "Assignment",
                        "src": "1208:57:1"
                      }
                    ],
                    "id": 1096,
                    "name": "ExpressionStatement",
                    "src": "1208:57:1"
                  }
                ],
                "id": 1097,
                "name": "Block",
                "src": "1103:170:1"
              }
            ],
            "id": 1098,
            "name": "FunctionDefinition",
            "src": "1082:191:1"
          },
          {
            "attributes": {
              "functionSelector": "858e7ce6",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "sendProposal",
              "scope": 1279,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "provider",
                      "scope": 1144,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1099,
                        "name": "ElementaryTypeName",
                        "src": "1343:7:1"
                      }
                    ],
                    "id": 1100,
                    "name": "VariableDeclaration",
                    "src": "1343:16:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "providerInfo",
                      "scope": 1144,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1101,
                        "name": "ElementaryTypeName",
                        "src": "1361:6:1"
                      }
                    ],
                    "id": 1102,
                    "name": "VariableDeclaration",
                    "src": "1361:26:1"
                  }
                ],
                "id": 1103,
                "name": "ParameterList",
                "src": "1342:46:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1104,
                "name": "ParameterList",
                "src": "1404:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
                                  "typeString": "literal_string \"Not enough funds\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1105,
                            "name": "Identifier",
                            "src": "1414:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1106,
                                    "name": "Identifier",
                                    "src": "1422:3:1"
                                  }
                                ],
                                "id": 1107,
                                "name": "MemberAccess",
                                "src": "1422:9:1"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1052,
                                  "type": "uint256",
                                  "value": "_PriceWei"
                                },
                                "id": 1108,
                                "name": "Identifier",
                                "src": "1435:9:1"
                              }
                            ],
                            "id": 1109,
                            "name": "BinaryOperation",
                            "src": "1422:22:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4e6f7420656e6f7567682066756e6473",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Not enough funds\"",
                              "value": "Not enough funds"
                            },
                            "id": 1110,
                            "name": "Literal",
                            "src": "1446:18:1"
                          }
                        ],
                        "id": 1111,
                        "name": "FunctionCall",
                        "src": "1414:51:1"
                      }
                    ],
                    "id": 1112,
                    "name": "ExpressionStatement",
                    "src": "1414:51:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0da85400664844d70ccd0359a8efb1e3bee841b9edc8be57f13660e343aac247",
                                  "typeString": "literal_string \"Proposal already submitted\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1113,
                            "name": "Identifier",
                            "src": "1475:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_proposalState_$1049",
                                "typeString": "enum Proposals.proposalState"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "NOT_SUBMITTED",
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1049,
                                      "type": "type(enum Proposals.proposalState)",
                                      "value": "proposalState"
                                    },
                                    "id": 1114,
                                    "name": "Identifier",
                                    "src": "1483:13:1"
                                  }
                                ],
                                "id": 1115,
                                "name": "MemberAccess",
                                "src": "1483:27:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "_state",
                                  "referencedDeclaration": 1056,
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Proposals._proposal storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1065,
                                          "type": "mapping(address => struct Proposals._proposal storage ref)",
                                          "value": "_proposals"
                                        },
                                        "id": 1116,
                                        "name": "Identifier",
                                        "src": "1514:10:1"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1100,
                                          "type": "address",
                                          "value": "provider"
                                        },
                                        "id": 1117,
                                        "name": "Identifier",
                                        "src": "1525:8:1"
                                      }
                                    ],
                                    "id": 1118,
                                    "name": "IndexAccess",
                                    "src": "1514:20:1"
                                  }
                                ],
                                "id": 1119,
                                "name": "MemberAccess",
                                "src": "1514:27:1"
                              }
                            ],
                            "id": 1120,
                            "name": "BinaryOperation",
                            "src": "1483:58:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "50726f706f73616c20616c7265616479207375626d6974746564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Proposal already submitted\"",
                              "value": "Proposal already submitted"
                            },
                            "id": 1121,
                            "name": "Literal",
                            "src": "1543:28:1"
                          }
                        ],
                        "id": 1122,
                        "name": "FunctionCall",
                        "src": "1475:97:1"
                      }
                    ],
                    "id": 1123,
                    "name": "ExpressionStatement",
                    "src": "1475:97:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum Proposals.proposalState"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "_state",
                              "referencedDeclaration": 1056,
                              "type": "enum Proposals.proposalState"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Proposals._proposal storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1065,
                                      "type": "mapping(address => struct Proposals._proposal storage ref)",
                                      "value": "_proposals"
                                    },
                                    "id": 1124,
                                    "name": "Identifier",
                                    "src": "1584:10:1"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1100,
                                      "type": "address",
                                      "value": "provider"
                                    },
                                    "id": 1125,
                                    "name": "Identifier",
                                    "src": "1595:8:1"
                                  }
                                ],
                                "id": 1126,
                                "name": "IndexAccess",
                                "src": "1584:20:1"
                              }
                            ],
                            "id": 1127,
                            "name": "MemberAccess",
                            "src": "1584:27:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "PENDING",
                              "type": "enum Proposals.proposalState"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1049,
                                  "type": "type(enum Proposals.proposalState)",
                                  "value": "proposalState"
                                },
                                "id": 1128,
                                "name": "Identifier",
                                "src": "1614:13:1"
                              }
                            ],
                            "id": 1129,
                            "name": "MemberAccess",
                            "src": "1614:21:1"
                          }
                        ],
                        "id": 1130,
                        "name": "Assignment",
                        "src": "1584:51:1"
                      }
                    ],
                    "id": 1131,
                    "name": "ExpressionStatement",
                    "src": "1584:51:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "_providerInfo",
                              "referencedDeclaration": 1058,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Proposals._proposal storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1065,
                                      "type": "mapping(address => struct Proposals._proposal storage ref)",
                                      "value": "_proposals"
                                    },
                                    "id": 1132,
                                    "name": "Identifier",
                                    "src": "1645:10:1"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1100,
                                      "type": "address",
                                      "value": "provider"
                                    },
                                    "id": 1133,
                                    "name": "Identifier",
                                    "src": "1656:8:1"
                                  }
                                ],
                                "id": 1134,
                                "name": "IndexAccess",
                                "src": "1645:20:1"
                              }
                            ],
                            "id": 1135,
                            "name": "MemberAccess",
                            "src": "1645:34:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1102,
                              "type": "string memory",
                              "value": "providerInfo"
                            },
                            "id": 1136,
                            "name": "Identifier",
                            "src": "1682:12:1"
                          }
                        ],
                        "id": 1137,
                        "name": "Assignment",
                        "src": "1645:49:1"
                      }
                    ],
                    "id": 1138,
                    "name": "ExpressionStatement",
                    "src": "1645:49:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1036,
                              "type": "function (address)",
                              "value": "_SendProposalId"
                            },
                            "id": 1139,
                            "name": "Identifier",
                            "src": "1711:15:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1100,
                              "type": "address",
                              "value": "provider"
                            },
                            "id": 1140,
                            "name": "Identifier",
                            "src": "1727:8:1"
                          }
                        ],
                        "id": 1141,
                        "name": "FunctionCall",
                        "src": "1711:25:1"
                      }
                    ],
                    "id": 1142,
                    "name": "EmitStatement",
                    "src": "1706:30:1"
                  }
                ],
                "id": 1143,
                "name": "Block",
                "src": "1404:340:1"
              }
            ],
            "id": 1144,
            "name": "FunctionDefinition",
            "src": "1321:423:1"
          },
          {
            "attributes": {
              "functionSelector": "03354faa",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "approveProposal",
              "scope": 1279,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "provider",
                      "scope": 1191,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1145,
                        "name": "ElementaryTypeName",
                        "src": "1781:7:1"
                      }
                    ],
                    "id": 1146,
                    "name": "VariableDeclaration",
                    "src": "1781:16:1"
                  }
                ],
                "id": 1147,
                "name": "ParameterList",
                "src": "1780:18:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1148,
                "name": "ParameterList",
                "src": "1805:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e47a6786529766886d436a345077f435d350ad8948cbcc8f80557eed8f833199",
                                  "typeString": "literal_string \"Not allowed to approve proposals\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1149,
                            "name": "Identifier",
                            "src": "1816:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1150,
                                    "name": "Identifier",
                                    "src": "1824:3:1"
                                  }
                                ],
                                "id": 1151,
                                "name": "MemberAccess",
                                "src": "1824:10:1"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1061,
                                  "type": "address payable",
                                  "value": "_chairperson"
                                },
                                "id": 1152,
                                "name": "Identifier",
                                "src": "1838:12:1"
                              }
                            ],
                            "id": 1153,
                            "name": "BinaryOperation",
                            "src": "1824:26:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4e6f7420616c6c6f77656420746f20617070726f76652070726f706f73616c73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Not allowed to approve proposals\"",
                              "value": "Not allowed to approve proposals"
                            },
                            "id": 1154,
                            "name": "Literal",
                            "src": "1852:34:1"
                          }
                        ],
                        "id": 1155,
                        "name": "FunctionCall",
                        "src": "1816:71:1"
                      }
                    ],
                    "id": 1156,
                    "name": "ExpressionStatement",
                    "src": "1816:71:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0908392764ff6d576b46d9dcf28b4be81f3d05bbb0d100b4a2123c28acf9f710",
                                  "typeString": "literal_string \"This proposal cannot be modified\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1157,
                            "name": "Identifier",
                            "src": "1898:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_proposalState_$1049",
                                "typeString": "enum Proposals.proposalState"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "PENDING",
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1049,
                                      "type": "type(enum Proposals.proposalState)",
                                      "value": "proposalState"
                                    },
                                    "id": 1158,
                                    "name": "Identifier",
                                    "src": "1906:13:1"
                                  }
                                ],
                                "id": 1159,
                                "name": "MemberAccess",
                                "src": "1906:21:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "_state",
                                  "referencedDeclaration": 1056,
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Proposals._proposal storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1065,
                                          "type": "mapping(address => struct Proposals._proposal storage ref)",
                                          "value": "_proposals"
                                        },
                                        "id": 1160,
                                        "name": "Identifier",
                                        "src": "1931:10:1"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1146,
                                          "type": "address",
                                          "value": "provider"
                                        },
                                        "id": 1161,
                                        "name": "Identifier",
                                        "src": "1942:8:1"
                                      }
                                    ],
                                    "id": 1162,
                                    "name": "IndexAccess",
                                    "src": "1931:20:1"
                                  }
                                ],
                                "id": 1163,
                                "name": "MemberAccess",
                                "src": "1931:27:1"
                              }
                            ],
                            "id": 1164,
                            "name": "BinaryOperation",
                            "src": "1906:52:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "546869732070726f706f73616c2063616e6e6f74206265206d6f646966696564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"This proposal cannot be modified\"",
                              "value": "This proposal cannot be modified"
                            },
                            "id": 1165,
                            "name": "Literal",
                            "src": "1960:34:1"
                          }
                        ],
                        "id": 1166,
                        "name": "FunctionCall",
                        "src": "1898:97:1"
                      }
                    ],
                    "id": 1167,
                    "name": "ExpressionStatement",
                    "src": "1898:97:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum Proposals.proposalState"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "_state",
                              "referencedDeclaration": 1056,
                              "type": "enum Proposals.proposalState"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Proposals._proposal storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1065,
                                      "type": "mapping(address => struct Proposals._proposal storage ref)",
                                      "value": "_proposals"
                                    },
                                    "id": 1168,
                                    "name": "Identifier",
                                    "src": "2008:10:1"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1146,
                                      "type": "address",
                                      "value": "provider"
                                    },
                                    "id": 1169,
                                    "name": "Identifier",
                                    "src": "2019:8:1"
                                  }
                                ],
                                "id": 1170,
                                "name": "IndexAccess",
                                "src": "2008:20:1"
                              }
                            ],
                            "id": 1171,
                            "name": "MemberAccess",
                            "src": "2008:27:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "APPROVED",
                              "type": "enum Proposals.proposalState"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1049,
                                  "type": "type(enum Proposals.proposalState)",
                                  "value": "proposalState"
                                },
                                "id": 1172,
                                "name": "Identifier",
                                "src": "2038:13:1"
                              }
                            ],
                            "id": 1173,
                            "name": "MemberAccess",
                            "src": "2038:22:1"
                          }
                        ],
                        "id": 1174,
                        "name": "Assignment",
                        "src": "2008:52:1"
                      }
                    ],
                    "id": 1175,
                    "name": "ExpressionStatement",
                    "src": "2008:52:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "addProvider",
                              "referencedDeclaration": 469,
                              "type": "function (address,string memory) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1054,
                                  "type": "contract Certificates",
                                  "value": "_CertificatesContract"
                                },
                                "id": 1176,
                                "name": "Identifier",
                                "src": "2071:21:1"
                              }
                            ],
                            "id": 1178,
                            "name": "MemberAccess",
                            "src": "2071:33:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1146,
                              "type": "address",
                              "value": "provider"
                            },
                            "id": 1179,
                            "name": "Identifier",
                            "src": "2105:8:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_providerInfo",
                              "referencedDeclaration": 1058,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Proposals._proposal storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1065,
                                      "type": "mapping(address => struct Proposals._proposal storage ref)",
                                      "value": "_proposals"
                                    },
                                    "id": 1180,
                                    "name": "Identifier",
                                    "src": "2115:10:1"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1146,
                                      "type": "address",
                                      "value": "provider"
                                    },
                                    "id": 1181,
                                    "name": "Identifier",
                                    "src": "2126:8:1"
                                  }
                                ],
                                "id": 1182,
                                "name": "IndexAccess",
                                "src": "2115:20:1"
                              }
                            ],
                            "id": 1183,
                            "name": "MemberAccess",
                            "src": "2115:34:1"
                          }
                        ],
                        "id": 1184,
                        "name": "FunctionCall",
                        "src": "2071:79:1"
                      }
                    ],
                    "id": 1185,
                    "name": "ExpressionStatement",
                    "src": "2071:79:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1040,
                              "type": "function (address)",
                              "value": "_ApproveProposalId"
                            },
                            "id": 1186,
                            "name": "Identifier",
                            "src": "2171:18:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1146,
                              "type": "address",
                              "value": "provider"
                            },
                            "id": 1187,
                            "name": "Identifier",
                            "src": "2190:8:1"
                          }
                        ],
                        "id": 1188,
                        "name": "FunctionCall",
                        "src": "2171:28:1"
                      }
                    ],
                    "id": 1189,
                    "name": "EmitStatement",
                    "src": "2166:33:1"
                  }
                ],
                "id": 1190,
                "name": "Block",
                "src": "1805:402:1"
              }
            ],
            "id": 1191,
            "name": "FunctionDefinition",
            "src": "1756:451:1"
          },
          {
            "attributes": {
              "functionSelector": "cddab28b",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "rejectProposal",
              "scope": 1279,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "provider",
                      "scope": 1228,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1192,
                        "name": "ElementaryTypeName",
                        "src": "2239:7:1"
                      }
                    ],
                    "id": 1193,
                    "name": "VariableDeclaration",
                    "src": "2239:16:1"
                  }
                ],
                "id": 1194,
                "name": "ParameterList",
                "src": "2238:18:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1195,
                "name": "ParameterList",
                "src": "2263:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e87ab8decf728e60123ed750e36ea6d88255b435f630494cd4bb6c3f67c7bdba",
                                  "typeString": "literal_string \"Not allowed to reject proposals\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1196,
                            "name": "Identifier",
                            "src": "2274:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1197,
                                    "name": "Identifier",
                                    "src": "2282:3:1"
                                  }
                                ],
                                "id": 1198,
                                "name": "MemberAccess",
                                "src": "2282:10:1"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1061,
                                  "type": "address payable",
                                  "value": "_chairperson"
                                },
                                "id": 1199,
                                "name": "Identifier",
                                "src": "2296:12:1"
                              }
                            ],
                            "id": 1200,
                            "name": "BinaryOperation",
                            "src": "2282:26:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4e6f7420616c6c6f77656420746f2072656a6563742070726f706f73616c73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Not allowed to reject proposals\"",
                              "value": "Not allowed to reject proposals"
                            },
                            "id": 1201,
                            "name": "Literal",
                            "src": "2310:33:1"
                          }
                        ],
                        "id": 1202,
                        "name": "FunctionCall",
                        "src": "2274:70:1"
                      }
                    ],
                    "id": 1203,
                    "name": "ExpressionStatement",
                    "src": "2274:70:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0908392764ff6d576b46d9dcf28b4be81f3d05bbb0d100b4a2123c28acf9f710",
                                  "typeString": "literal_string \"This proposal cannot be modified\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1204,
                            "name": "Identifier",
                            "src": "2355:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_proposalState_$1049",
                                "typeString": "enum Proposals.proposalState"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "PENDING",
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1049,
                                      "type": "type(enum Proposals.proposalState)",
                                      "value": "proposalState"
                                    },
                                    "id": 1205,
                                    "name": "Identifier",
                                    "src": "2363:13:1"
                                  }
                                ],
                                "id": 1206,
                                "name": "MemberAccess",
                                "src": "2363:21:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "_state",
                                  "referencedDeclaration": 1056,
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Proposals._proposal storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1065,
                                          "type": "mapping(address => struct Proposals._proposal storage ref)",
                                          "value": "_proposals"
                                        },
                                        "id": 1207,
                                        "name": "Identifier",
                                        "src": "2388:10:1"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1193,
                                          "type": "address",
                                          "value": "provider"
                                        },
                                        "id": 1208,
                                        "name": "Identifier",
                                        "src": "2399:8:1"
                                      }
                                    ],
                                    "id": 1209,
                                    "name": "IndexAccess",
                                    "src": "2388:20:1"
                                  }
                                ],
                                "id": 1210,
                                "name": "MemberAccess",
                                "src": "2388:27:1"
                              }
                            ],
                            "id": 1211,
                            "name": "BinaryOperation",
                            "src": "2363:52:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "546869732070726f706f73616c2063616e6e6f74206265206d6f646966696564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"This proposal cannot be modified\"",
                              "value": "This proposal cannot be modified"
                            },
                            "id": 1212,
                            "name": "Literal",
                            "src": "2417:34:1"
                          }
                        ],
                        "id": 1213,
                        "name": "FunctionCall",
                        "src": "2355:97:1"
                      }
                    ],
                    "id": 1214,
                    "name": "ExpressionStatement",
                    "src": "2355:97:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum Proposals.proposalState"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "_state",
                              "referencedDeclaration": 1056,
                              "type": "enum Proposals.proposalState"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Proposals._proposal storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1065,
                                      "type": "mapping(address => struct Proposals._proposal storage ref)",
                                      "value": "_proposals"
                                    },
                                    "id": 1215,
                                    "name": "Identifier",
                                    "src": "2465:10:1"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1193,
                                      "type": "address",
                                      "value": "provider"
                                    },
                                    "id": 1216,
                                    "name": "Identifier",
                                    "src": "2476:8:1"
                                  }
                                ],
                                "id": 1217,
                                "name": "IndexAccess",
                                "src": "2465:20:1"
                              }
                            ],
                            "id": 1218,
                            "name": "MemberAccess",
                            "src": "2465:27:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "REJECTED",
                              "type": "enum Proposals.proposalState"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1049,
                                  "type": "type(enum Proposals.proposalState)",
                                  "value": "proposalState"
                                },
                                "id": 1219,
                                "name": "Identifier",
                                "src": "2495:13:1"
                              }
                            ],
                            "id": 1220,
                            "name": "MemberAccess",
                            "src": "2495:22:1"
                          }
                        ],
                        "id": 1221,
                        "name": "Assignment",
                        "src": "2465:52:1"
                      }
                    ],
                    "id": 1222,
                    "name": "ExpressionStatement",
                    "src": "2465:52:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1044,
                              "type": "function (address)",
                              "value": "_RejectProposalId"
                            },
                            "id": 1223,
                            "name": "Identifier",
                            "src": "2535:17:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1193,
                              "type": "address",
                              "value": "provider"
                            },
                            "id": 1224,
                            "name": "Identifier",
                            "src": "2553:8:1"
                          }
                        ],
                        "id": 1225,
                        "name": "FunctionCall",
                        "src": "2535:27:1"
                      }
                    ],
                    "id": 1226,
                    "name": "EmitStatement",
                    "src": "2530:32:1"
                  }
                ],
                "id": 1227,
                "name": "Block",
                "src": "2263:307:1"
              }
            ],
            "id": 1228,
            "name": "FunctionDefinition",
            "src": "2215:355:1"
          },
          {
            "attributes": {
              "functionSelector": "efec414b",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "retrieveProposal",
              "scope": 1279,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "provider",
                      "scope": 1262,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1229,
                        "name": "ElementaryTypeName",
                        "src": "2608:7:1"
                      }
                    ],
                    "id": 1230,
                    "name": "VariableDeclaration",
                    "src": "2608:16:1"
                  }
                ],
                "id": 1231,
                "name": "ParameterList",
                "src": "2607:18:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1262,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1232,
                        "name": "ElementaryTypeName",
                        "src": "2647:4:1"
                      }
                    ],
                    "id": 1233,
                    "name": "VariableDeclaration",
                    "src": "2647:4:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1262,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1234,
                        "name": "ElementaryTypeName",
                        "src": "2653:6:1"
                      }
                    ],
                    "id": 1235,
                    "name": "VariableDeclaration",
                    "src": "2653:13:1"
                  }
                ],
                "id": 1236,
                "name": "ParameterList",
                "src": "2646:21:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ca5c8ad1855a349d22e6e95653caace74b2a2a8baa1054b1017b98590706ce9a",
                                  "typeString": "literal_string \"This proposal does not exist\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1237,
                            "name": "Identifier",
                            "src": "2679:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_proposalState_$1049",
                                "typeString": "enum Proposals.proposalState"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "NOT_SUBMITTED",
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1049,
                                      "type": "type(enum Proposals.proposalState)",
                                      "value": "proposalState"
                                    },
                                    "id": 1238,
                                    "name": "Identifier",
                                    "src": "2687:13:1"
                                  }
                                ],
                                "id": 1239,
                                "name": "MemberAccess",
                                "src": "2687:27:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "_state",
                                  "referencedDeclaration": 1056,
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Proposals._proposal storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1065,
                                          "type": "mapping(address => struct Proposals._proposal storage ref)",
                                          "value": "_proposals"
                                        },
                                        "id": 1240,
                                        "name": "Identifier",
                                        "src": "2718:10:1"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1230,
                                          "type": "address",
                                          "value": "provider"
                                        },
                                        "id": 1241,
                                        "name": "Identifier",
                                        "src": "2729:8:1"
                                      }
                                    ],
                                    "id": 1242,
                                    "name": "IndexAccess",
                                    "src": "2718:20:1"
                                  }
                                ],
                                "id": 1243,
                                "name": "MemberAccess",
                                "src": "2718:27:1"
                              }
                            ],
                            "id": 1244,
                            "name": "BinaryOperation",
                            "src": "2687:58:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "546869732070726f706f73616c20646f6573206e6f74206578697374",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"This proposal does not exist\"",
                              "value": "This proposal does not exist"
                            },
                            "id": 1245,
                            "name": "Literal",
                            "src": "2747:30:1"
                          }
                        ],
                        "id": 1246,
                        "name": "FunctionCall",
                        "src": "2679:99:1"
                      }
                    ],
                    "id": 1247,
                    "name": "ExpressionStatement",
                    "src": "2679:99:1"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 1236
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(uint256,string storage ref)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_proposalState_$1049",
                                      "typeString": "enum Proposals.proposalState"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint"
                                    },
                                    "id": 1248,
                                    "name": "ElementaryTypeName",
                                    "src": "2799:4:1"
                                  }
                                ],
                                "id": 1249,
                                "name": "ElementaryTypeNameExpression",
                                "src": "2799:4:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "_state",
                                  "referencedDeclaration": 1056,
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Proposals._proposal storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1065,
                                          "type": "mapping(address => struct Proposals._proposal storage ref)",
                                          "value": "_proposals"
                                        },
                                        "id": 1250,
                                        "name": "Identifier",
                                        "src": "2804:10:1"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1230,
                                          "type": "address",
                                          "value": "provider"
                                        },
                                        "id": 1251,
                                        "name": "Identifier",
                                        "src": "2815:8:1"
                                      }
                                    ],
                                    "id": 1252,
                                    "name": "IndexAccess",
                                    "src": "2804:20:1"
                                  }
                                ],
                                "id": 1253,
                                "name": "MemberAccess",
                                "src": "2804:27:1"
                              }
                            ],
                            "id": 1254,
                            "name": "FunctionCall",
                            "src": "2799:33:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_providerInfo",
                              "referencedDeclaration": 1058,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Proposals._proposal storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1065,
                                      "type": "mapping(address => struct Proposals._proposal storage ref)",
                                      "value": "_proposals"
                                    },
                                    "id": 1255,
                                    "name": "Identifier",
                                    "src": "2834:10:1"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1230,
                                      "type": "address",
                                      "value": "provider"
                                    },
                                    "id": 1256,
                                    "name": "Identifier",
                                    "src": "2845:8:1"
                                  }
                                ],
                                "id": 1257,
                                "name": "IndexAccess",
                                "src": "2834:20:1"
                              }
                            ],
                            "id": 1258,
                            "name": "MemberAccess",
                            "src": "2834:34:1"
                          }
                        ],
                        "id": 1259,
                        "name": "TupleExpression",
                        "src": "2798:71:1"
                      }
                    ],
                    "id": 1260,
                    "name": "Return",
                    "src": "2791:78:1"
                  }
                ],
                "id": 1261,
                "name": "Block",
                "src": "2668:209:1"
              }
            ],
            "id": 1262,
            "name": "FunctionDefinition",
            "src": "2582:295:1"
          },
          {
            "attributes": {
              "functionSelector": "3bd2993c",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "retrieveCertificatesContractAddress",
              "scope": 1279,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1263,
                "name": "ParameterList",
                "src": "2970:2:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1270,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract Certificates",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Certificates",
                          "referencedDeclaration": 1029,
                          "type": "contract Certificates"
                        },
                        "id": 1264,
                        "name": "UserDefinedTypeName",
                        "src": "2994:12:1"
                      }
                    ],
                    "id": 1265,
                    "name": "VariableDeclaration",
                    "src": "2994:12:1"
                  }
                ],
                "id": 1266,
                "name": "ParameterList",
                "src": "2993:14:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1266
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 1054,
                          "type": "contract Certificates",
                          "value": "_CertificatesContract"
                        },
                        "id": 1267,
                        "name": "Identifier",
                        "src": "3026:21:1"
                      }
                    ],
                    "id": 1268,
                    "name": "Return",
                    "src": "3019:28:1"
                  }
                ],
                "id": 1269,
                "name": "Block",
                "src": "3008:47:1"
              }
            ],
            "id": 1270,
            "name": "FunctionDefinition",
            "src": "2926:129:1"
          },
          {
            "attributes": {
              "functionSelector": "db85bc4d",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "retrieveChairPerson",
              "scope": 1279,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1271,
                "name": "ParameterList",
                "src": "3095:2:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1278,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1272,
                        "name": "ElementaryTypeName",
                        "src": "3119:7:1"
                      }
                    ],
                    "id": 1273,
                    "name": "VariableDeclaration",
                    "src": "3119:7:1"
                  }
                ],
                "id": 1274,
                "name": "ParameterList",
                "src": "3118:9:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1274
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 1061,
                          "type": "address payable",
                          "value": "_chairperson"
                        },
                        "id": 1275,
                        "name": "Identifier",
                        "src": "3146:12:1"
                      }
                    ],
                    "id": 1276,
                    "name": "Return",
                    "src": "3139:19:1"
                  }
                ],
                "id": 1277,
                "name": "Block",
                "src": "3128:38:1"
              }
            ],
            "id": 1278,
            "name": "FunctionDefinition",
            "src": "3067:99:1"
          }
        ],
        "id": 1279,
        "name": "ContractDefinition",
        "src": "558:2617:1"
      }
    ],
    "id": 1280,
    "name": "SourceUnit",
    "src": "39:3136:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x147d57060cEEbe8a6B761859b7D7655AcfA75508",
      "transactionHash": "0x20aca4f090990076bb1164872c06ca0855a6868089ac969d4d4d3f66da1d4d1f"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-05T14:32:06.207Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}