{
  "contractName": "Proposals",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_ApproveProposalId",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_RejectProposalId",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_SendProposalId",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_proposals",
      "outputs": [
        {
          "internalType": "enum Proposals.proposalState",
          "name": "_state",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_providerInfo",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "providerInfo",
          "type": "string"
        }
      ],
      "name": "sendProposal",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "approveProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "rejectProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "retrieveProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieveCertificatesContractAddress",
      "outputs": [
        {
          "internalType": "contract Certificates",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieveChairPerson",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_ApproveProposalId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_RejectProposalId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_SendProposalId\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_proposals\",\"outputs\":[{\"internalType\":\"enum Proposals.proposalState\",\"name\":\"_state\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_providerInfo\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"approveProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"rejectProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveCertificatesContractAddress\",\"outputs\":[{\"internalType\":\"contract Certificates\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveChairPerson\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"retrieveProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"providerInfo\",\"type\":\"string\"}],\"name\":\"sendProposal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/d-aam/GitHub/Certificates/contracts/Proposals.sol\":\"Proposals\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/d-aam/GitHub/Certificates/contracts/Certificates.sol\":{\"keccak256\":\"0xd2c5d4b45dba34038ccff9a250bb80284a7d3c472456ef7c1e3d19b8817a4e6a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a81a641ad10390d992de2289c9d76673940e7c0472c17e9f107056e8db177175\",\"dweb:/ipfs/QmNZpwe9jp8tx4r5PaaVKGjgPfJL6rzqEsXK6oxeJt7m4m\"]},\"/C/Users/d-aam/GitHub/Certificates/contracts/Proposals.sol\":{\"keccak256\":\"0xa604f31e1cd4bf2b70b7711c8437d478acf84101e96b5598bf705c66e8d78037\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a2e7d02802c3d802b9acfdea461ed9e2bd9b1bb55bcc4002285752630bcff87f\",\"dweb:/ipfs/QmUrhBU7bYgNgzKubaqHBZTCyXbKmfLJnM4JwDALtrJPdh\"]}},\"version\":1}",
  "bytecode": "0x608060405233600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060036040516100b690610195565b8080602001828103825283818154815260200191508054801561012e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116100e4575b505092505050604051809103906000f080158015610150573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101a2565b6133868061125e83390190565b6110ad806101b16000396000f3fe6080604052600436106100705760003560e01c8063858e7ce61161004e578063858e7ce6146101e3578063cddab28b146102be578063db85bc4d1461030f578063efec414b1461035057610070565b806303354faa146100755780633bd2993c146100c65780634f3f6c2914610107575b600080fd5b34801561008157600080fd5b506100c46004803603602081101561009857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610421565b005b3480156100d257600080fd5b506100db6107de565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561011357600080fd5b506101566004803603602081101561012a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610807565b6040518083600381111561016657fe5b815260200180602001828103825283818151815260200191508051906020019080838360005b838110156101a757808201518184015260208101905061018c565b50505050905090810190601f1680156101d45780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6102bc600480360360408110156101f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561023657600080fd5b82018360208201111561024857600080fd5b8035906020019184600183028401116401000000008311171561026a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506108d0565b005b3480156102ca57600080fd5b5061030d600480360360208110156102e157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b2e565b005b34801561031b57600080fd5b50610324610d80565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561035c57600080fd5b5061039f6004803603602081101561037357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610daa565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156103e55780820151818401526020810190506103ca565b50505050905090810190601f1680156104125780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4e6f7420616c6c6f77656420746f20617070726f76652070726f706f73616c7381525060200191505060405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600381111561053f57fe5b6001600381111561054c57fe5b146105bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546869732070726f706f73616c2063616e6e6f74206265206d6f64696669656481525060200191505060405180910390fd5b60028060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083600381111561061d57fe5b021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc00050082600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252838181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156107555780601f1061072a57610100808354040283529160200191610755565b820191906000526020600020905b81548152906001019060200180831161073857829003601f168201915b50509350505050600060405180830381600087803b15801561077657600080fd5b505af115801561078a573d6000803e3d6000fd5b505050507f177c08bb2a258cee1a3d193682dd89fb318e12d135f68b304a183e2576168acc81604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026020528060005260406000206000915090508060000160009054906101000a900460ff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108c65780601f1061089b576101008083540402835291602001916108c6565b820191906000526020600020905b8154815290600101906020018083116108a957829003601f168201915b5050505050905082565b600a341015610947576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420656e6f7567682066756e64730000000000000000000000000000000081525060200191505060405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660038111156109a257fe5b600060038111156109af57fe5b14610a22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f50726f706f73616c20616c7265616479207375626d697474656400000000000081525060200191505060405180910390fd5b6001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115610a8157fe5b021790555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190610adc929190610fcc565b507fbaf065d025fe427c7c36f893bdec1c49e6c164c4a6531f4216f64e6e876a9a4f82604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bf1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4e6f7420616c6c6f77656420746f2072656a6563742070726f706f73616c730081525060200191505060405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115610c4c57fe5b60016003811115610c5957fe5b14610ccc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546869732070726f706f73616c2063616e6e6f74206265206d6f64696669656481525060200191505060405180910390fd5b6003600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115610d2b57fe5b02179055507fcc3f9ae01bdc82f13971bfb71fc93d203b797e70714c5c6c2abda1b9e302b19c81604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006060600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115610e0957fe5b60006003811115610e1657fe5b1415610e8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f546869732070726f706f73616c20646f6573206e6f742065786973740000000081525060200191505060405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115610ee557fe5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fbc5780601f10610f9157610100808354040283529160200191610fbc565b820191906000526020600020905b815481529060010190602001808311610f9f57829003601f168201915b5050505050905091509150915091565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826110025760008555611049565b82601f1061101b57805160ff1916838001178555611049565b82800160010185558215611049579182015b8281111561104857825182559160200191906001019061102d565b5b509050611056919061105a565b5090565b5b8082111561107357600081600090555060010161105b565b509056fea2646970667358221220b9ef42f92e583c652dcbf64ca41d720dd240b93dc5dba245842f7503286b076664736f6c6343000706003360806040526040516200338638038062003386833981810160405260208110156200002957600080fd5b81019080805160405193929190846401000000008211156200004a57600080fd5b838201915060208201858111156200006157600080fd5b82518660208202830111640100000000821117156200007f57600080fd5b8083526020830192505050908051906020019060200280838360005b83811015620000b85780820151818401526020810190506200009b565b50505050905001604052505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160058190555060005b81518110156200026c57600460008383815181106200018357fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156000151514156200025e57600160046000848481518110620001f357fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016005600082825401925050819055505b808060010191505062000168565b5060006002819055505061310080620002866000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806382ff66a3116100ad578063bf3a5c0211610071578063bf3a5c0214610ad1578063d744d2f314610b2b578063eefe768114610b49578063fc00050014610b67578063fd90ae7614610c4257610121565b806382ff66a31461058457806383ce57b31461078d5780638a355a57146107c15780639a90be9e146108055780639df66528146108be57610121565b806337583499116100f457806337583499146103175780633bc6fe0e146103d45780636e55d2d4146104225780637065cb481461047a578063769d7235146104be57610121565b80631270db7a146101265780631660c22a1461019e578063173825d9146102795780632f54bf6e146102bd575b600080fd5b6101886004803603604081101561013c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dfe565b6040518082815260200191505060405180910390f35b610277600480360360408110156101b457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156101f157600080fd5b82018360208201111561020357600080fd5b8035906020019184600183028401116401000000008311171561022557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610f20565b005b6102bb6004803603602081101561028f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611140565b005b6102ff600480360360208110156102d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061138e565b60405180821515815260200191505060405180910390f35b6103596004803603602081101561032d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561039957808201518184015260208101905061037e565b50505050905090810190601f1680156103c65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610420600480360360408110156103ea57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611591565b005b6104646004803603602081101561043857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611927565b6040518082815260200191505060405180910390f35b6104bc6004803603602081101561049057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611973565b005b610500600480360360208110156104d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bc1565b60405180831515815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561054857808201518184015260208101905061052d565b50505050905090810190601f1680156105755780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b61078b6004803603608081101561059a57600080fd5b81019080803590602001906401000000008111156105b757600080fd5b8201836020820111156105c957600080fd5b803590602001918460018302840111640100000000831117156105eb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561064e57600080fd5b82018360208201111561066057600080fd5b8035906020019184600183028401116401000000008311171561068257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156106e557600080fd5b8201836020820111156106f757600080fd5b8035906020019184600183028401116401000000008311171561071957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c8a565b005b610795611fe6565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610803600480360360208110156107d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061200f565b005b6108676004803603604081101561081b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612243565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156108aa57808201518184015260208101905061088f565b505050509050019250505060405180910390f35b610acf600480360360a08110156108d457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561091b57600080fd5b82018360208201111561092d57600080fd5b8035906020019184600183028401116401000000008311171561094f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156109b257600080fd5b8201836020820111156109c457600080fd5b803590602001918460018302840111640100000000831117156109e657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610a4957600080fd5b820183602082011115610a5b57600080fd5b80359060200191846001830284011164010000000083111715610a7d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506123cf565b005b610b1360048036036020811015610ae757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127eb565b60405180821515815260200191505060405180910390f35b610b3361280b565b6040518082815260200191505060405180910390f35b610b51612815565b6040518082815260200191505060405180910390f35b610c4060048036036040811015610b7d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610bba57600080fd5b820183602082011115610bcc57600080fd5b80359060200191846001830284011164010000000083111715610bee57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061281f565b005b610c8e60048036036040811015610c5857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a6f565b604051808573ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b83811015610cf2578082015181840152602081019050610cd7565b50505050905090810190601f168015610d1f5780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b83811015610d58578082015181840152602081019050610d3d565b50505050905090810190601f168015610d855780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b83811015610dbe578082015181840152602081019050610da3565b50505050905090810190601f168015610deb5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b6000806000905060005b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610f15578473ffffffffffffffffffffffffffffffffffffffff16600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610eb357fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610f08576001820191505b8080600101915050610e08565b508091505092915050565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515600115151480610faa57508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61101c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4e6f7420616c6c6f77656420746f207570646174652070726f7669646572730081525060200191505060405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16151560011515146110e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f50726f7669646572206e6f74206163746976617465640000000000000000000081525060200191505060405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101908051906020019061113b929190612e9f565b505050565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156001151514806111ea575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61125c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4e6f7420616c6c6f77656420746f2072656d6f7665206f776e6572730000000081525060200191505060405180910390fd5b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156001151514611322576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4f776e657220616c72656164792064652d61637469766174656400000000000081525060200191505060405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160056000828254039250508190555050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16151560011515146114af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f50726f766964657220646f6573206e6f7420657869737400000000000000000081525060200191505060405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115855780601f1061155a57610100808354040283529160200191611585565b820191906000526020600020905b81548152906001019060200180831161156857829003601f168201915b50505050509050919050565b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508210611648576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f436572746966696361746520646f6573206e6f7420657869737400000000000081525060200191505060405180910390fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061169257fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061172857508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61177d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603181526020018061309a6031913960400191505060405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106117c957fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061184757fe5b9060005260206000209060040201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600061188d9190612f2d565b60028201600061189d9190612f2d565b6003820160006118ad9190612f75565b50507f709d6b1b4d6f0b57a9f43c17f08c02648af8d37929b58caa594a4b03b8424687818385604051808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515600115151480611a1d575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b611a8f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4e6f7420616c6c6f77656420746f20616464206f776e6572730000000000000081525060200191505060405180910390fd5b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156000151514611b55576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f4f776e657220616c72656164792061637469766174656400000000000000000081525060200191505060405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160056000828254019250508190555050565b60016020528060005260406000206000915090508060000160009054906101000a900460ff1690806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c805780601f10611c5557610100808354040283529160200191611c80565b820191906000526020600020905b815481529060010190602001808311611c6357829003601f168201915b5050505050905082565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615156001151514611d53576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4e6f7420616c6c6f77656420746f20616464204365727469666963617465730081525060200191505060405180910390fd5b81516000108015611d715750825160001080611d70575083516000105b5b611de3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f436572746966696361746520697320656d70747900000000000000000000000081525060200191505060405180910390fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200184815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190611ee5929190612e9f565b506040820151816002019080519060200190611f02929190612e9f565b506060820151816003019080519060200190611f1f929190612fbd565b50505060006001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490500390507f76f4df91a34263fc533728c4689dd106f547d04117b44c2f5606efdbc184bdde338383604051808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151560011515148061209957508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61210b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4e6f7420616c6c6f77656420746f2072656d6f76652070726f7669646572730081525060200191505060405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16151560011515146121d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f50726f7669646572206e6f74206163746976617465640000000000000000000081525060200191505060405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908315150217905550600160026000828254039250508190555050565b606060006122518484610dfe565b67ffffffffffffffff8111801561226757600080fd5b506040519080825280602002602001820160405280156122965781602001602082028036833780820191505090505b5090506000805b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156123c3578573ffffffffffffffffffffffffffffffffffffffff16600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061234857fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156123b657808383815181106123a357fe5b6020026020010181815250506001820191505b808060010191505061229d565b50819250505092915050565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508510612486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f436572746966696361746520646f6573206e6f7420657869737400000000000081525060200191505060405180910390fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002085815481106124d057fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612585576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806130696031913960400191505060405180910390fd5b8251600010156126005782600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002086815481106125da57fe5b906000526020600020906004020160010190805190602001906125fe929190612e9f565b505b81516000101561267b5781600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020868154811061265557fe5b90600052602060002090600402016002019080519060200190612679929190612e9f565b505b8051600010156126f65780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002086815481106126d057fe5b906000526020600020906004020160030190805190602001906126f4929190612fbd565b505b7f736a6334743f8e5fff8d835332a115f2c34c1bbf6e2384459e1a24e0540bd47c600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020868154811061276157fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168587604051808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050505050565b60046020528060005260406000206000915054906101000a900460ff1681565b6000600254905090565b6000600554905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146128e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4e6f7420616c6c6f77656420746f206164642070726f7669646572730000000081525060200191505060405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16151560001515146129a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f50726f766964657220616c72656164792061637469766174656400000000000081525060200191505060405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010190805190602001906129ff929190612e9f565b5060018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555060016002600082825401925050819055505050565b60006060806060600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508610612b2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f436572746966696361746520646f6573206e6f7420657869737400000000000081525060200191505060405180910390fd5b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208681548110612b7757fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208781548110612bf357fe5b9060005260206000209060040201600101600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208881548110612c4e57fe5b9060005260206000209060040201600201600360008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208981548110612ca957fe5b9060005260206000209060040201600301828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612d4f5780601f10612d2457610100808354040283529160200191612d4f565b820191906000526020600020905b815481529060010190602001808311612d3257829003601f168201915b50505050509250818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612deb5780601f10612dc057610100808354040283529160200191612deb565b820191906000526020600020905b815481529060010190602001808311612dce57829003601f168201915b50505050509150808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612e875780601f10612e5c57610100808354040283529160200191612e87565b820191906000526020600020905b815481529060010190602001808311612e6a57829003601f168201915b50505050509050935093509350935092959194509250565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282612ed55760008555612f1c565b82601f10612eee57805160ff1916838001178555612f1c565b82800160010185558215612f1c579182015b82811115612f1b578251825591602001919060010190612f00565b5b509050612f29919061304b565b5090565b50805460018160011615610100020316600290046000825580601f10612f535750612f72565b601f016020900490600052602060002090810190612f71919061304b565b5b50565b50805460018160011615610100020316600290046000825580601f10612f9b5750612fba565b601f016020900490600052602060002090810190612fb9919061304b565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282612ff3576000855561303a565b82601f1061300c57805160ff191683800117855561303a565b8280016001018555821561303a579182015b8281111561303957825182559160200191906001019061301e565b5b509050613047919061304b565b5090565b5b8082111561306457600081600090555060010161304c565b509056fe4e6f7420616c6c6f77656420746f20757064617465207468697320706172746963756c61722043657274696669636174654e6f7420616c6c6f77656420746f2072656d6f7665207468697320706172746963756c6172204365727469666963617465a264697066735822122016537c67ac525188c9016dc92296f0b729bbbd858dec13a41710290d88cd57bd64736f6c63430007060033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063858e7ce61161004e578063858e7ce6146101e3578063cddab28b146102be578063db85bc4d1461030f578063efec414b1461035057610070565b806303354faa146100755780633bd2993c146100c65780634f3f6c2914610107575b600080fd5b34801561008157600080fd5b506100c46004803603602081101561009857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610421565b005b3480156100d257600080fd5b506100db6107de565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561011357600080fd5b506101566004803603602081101561012a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610807565b6040518083600381111561016657fe5b815260200180602001828103825283818151815260200191508051906020019080838360005b838110156101a757808201518184015260208101905061018c565b50505050905090810190601f1680156101d45780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6102bc600480360360408110156101f957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561023657600080fd5b82018360208201111561024857600080fd5b8035906020019184600183028401116401000000008311171561026a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506108d0565b005b3480156102ca57600080fd5b5061030d600480360360208110156102e157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b2e565b005b34801561031b57600080fd5b50610324610d80565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561035c57600080fd5b5061039f6004803603602081101561037357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610daa565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156103e55780820151818401526020810190506103ca565b50505050905090810190601f1680156104125780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4e6f7420616c6c6f77656420746f20617070726f76652070726f706f73616c7381525060200191505060405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600381111561053f57fe5b6001600381111561054c57fe5b146105bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546869732070726f706f73616c2063616e6e6f74206265206d6f64696669656481525060200191505060405180910390fd5b60028060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083600381111561061d57fe5b021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc00050082600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252838181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156107555780601f1061072a57610100808354040283529160200191610755565b820191906000526020600020905b81548152906001019060200180831161073857829003601f168201915b50509350505050600060405180830381600087803b15801561077657600080fd5b505af115801561078a573d6000803e3d6000fd5b505050507f177c08bb2a258cee1a3d193682dd89fb318e12d135f68b304a183e2576168acc81604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026020528060005260406000206000915090508060000160009054906101000a900460ff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108c65780601f1061089b576101008083540402835291602001916108c6565b820191906000526020600020905b8154815290600101906020018083116108a957829003601f168201915b5050505050905082565b600a341015610947576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420656e6f7567682066756e64730000000000000000000000000000000081525060200191505060405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660038111156109a257fe5b600060038111156109af57fe5b14610a22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f50726f706f73616c20616c7265616479207375626d697474656400000000000081525060200191505060405180910390fd5b6001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115610a8157fe5b021790555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190610adc929190610fcc565b507fbaf065d025fe427c7c36f893bdec1c49e6c164c4a6531f4216f64e6e876a9a4f82604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bf1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4e6f7420616c6c6f77656420746f2072656a6563742070726f706f73616c730081525060200191505060405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115610c4c57fe5b60016003811115610c5957fe5b14610ccc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546869732070726f706f73616c2063616e6e6f74206265206d6f64696669656481525060200191505060405180910390fd5b6003600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115610d2b57fe5b02179055507fcc3f9ae01bdc82f13971bfb71fc93d203b797e70714c5c6c2abda1b9e302b19c81604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006060600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115610e0957fe5b60006003811115610e1657fe5b1415610e8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f546869732070726f706f73616c20646f6573206e6f742065786973740000000081525060200191505060405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115610ee557fe5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fbc5780601f10610f9157610100808354040283529160200191610fbc565b820191906000526020600020905b815481529060010190602001808311610f9f57829003601f168201915b5050505050905091509150915091565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826110025760008555611049565b82601f1061101b57805160ff1916838001178555611049565b82800160010185558215611049579182015b8281111561104857825182559160200191906001019061102d565b5b509050611056919061105a565b5090565b5b8082111561107357600081600090555060010161105b565b509056fea2646970667358221220b9ef42f92e583c652dcbf64ca41d720dd240b93dc5dba245842f7503286b076664736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "558:2614:1:-:0;;;1137:10;1114:12;;:34;;;;;;;;;;;;;;;;;;1159:12;1185:10;1159:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1249:12;1232:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1208:21;;:54;;;;;;;;;;;;;;;;;;558:2614;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "558:2614:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1753:451;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2923:129;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;993:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1318:423;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2212:355;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3064:99;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2579:295;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1753:451;1835:12;;;;;;;;;;;1821:26;;:10;:26;;;1813:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1928:10;:20;1939:8;1928:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;1903:52;;;;;;;;:21;:52;;;;;;;;;1895:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2035:22;2005:10;:20;2016:8;2005:20;;;;;;;;;;;;;;;:27;;;:52;;;;;;;;;;;;;;;;;;;;;;;;2068:21;;;;;;;;;;:33;;;2102:8;2112:10;:20;2123:8;2112:20;;;;;;;;;;;;;;;:34;;2068:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:28;2187:8;2168:28;;;;;;;;;;;;;;;;;;;;1753:451;:::o;2923:129::-;2991:12;3023:21;;;;;;;;;;;3016:28;;2923:129;:::o;993:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1318:423::-;800:2;1419:9;:22;;1411:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1511:10;:20;1522:8;1511:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;1480:58;;;;;;;;:27;:58;;;;;;;;;1472:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1611:21;1581:10;:20;1592:8;1581:20;;;;;;;;;;;;;;;:27;;;:51;;;;;;;;;;;;;;;;;;;;;;;;1679:12;1642:10;:20;1653:8;1642:20;;;;;;;;;;;;;;;:34;;:49;;;;;;;;;;;;:::i;:::-;;1708:25;1724:8;1708:25;;;;;;;;;;;;;;;;;;;;1318:423;;:::o;2212:355::-;2293:12;;;;;;;;;;;2279:26;;:10;:26;;;2271:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2385:10;:20;2396:8;2385:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;2360:52;;;;;;;;:21;:52;;;;;;;;;2352:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2492:22;2462:10;:20;2473:8;2462:20;;;;;;;;;;;;;;;:27;;;:52;;;;;;;;;;;;;;;;;;;;;;;;2532:27;2550:8;2532:27;;;;;;;;;;;;;;;;;;;;2212:355;:::o;3064:99::-;3116:7;3143:12;;;;;;;;;;;3136:19;;3064:99;:::o;2579:295::-;2644:4;2650:13;2715:10;:20;2726:8;2715:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;2684:58;;;;;;;;:27;:58;;;;;;;;;;2676:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2801:10;:20;2812:8;2801:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;2796:33;;;;;;;;2831:10;:20;2842:8;2831:20;;;;;;;;;;;;;;;:34;;2788:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2579:295;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n/**\r\n * @title Storage\r\n * @dev Store & retrieve value in a variable\r\n */\r\n \r\nimport \"./Certificates.sol\";\r\n\r\n /* \r\n Actors : Chair Person, Anyone\r\n Token : Proposals\r\n\r\n 1- Anyone can submit proposals (paying a fee)\r\n 2- Chair Person can approve proposals creating Providers in Certificates Contract\r\n\r\n\r\n Proposals lifecycle\r\n    Proposals Creation : Anyone (paying fee)\r\n    Proposals Update : \r\n    Proposals Remove :   \r\n    Proposals Validations : Only Chair Person  \r\n\r\n */\r\n\r\ncontract Proposals{\r\n\r\n    event _SendProposalId(address);\r\n    event _ApproveProposalId(address);\r\n    event _RejectProposalId(address);\r\n\r\n    enum proposalState { NOT_SUBMITTED, PENDING, APPROVED, REJECTED }\r\n    uint constant _PriceWei = 10;\r\n\r\n    Certificates  _CertificatesContract;\r\n    \r\n    struct _proposal{\r\n        proposalState _state;\r\n        string _providerInfo;\r\n    } \r\n    \r\n    address payable _chairperson;\r\n    mapping(address => _proposal) public _proposals;\r\n    address[] listOfOwners;\r\n    \r\n    constructor() payable{\r\n        _chairperson = payable(msg.sender);\r\n        listOfOwners.push(address(msg.sender));\r\n        _CertificatesContract = new Certificates(listOfOwners);\r\n    }\r\n    \r\n    // PROPOSALS CRUD Operations\r\n\r\n    function sendProposal(address provider, string memory providerInfo) public payable {\r\n       require(msg.value >= _PriceWei, \"Not enough funds\");\r\n       require(proposalState.NOT_SUBMITTED == _proposals[provider]._state, \"Proposal already submitted\");\r\n\r\n       _proposals[provider]._state = proposalState.PENDING;\r\n       _proposals[provider]._providerInfo = providerInfo;\r\n\r\n       emit _SendProposalId(provider);\r\n    }\r\n    \r\n    function approveProposal(address provider) public{\r\n        require(msg.sender == _chairperson, \"Not allowed to approve proposals\");\r\n        require(proposalState.PENDING == _proposals[provider]._state, \"This proposal cannot be modified\");\r\n\r\n        _proposals[provider]._state = proposalState.APPROVED;\r\n        _CertificatesContract.addProvider(provider, _proposals[provider]._providerInfo);   \r\n\r\n        emit _ApproveProposalId(provider);\r\n    }\r\n\r\n    function rejectProposal(address provider) public{\r\n        require(msg.sender == _chairperson, \"Not allowed to reject proposals\");\r\n        require(proposalState.PENDING == _proposals[provider]._state, \"This proposal cannot be modified\");\r\n\r\n        _proposals[provider]._state = proposalState.REJECTED;\r\n\r\n        emit _RejectProposalId(provider);\r\n    }\r\n    \r\n    function retrieveProposal(address provider) public view returns (uint, string memory) {\r\n        require(proposalState.NOT_SUBMITTED != _proposals[provider]._state, \"This proposal does not exist\");\r\n\r\n        return (uint(_proposals[provider]._state), _proposals[provider]._providerInfo);\r\n    }\r\n    \r\n    // Contract basic information\r\n\r\n    function retrieveCertificatesContractAddress() public view returns (Certificates) {\r\n        return _CertificatesContract;\r\n    }\r\n    \r\n    function retrieveChairPerson() public view returns (address) {\r\n        return _chairperson;\r\n    }\r\n    \r\n}",
  "sourcePath": "C:/Users/d-aam/GitHub/Certificates/contracts/Proposals.sol",
  "ast": {
    "absolutePath": "/C/Users/d-aam/GitHub/Certificates/contracts/Proposals.sol",
    "exportedSymbols": {
      "Certificates": [
        803
      ],
      "Proposals": [
        1052
      ]
    },
    "id": 1053,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 805,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:31:1"
      },
      {
        "absolutePath": "/C/Users/d-aam/GitHub/Certificates/contracts/Certificates.sol",
        "file": "./Certificates.sol",
        "id": 806,
        "nodeType": "ImportDirective",
        "scope": 1053,
        "sourceUnit": 804,
        "src": "152:28:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          803
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1052,
        "linearizedBaseContracts": [
          1052
        ],
        "name": "Proposals",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 810,
            "name": "_SendProposalId",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 808,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "607:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "606:9:1"
            },
            "src": "585:31:1"
          },
          {
            "anonymous": false,
            "id": 814,
            "name": "_ApproveProposalId",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 812,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "647:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "647:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "646:9:1"
            },
            "src": "622:34:1"
          },
          {
            "anonymous": false,
            "id": 818,
            "name": "_RejectProposalId",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 816,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 818,
                  "src": "686:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "685:9:1"
            },
            "src": "662:33:1"
          },
          {
            "canonicalName": "Proposals.proposalState",
            "id": 823,
            "members": [
              {
                "id": 819,
                "name": "NOT_SUBMITTED",
                "nodeType": "EnumValue",
                "src": "724:13:1"
              },
              {
                "id": 820,
                "name": "PENDING",
                "nodeType": "EnumValue",
                "src": "739:7:1"
              },
              {
                "id": 821,
                "name": "APPROVED",
                "nodeType": "EnumValue",
                "src": "748:8:1"
              },
              {
                "id": 822,
                "name": "REJECTED",
                "nodeType": "EnumValue",
                "src": "758:8:1"
              }
            ],
            "name": "proposalState",
            "nodeType": "EnumDefinition",
            "src": "703:65:1"
          },
          {
            "constant": true,
            "id": 826,
            "mutability": "constant",
            "name": "_PriceWei",
            "nodeType": "VariableDeclaration",
            "scope": 1052,
            "src": "774:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 824,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "774:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 825,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "800:2:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 828,
            "mutability": "mutable",
            "name": "_CertificatesContract",
            "nodeType": "VariableDeclaration",
            "scope": 1052,
            "src": "811:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Certificates_$803",
              "typeString": "contract Certificates"
            },
            "typeName": {
              "id": 827,
              "name": "Certificates",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 803,
              "src": "811:12:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Certificates_$803",
                "typeString": "contract Certificates"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Proposals._proposal",
            "id": 833,
            "members": [
              {
                "constant": false,
                "id": 830,
                "mutability": "mutable",
                "name": "_state",
                "nodeType": "VariableDeclaration",
                "scope": 833,
                "src": "886:20:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_proposalState_$823",
                  "typeString": "enum Proposals.proposalState"
                },
                "typeName": {
                  "id": 829,
                  "name": "proposalState",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 823,
                  "src": "886:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_proposalState_$823",
                    "typeString": "enum Proposals.proposalState"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 832,
                "mutability": "mutable",
                "name": "_providerInfo",
                "nodeType": "VariableDeclaration",
                "scope": 833,
                "src": "917:20:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 831,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "917:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "_proposal",
            "nodeType": "StructDefinition",
            "scope": 1052,
            "src": "859:86:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 835,
            "mutability": "mutable",
            "name": "_chairperson",
            "nodeType": "VariableDeclaration",
            "scope": 1052,
            "src": "958:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 834,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "958:15:1",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "4f3f6c29",
            "id": 839,
            "mutability": "mutable",
            "name": "_proposals",
            "nodeType": "VariableDeclaration",
            "scope": 1052,
            "src": "993:47:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$833_storage_$",
              "typeString": "mapping(address => struct Proposals._proposal)"
            },
            "typeName": {
              "id": 838,
              "keyType": {
                "id": 836,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1001:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "993:29:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$833_storage_$",
                "typeString": "mapping(address => struct Proposals._proposal)"
              },
              "valueType": {
                "id": 837,
                "name": "_proposal",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 833,
                "src": "1012:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$__proposal_$833_storage_ptr",
                  "typeString": "struct Proposals._proposal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 842,
            "mutability": "mutable",
            "name": "listOfOwners",
            "nodeType": "VariableDeclaration",
            "scope": 1052,
            "src": "1047:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 840,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1047:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 841,
              "nodeType": "ArrayTypeName",
              "src": "1047:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 870,
              "nodeType": "Block",
              "src": "1103:167:1",
              "statements": [
                {
                  "expression": {
                    "id": 851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 845,
                      "name": "_chairperson",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 835,
                      "src": "1114:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 848,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1137:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1137:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1129:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 846,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1129:8:1",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1129:19:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1114:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 852,
                  "nodeType": "ExpressionStatement",
                  "src": "1114:34:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 858,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1185:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1185:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1177:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 856,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1177:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1177:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 853,
                        "name": "listOfOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "1159:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1159:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1159:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 862,
                  "nodeType": "ExpressionStatement",
                  "src": "1159:38:1"
                },
                {
                  "expression": {
                    "id": 868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 863,
                      "name": "_CertificatesContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 828,
                      "src": "1208:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Certificates_$803",
                        "typeString": "contract Certificates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 866,
                          "name": "listOfOwners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 842,
                          "src": "1249:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        ],
                        "id": 865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1232:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_payable$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_contract$_Certificates_$803_$",
                          "typeString": "function (address[] memory) payable returns (contract Certificates)"
                        },
                        "typeName": {
                          "id": 864,
                          "name": "Certificates",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 803,
                          "src": "1236:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Certificates_$803",
                            "typeString": "contract Certificates"
                          }
                        }
                      },
                      "id": 867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1232:30:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Certificates_$803",
                        "typeString": "contract Certificates"
                      }
                    },
                    "src": "1208:54:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Certificates_$803",
                      "typeString": "contract Certificates"
                    }
                  },
                  "id": 869,
                  "nodeType": "ExpressionStatement",
                  "src": "1208:54:1"
                }
              ]
            },
            "id": 871,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1093:2:1"
            },
            "returnParameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1103:0:1"
            },
            "scope": 1052,
            "src": "1082:188:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 916,
              "nodeType": "Block",
              "src": "1401:340:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 879,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1419:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1419:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 881,
                          "name": "_PriceWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 826,
                          "src": "1432:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1419:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682066756e6473",
                        "id": 883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1443:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
                          "typeString": "literal_string \"Not enough funds\""
                        },
                        "value": "Not enough funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
                          "typeString": "literal_string \"Not enough funds\""
                        }
                      ],
                      "id": 878,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1411:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1411:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 885,
                  "nodeType": "ExpressionStatement",
                  "src": "1411:51:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_proposalState_$823",
                          "typeString": "enum Proposals.proposalState"
                        },
                        "id": 893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 887,
                            "name": "proposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 823,
                            "src": "1480:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_proposalState_$823_$",
                              "typeString": "type(enum Proposals.proposalState)"
                            }
                          },
                          "id": 888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NOT_SUBMITTED",
                          "nodeType": "MemberAccess",
                          "src": "1480:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_proposalState_$823",
                            "typeString": "enum Proposals.proposalState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 889,
                              "name": "_proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 839,
                              "src": "1511:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$833_storage_$",
                                "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                              }
                            },
                            "id": 891,
                            "indexExpression": {
                              "id": 890,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 873,
                              "src": "1522:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1511:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$__proposal_$833_storage",
                              "typeString": "struct Proposals._proposal storage ref"
                            }
                          },
                          "id": 892,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 830,
                          "src": "1511:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_proposalState_$823",
                            "typeString": "enum Proposals.proposalState"
                          }
                        },
                        "src": "1480:58:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c20616c7265616479207375626d6974746564",
                        "id": 894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1540:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0da85400664844d70ccd0359a8efb1e3bee841b9edc8be57f13660e343aac247",
                          "typeString": "literal_string \"Proposal already submitted\""
                        },
                        "value": "Proposal already submitted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0da85400664844d70ccd0359a8efb1e3bee841b9edc8be57f13660e343aac247",
                          "typeString": "literal_string \"Proposal already submitted\""
                        }
                      ],
                      "id": 886,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1472:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1472:97:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 896,
                  "nodeType": "ExpressionStatement",
                  "src": "1472:97:1"
                },
                {
                  "expression": {
                    "id": 903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 897,
                          "name": "_proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 839,
                          "src": "1581:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$833_storage_$",
                            "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                          }
                        },
                        "id": 899,
                        "indexExpression": {
                          "id": 898,
                          "name": "provider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 873,
                          "src": "1592:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1581:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$__proposal_$833_storage",
                          "typeString": "struct Proposals._proposal storage ref"
                        }
                      },
                      "id": 900,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 830,
                      "src": "1581:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_proposalState_$823",
                        "typeString": "enum Proposals.proposalState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 901,
                        "name": "proposalState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 823,
                        "src": "1611:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_proposalState_$823_$",
                          "typeString": "type(enum Proposals.proposalState)"
                        }
                      },
                      "id": 902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PENDING",
                      "nodeType": "MemberAccess",
                      "src": "1611:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_proposalState_$823",
                        "typeString": "enum Proposals.proposalState"
                      }
                    },
                    "src": "1581:51:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_proposalState_$823",
                      "typeString": "enum Proposals.proposalState"
                    }
                  },
                  "id": 904,
                  "nodeType": "ExpressionStatement",
                  "src": "1581:51:1"
                },
                {
                  "expression": {
                    "id": 910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 905,
                          "name": "_proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 839,
                          "src": "1642:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$833_storage_$",
                            "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                          }
                        },
                        "id": 907,
                        "indexExpression": {
                          "id": 906,
                          "name": "provider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 873,
                          "src": "1653:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1642:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$__proposal_$833_storage",
                          "typeString": "struct Proposals._proposal storage ref"
                        }
                      },
                      "id": 908,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_providerInfo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 832,
                      "src": "1642:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 909,
                      "name": "providerInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 875,
                      "src": "1679:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1642:49:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 911,
                  "nodeType": "ExpressionStatement",
                  "src": "1642:49:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 913,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "1724:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 912,
                      "name": "_SendProposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 810,
                      "src": "1708:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1708:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 915,
                  "nodeType": "EmitStatement",
                  "src": "1703:30:1"
                }
              ]
            },
            "functionSelector": "858e7ce6",
            "id": 917,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 873,
                  "mutability": "mutable",
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "scope": 917,
                  "src": "1340:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1340:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 875,
                  "mutability": "mutable",
                  "name": "providerInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 917,
                  "src": "1358:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1358:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1339:46:1"
            },
            "returnParameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1401:0:1"
            },
            "scope": 1052,
            "src": "1318:423:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 963,
              "nodeType": "Block",
              "src": "1802:402:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 923,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1821:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1821:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 925,
                          "name": "_chairperson",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 835,
                          "src": "1835:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1821:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616c6c6f77656420746f20617070726f76652070726f706f73616c73",
                        "id": 927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1849:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e47a6786529766886d436a345077f435d350ad8948cbcc8f80557eed8f833199",
                          "typeString": "literal_string \"Not allowed to approve proposals\""
                        },
                        "value": "Not allowed to approve proposals"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e47a6786529766886d436a345077f435d350ad8948cbcc8f80557eed8f833199",
                          "typeString": "literal_string \"Not allowed to approve proposals\""
                        }
                      ],
                      "id": 922,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1813:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1813:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 929,
                  "nodeType": "ExpressionStatement",
                  "src": "1813:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_proposalState_$823",
                          "typeString": "enum Proposals.proposalState"
                        },
                        "id": 937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 931,
                            "name": "proposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 823,
                            "src": "1903:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_proposalState_$823_$",
                              "typeString": "type(enum Proposals.proposalState)"
                            }
                          },
                          "id": 932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING",
                          "nodeType": "MemberAccess",
                          "src": "1903:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_proposalState_$823",
                            "typeString": "enum Proposals.proposalState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 933,
                              "name": "_proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 839,
                              "src": "1928:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$833_storage_$",
                                "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                              }
                            },
                            "id": 935,
                            "indexExpression": {
                              "id": 934,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "1939:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1928:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$__proposal_$833_storage",
                              "typeString": "struct Proposals._proposal storage ref"
                            }
                          },
                          "id": 936,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 830,
                          "src": "1928:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_proposalState_$823",
                            "typeString": "enum Proposals.proposalState"
                          }
                        },
                        "src": "1903:52:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732070726f706f73616c2063616e6e6f74206265206d6f646966696564",
                        "id": 938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1957:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0908392764ff6d576b46d9dcf28b4be81f3d05bbb0d100b4a2123c28acf9f710",
                          "typeString": "literal_string \"This proposal cannot be modified\""
                        },
                        "value": "This proposal cannot be modified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0908392764ff6d576b46d9dcf28b4be81f3d05bbb0d100b4a2123c28acf9f710",
                          "typeString": "literal_string \"This proposal cannot be modified\""
                        }
                      ],
                      "id": 930,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1895:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1895:97:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 940,
                  "nodeType": "ExpressionStatement",
                  "src": "1895:97:1"
                },
                {
                  "expression": {
                    "id": 947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 941,
                          "name": "_proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 839,
                          "src": "2005:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$833_storage_$",
                            "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                          }
                        },
                        "id": 943,
                        "indexExpression": {
                          "id": 942,
                          "name": "provider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 919,
                          "src": "2016:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2005:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$__proposal_$833_storage",
                          "typeString": "struct Proposals._proposal storage ref"
                        }
                      },
                      "id": 944,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 830,
                      "src": "2005:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_proposalState_$823",
                        "typeString": "enum Proposals.proposalState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 945,
                        "name": "proposalState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 823,
                        "src": "2035:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_proposalState_$823_$",
                          "typeString": "type(enum Proposals.proposalState)"
                        }
                      },
                      "id": 946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "APPROVED",
                      "nodeType": "MemberAccess",
                      "src": "2035:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_proposalState_$823",
                        "typeString": "enum Proposals.proposalState"
                      }
                    },
                    "src": "2005:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_proposalState_$823",
                      "typeString": "enum Proposals.proposalState"
                    }
                  },
                  "id": 948,
                  "nodeType": "ExpressionStatement",
                  "src": "2005:52:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 952,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 919,
                        "src": "2102:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 953,
                            "name": "_proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 839,
                            "src": "2112:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$833_storage_$",
                              "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                            }
                          },
                          "id": 955,
                          "indexExpression": {
                            "id": 954,
                            "name": "provider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 919,
                            "src": "2123:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2112:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$__proposal_$833_storage",
                            "typeString": "struct Proposals._proposal storage ref"
                          }
                        },
                        "id": 956,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_providerInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 832,
                        "src": "2112:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "expression": {
                        "id": 949,
                        "name": "_CertificatesContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 828,
                        "src": "2068:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Certificates_$803",
                          "typeString": "contract Certificates"
                        }
                      },
                      "id": 951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addProvider",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 164,
                      "src": "2068:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2068:79:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 958,
                  "nodeType": "ExpressionStatement",
                  "src": "2068:79:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 960,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 919,
                        "src": "2187:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 959,
                      "name": "_ApproveProposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 814,
                      "src": "2168:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2168:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 962,
                  "nodeType": "EmitStatement",
                  "src": "2163:33:1"
                }
              ]
            },
            "functionSelector": "03354faa",
            "id": 964,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 919,
                  "mutability": "mutable",
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "1778:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1778:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1777:18:1"
            },
            "returnParameters": {
              "id": 921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1802:0:1"
            },
            "scope": 1052,
            "src": "1753:451:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1000,
              "nodeType": "Block",
              "src": "2260:307:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 970,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2279:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2279:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 972,
                          "name": "_chairperson",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 835,
                          "src": "2293:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2279:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616c6c6f77656420746f2072656a6563742070726f706f73616c73",
                        "id": 974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2307:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e87ab8decf728e60123ed750e36ea6d88255b435f630494cd4bb6c3f67c7bdba",
                          "typeString": "literal_string \"Not allowed to reject proposals\""
                        },
                        "value": "Not allowed to reject proposals"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e87ab8decf728e60123ed750e36ea6d88255b435f630494cd4bb6c3f67c7bdba",
                          "typeString": "literal_string \"Not allowed to reject proposals\""
                        }
                      ],
                      "id": 969,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2271:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2271:70:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 976,
                  "nodeType": "ExpressionStatement",
                  "src": "2271:70:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_proposalState_$823",
                          "typeString": "enum Proposals.proposalState"
                        },
                        "id": 984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 978,
                            "name": "proposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 823,
                            "src": "2360:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_proposalState_$823_$",
                              "typeString": "type(enum Proposals.proposalState)"
                            }
                          },
                          "id": 979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PENDING",
                          "nodeType": "MemberAccess",
                          "src": "2360:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_proposalState_$823",
                            "typeString": "enum Proposals.proposalState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 980,
                              "name": "_proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 839,
                              "src": "2385:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$833_storage_$",
                                "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                              }
                            },
                            "id": 982,
                            "indexExpression": {
                              "id": 981,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 966,
                              "src": "2396:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2385:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$__proposal_$833_storage",
                              "typeString": "struct Proposals._proposal storage ref"
                            }
                          },
                          "id": 983,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 830,
                          "src": "2385:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_proposalState_$823",
                            "typeString": "enum Proposals.proposalState"
                          }
                        },
                        "src": "2360:52:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732070726f706f73616c2063616e6e6f74206265206d6f646966696564",
                        "id": 985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2414:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0908392764ff6d576b46d9dcf28b4be81f3d05bbb0d100b4a2123c28acf9f710",
                          "typeString": "literal_string \"This proposal cannot be modified\""
                        },
                        "value": "This proposal cannot be modified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0908392764ff6d576b46d9dcf28b4be81f3d05bbb0d100b4a2123c28acf9f710",
                          "typeString": "literal_string \"This proposal cannot be modified\""
                        }
                      ],
                      "id": 977,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2352:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2352:97:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 987,
                  "nodeType": "ExpressionStatement",
                  "src": "2352:97:1"
                },
                {
                  "expression": {
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 988,
                          "name": "_proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 839,
                          "src": "2462:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$833_storage_$",
                            "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                          }
                        },
                        "id": 990,
                        "indexExpression": {
                          "id": 989,
                          "name": "provider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 966,
                          "src": "2473:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2462:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$__proposal_$833_storage",
                          "typeString": "struct Proposals._proposal storage ref"
                        }
                      },
                      "id": 991,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 830,
                      "src": "2462:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_proposalState_$823",
                        "typeString": "enum Proposals.proposalState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 992,
                        "name": "proposalState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 823,
                        "src": "2492:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_proposalState_$823_$",
                          "typeString": "type(enum Proposals.proposalState)"
                        }
                      },
                      "id": 993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "REJECTED",
                      "nodeType": "MemberAccess",
                      "src": "2492:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_proposalState_$823",
                        "typeString": "enum Proposals.proposalState"
                      }
                    },
                    "src": "2462:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_proposalState_$823",
                      "typeString": "enum Proposals.proposalState"
                    }
                  },
                  "id": 995,
                  "nodeType": "ExpressionStatement",
                  "src": "2462:52:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 997,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 966,
                        "src": "2550:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 996,
                      "name": "_RejectProposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 818,
                      "src": "2532:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2532:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 999,
                  "nodeType": "EmitStatement",
                  "src": "2527:32:1"
                }
              ]
            },
            "functionSelector": "cddab28b",
            "id": 1001,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rejectProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 966,
                  "mutability": "mutable",
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "scope": 1001,
                  "src": "2236:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 965,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2236:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2235:18:1"
            },
            "returnParameters": {
              "id": 968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2260:0:1"
            },
            "scope": 1052,
            "src": "2212:355:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1034,
              "nodeType": "Block",
              "src": "2665:209:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_proposalState_$823",
                          "typeString": "enum Proposals.proposalState"
                        },
                        "id": 1017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1011,
                            "name": "proposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 823,
                            "src": "2684:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_proposalState_$823_$",
                              "typeString": "type(enum Proposals.proposalState)"
                            }
                          },
                          "id": 1012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NOT_SUBMITTED",
                          "nodeType": "MemberAccess",
                          "src": "2684:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_proposalState_$823",
                            "typeString": "enum Proposals.proposalState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1013,
                              "name": "_proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 839,
                              "src": "2715:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$833_storage_$",
                                "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                              }
                            },
                            "id": 1015,
                            "indexExpression": {
                              "id": 1014,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1003,
                              "src": "2726:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2715:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$__proposal_$833_storage",
                              "typeString": "struct Proposals._proposal storage ref"
                            }
                          },
                          "id": 1016,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 830,
                          "src": "2715:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_proposalState_$823",
                            "typeString": "enum Proposals.proposalState"
                          }
                        },
                        "src": "2684:58:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732070726f706f73616c20646f6573206e6f74206578697374",
                        "id": 1018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2744:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca5c8ad1855a349d22e6e95653caace74b2a2a8baa1054b1017b98590706ce9a",
                          "typeString": "literal_string \"This proposal does not exist\""
                        },
                        "value": "This proposal does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca5c8ad1855a349d22e6e95653caace74b2a2a8baa1054b1017b98590706ce9a",
                          "typeString": "literal_string \"This proposal does not exist\""
                        }
                      ],
                      "id": 1010,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2676:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2676:99:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1020,
                  "nodeType": "ExpressionStatement",
                  "src": "2676:99:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 1023,
                                "name": "_proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 839,
                                "src": "2801:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$833_storage_$",
                                  "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                                }
                              },
                              "id": 1025,
                              "indexExpression": {
                                "id": 1024,
                                "name": "provider",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1003,
                                "src": "2812:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2801:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$__proposal_$833_storage",
                                "typeString": "struct Proposals._proposal storage ref"
                              }
                            },
                            "id": 1026,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 830,
                            "src": "2801:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_proposalState_$823",
                              "typeString": "enum Proposals.proposalState"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_proposalState_$823",
                              "typeString": "enum Proposals.proposalState"
                            }
                          ],
                          "id": 1022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2796:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 1021,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2796:4:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2796:33:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1028,
                            "name": "_proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 839,
                            "src": "2831:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$__proposal_$833_storage_$",
                              "typeString": "mapping(address => struct Proposals._proposal storage ref)"
                            }
                          },
                          "id": 1030,
                          "indexExpression": {
                            "id": 1029,
                            "name": "provider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1003,
                            "src": "2842:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2831:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$__proposal_$833_storage",
                            "typeString": "struct Proposals._proposal storage ref"
                          }
                        },
                        "id": 1031,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_providerInfo",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 832,
                        "src": "2831:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "id": 1032,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2795:71:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_string_storage_$",
                      "typeString": "tuple(uint256,string storage ref)"
                    }
                  },
                  "functionReturnParameters": 1009,
                  "id": 1033,
                  "nodeType": "Return",
                  "src": "2788:78:1"
                }
              ]
            },
            "functionSelector": "efec414b",
            "id": 1035,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1003,
                  "mutability": "mutable",
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "scope": 1035,
                  "src": "2605:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2605:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2604:18:1"
            },
            "returnParameters": {
              "id": 1009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1006,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1035,
                  "src": "2644:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1005,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2644:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1008,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1035,
                  "src": "2650:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1007,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2650:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2643:21:1"
            },
            "scope": 1052,
            "src": "2579:295:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1042,
              "nodeType": "Block",
              "src": "3005:47:1",
              "statements": [
                {
                  "expression": {
                    "id": 1040,
                    "name": "_CertificatesContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 828,
                    "src": "3023:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Certificates_$803",
                      "typeString": "contract Certificates"
                    }
                  },
                  "functionReturnParameters": 1039,
                  "id": 1041,
                  "nodeType": "Return",
                  "src": "3016:28:1"
                }
              ]
            },
            "functionSelector": "3bd2993c",
            "id": 1043,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveCertificatesContractAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2967:2:1"
            },
            "returnParameters": {
              "id": 1039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1038,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1043,
                  "src": "2991:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Certificates_$803",
                    "typeString": "contract Certificates"
                  },
                  "typeName": {
                    "id": 1037,
                    "name": "Certificates",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 803,
                    "src": "2991:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Certificates_$803",
                      "typeString": "contract Certificates"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2990:14:1"
            },
            "scope": 1052,
            "src": "2923:129:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1050,
              "nodeType": "Block",
              "src": "3125:38:1",
              "statements": [
                {
                  "expression": {
                    "id": 1048,
                    "name": "_chairperson",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 835,
                    "src": "3143:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 1047,
                  "id": 1049,
                  "nodeType": "Return",
                  "src": "3136:19:1"
                }
              ]
            },
            "functionSelector": "db85bc4d",
            "id": 1051,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveChairPerson",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3092:2:1"
            },
            "returnParameters": {
              "id": 1047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1046,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1051,
                  "src": "3116:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3116:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3115:9:1"
            },
            "scope": 1052,
            "src": "3064:99:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1053,
        "src": "558:2614:1"
      }
    ],
    "src": "39:3133:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/d-aam/GitHub/Certificates/contracts/Proposals.sol",
      "exportedSymbols": {
        "Certificates": [
          803
        ],
        "Proposals": [
          1052
        ]
      },
      "license": "GPL-3.0"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.7",
            ".0",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 805,
        "name": "PragmaDirective",
        "src": "39:31:1"
      },
      {
        "attributes": {
          "SourceUnit": 804,
          "absolutePath": "/C/Users/d-aam/GitHub/Certificates/contracts/Certificates.sol",
          "file": "./Certificates.sol",
          "scope": 1053,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 806,
        "name": "ImportDirective",
        "src": "152:28:1"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            803
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1052
          ],
          "name": "Proposals",
          "scope": 1053
        },
        "children": [
          {
            "attributes": {
              "anonymous": false,
              "name": "_SendProposalId"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 810,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 807,
                        "name": "ElementaryTypeName",
                        "src": "607:7:1"
                      }
                    ],
                    "id": 808,
                    "name": "VariableDeclaration",
                    "src": "607:7:1"
                  }
                ],
                "id": 809,
                "name": "ParameterList",
                "src": "606:9:1"
              }
            ],
            "id": 810,
            "name": "EventDefinition",
            "src": "585:31:1"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "_ApproveProposalId"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 814,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 811,
                        "name": "ElementaryTypeName",
                        "src": "647:7:1"
                      }
                    ],
                    "id": 812,
                    "name": "VariableDeclaration",
                    "src": "647:7:1"
                  }
                ],
                "id": 813,
                "name": "ParameterList",
                "src": "646:9:1"
              }
            ],
            "id": 814,
            "name": "EventDefinition",
            "src": "622:34:1"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "_RejectProposalId"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 818,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 815,
                        "name": "ElementaryTypeName",
                        "src": "686:7:1"
                      }
                    ],
                    "id": 816,
                    "name": "VariableDeclaration",
                    "src": "686:7:1"
                  }
                ],
                "id": 817,
                "name": "ParameterList",
                "src": "685:9:1"
              }
            ],
            "id": 818,
            "name": "EventDefinition",
            "src": "662:33:1"
          },
          {
            "attributes": {
              "canonicalName": "Proposals.proposalState",
              "name": "proposalState"
            },
            "children": [
              {
                "attributes": {
                  "name": "NOT_SUBMITTED"
                },
                "id": 819,
                "name": "EnumValue",
                "src": "724:13:1"
              },
              {
                "attributes": {
                  "name": "PENDING"
                },
                "id": 820,
                "name": "EnumValue",
                "src": "739:7:1"
              },
              {
                "attributes": {
                  "name": "APPROVED"
                },
                "id": 821,
                "name": "EnumValue",
                "src": "748:8:1"
              },
              {
                "attributes": {
                  "name": "REJECTED"
                },
                "id": 822,
                "name": "EnumValue",
                "src": "758:8:1"
              }
            ],
            "id": 823,
            "name": "EnumDefinition",
            "src": "703:65:1"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "_PriceWei",
              "scope": 1052,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 824,
                "name": "ElementaryTypeName",
                "src": "774:4:1"
              },
              {
                "attributes": {
                  "hexvalue": "3130",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 10",
                  "value": "10"
                },
                "id": 825,
                "name": "Literal",
                "src": "800:2:1"
              }
            ],
            "id": 826,
            "name": "VariableDeclaration",
            "src": "774:28:1"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_CertificatesContract",
              "scope": 1052,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract Certificates",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "Certificates",
                  "referencedDeclaration": 803,
                  "type": "contract Certificates"
                },
                "id": 827,
                "name": "UserDefinedTypeName",
                "src": "811:12:1"
              }
            ],
            "id": 828,
            "name": "VariableDeclaration",
            "src": "811:35:1"
          },
          {
            "attributes": {
              "canonicalName": "Proposals._proposal",
              "name": "_proposal",
              "scope": 1052,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "_state",
                  "scope": 833,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum Proposals.proposalState",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "proposalState",
                      "referencedDeclaration": 823,
                      "type": "enum Proposals.proposalState"
                    },
                    "id": 829,
                    "name": "UserDefinedTypeName",
                    "src": "886:13:1"
                  }
                ],
                "id": 830,
                "name": "VariableDeclaration",
                "src": "886:20:1"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "_providerInfo",
                  "scope": 833,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 831,
                    "name": "ElementaryTypeName",
                    "src": "917:6:1"
                  }
                ],
                "id": 832,
                "name": "VariableDeclaration",
                "src": "917:20:1"
              }
            ],
            "id": 833,
            "name": "StructDefinition",
            "src": "859:86:1"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_chairperson",
              "scope": 1052,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address payable",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "payable",
                  "type": "address payable"
                },
                "id": 834,
                "name": "ElementaryTypeName",
                "src": "958:15:1"
              }
            ],
            "id": 835,
            "name": "VariableDeclaration",
            "src": "958:28:1"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "4f3f6c29",
              "mutability": "mutable",
              "name": "_proposals",
              "scope": 1052,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct Proposals._proposal)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct Proposals._proposal)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 836,
                    "name": "ElementaryTypeName",
                    "src": "1001:7:1"
                  },
                  {
                    "attributes": {
                      "name": "_proposal",
                      "referencedDeclaration": 833,
                      "type": "struct Proposals._proposal"
                    },
                    "id": 837,
                    "name": "UserDefinedTypeName",
                    "src": "1012:9:1"
                  }
                ],
                "id": 838,
                "name": "Mapping",
                "src": "993:29:1"
              }
            ],
            "id": 839,
            "name": "VariableDeclaration",
            "src": "993:47:1"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "listOfOwners",
              "scope": 1052,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address[]",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "address[]"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 840,
                    "name": "ElementaryTypeName",
                    "src": "1047:7:1"
                  }
                ],
                "id": 841,
                "name": "ArrayTypeName",
                "src": "1047:9:1"
              }
            ],
            "id": 842,
            "name": "VariableDeclaration",
            "src": "1047:22:1"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 1052,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 843,
                "name": "ParameterList",
                "src": "1093:2:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 844,
                "name": "ParameterList",
                "src": "1103:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address payable"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 835,
                              "type": "address payable",
                              "value": "_chairperson"
                            },
                            "id": 845,
                            "name": "Identifier",
                            "src": "1114:12:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address payable)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "stateMutability": "payable"
                                    },
                                    "id": 846,
                                    "name": "ElementaryTypeName",
                                    "src": "1129:8:1"
                                  }
                                ],
                                "id": 847,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1129:8:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 848,
                                    "name": "Identifier",
                                    "src": "1137:3:1"
                                  }
                                ],
                                "id": 849,
                                "name": "MemberAccess",
                                "src": "1137:10:1"
                              }
                            ],
                            "id": 850,
                            "name": "FunctionCall",
                            "src": "1129:19:1"
                          }
                        ],
                        "id": 851,
                        "name": "Assignment",
                        "src": "1114:34:1"
                      }
                    ],
                    "id": 852,
                    "name": "ExpressionStatement",
                    "src": "1114:34:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "type": "function (address)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 842,
                                  "type": "address[] storage ref",
                                  "value": "listOfOwners"
                                },
                                "id": 853,
                                "name": "Identifier",
                                "src": "1159:12:1"
                              }
                            ],
                            "id": 855,
                            "name": "MemberAccess",
                            "src": "1159:17:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 856,
                                    "name": "ElementaryTypeName",
                                    "src": "1177:7:1"
                                  }
                                ],
                                "id": 857,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1177:7:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 858,
                                    "name": "Identifier",
                                    "src": "1185:3:1"
                                  }
                                ],
                                "id": 859,
                                "name": "MemberAccess",
                                "src": "1185:10:1"
                              }
                            ],
                            "id": 860,
                            "name": "FunctionCall",
                            "src": "1177:19:1"
                          }
                        ],
                        "id": 861,
                        "name": "FunctionCall",
                        "src": "1159:38:1"
                      }
                    ],
                    "id": 862,
                    "name": "ExpressionStatement",
                    "src": "1159:38:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract Certificates"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 828,
                              "type": "contract Certificates",
                              "value": "_CertificatesContract"
                            },
                            "id": 863,
                            "name": "Identifier",
                            "src": "1208:21:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract Certificates",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "function (address[] memory) payable returns (contract Certificates)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "Certificates",
                                      "referencedDeclaration": 803,
                                      "type": "contract Certificates"
                                    },
                                    "id": 864,
                                    "name": "UserDefinedTypeName",
                                    "src": "1236:12:1"
                                  }
                                ],
                                "id": 865,
                                "name": "NewExpression",
                                "src": "1232:16:1"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 842,
                                  "type": "address[] storage ref",
                                  "value": "listOfOwners"
                                },
                                "id": 866,
                                "name": "Identifier",
                                "src": "1249:12:1"
                              }
                            ],
                            "id": 867,
                            "name": "FunctionCall",
                            "src": "1232:30:1"
                          }
                        ],
                        "id": 868,
                        "name": "Assignment",
                        "src": "1208:54:1"
                      }
                    ],
                    "id": 869,
                    "name": "ExpressionStatement",
                    "src": "1208:54:1"
                  }
                ],
                "id": 870,
                "name": "Block",
                "src": "1103:167:1"
              }
            ],
            "id": 871,
            "name": "FunctionDefinition",
            "src": "1082:188:1"
          },
          {
            "attributes": {
              "functionSelector": "858e7ce6",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "sendProposal",
              "scope": 1052,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "provider",
                      "scope": 917,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 872,
                        "name": "ElementaryTypeName",
                        "src": "1340:7:1"
                      }
                    ],
                    "id": 873,
                    "name": "VariableDeclaration",
                    "src": "1340:16:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "providerInfo",
                      "scope": 917,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 874,
                        "name": "ElementaryTypeName",
                        "src": "1358:6:1"
                      }
                    ],
                    "id": 875,
                    "name": "VariableDeclaration",
                    "src": "1358:26:1"
                  }
                ],
                "id": 876,
                "name": "ParameterList",
                "src": "1339:46:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 877,
                "name": "ParameterList",
                "src": "1401:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
                                  "typeString": "literal_string \"Not enough funds\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 878,
                            "name": "Identifier",
                            "src": "1411:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 879,
                                    "name": "Identifier",
                                    "src": "1419:3:1"
                                  }
                                ],
                                "id": 880,
                                "name": "MemberAccess",
                                "src": "1419:9:1"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 826,
                                  "type": "uint256",
                                  "value": "_PriceWei"
                                },
                                "id": 881,
                                "name": "Identifier",
                                "src": "1432:9:1"
                              }
                            ],
                            "id": 882,
                            "name": "BinaryOperation",
                            "src": "1419:22:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4e6f7420656e6f7567682066756e6473",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Not enough funds\"",
                              "value": "Not enough funds"
                            },
                            "id": 883,
                            "name": "Literal",
                            "src": "1443:18:1"
                          }
                        ],
                        "id": 884,
                        "name": "FunctionCall",
                        "src": "1411:51:1"
                      }
                    ],
                    "id": 885,
                    "name": "ExpressionStatement",
                    "src": "1411:51:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0da85400664844d70ccd0359a8efb1e3bee841b9edc8be57f13660e343aac247",
                                  "typeString": "literal_string \"Proposal already submitted\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 886,
                            "name": "Identifier",
                            "src": "1472:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_proposalState_$823",
                                "typeString": "enum Proposals.proposalState"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "NOT_SUBMITTED",
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 823,
                                      "type": "type(enum Proposals.proposalState)",
                                      "value": "proposalState"
                                    },
                                    "id": 887,
                                    "name": "Identifier",
                                    "src": "1480:13:1"
                                  }
                                ],
                                "id": 888,
                                "name": "MemberAccess",
                                "src": "1480:27:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "_state",
                                  "referencedDeclaration": 830,
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Proposals._proposal storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 839,
                                          "type": "mapping(address => struct Proposals._proposal storage ref)",
                                          "value": "_proposals"
                                        },
                                        "id": 889,
                                        "name": "Identifier",
                                        "src": "1511:10:1"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 873,
                                          "type": "address",
                                          "value": "provider"
                                        },
                                        "id": 890,
                                        "name": "Identifier",
                                        "src": "1522:8:1"
                                      }
                                    ],
                                    "id": 891,
                                    "name": "IndexAccess",
                                    "src": "1511:20:1"
                                  }
                                ],
                                "id": 892,
                                "name": "MemberAccess",
                                "src": "1511:27:1"
                              }
                            ],
                            "id": 893,
                            "name": "BinaryOperation",
                            "src": "1480:58:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "50726f706f73616c20616c7265616479207375626d6974746564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Proposal already submitted\"",
                              "value": "Proposal already submitted"
                            },
                            "id": 894,
                            "name": "Literal",
                            "src": "1540:28:1"
                          }
                        ],
                        "id": 895,
                        "name": "FunctionCall",
                        "src": "1472:97:1"
                      }
                    ],
                    "id": 896,
                    "name": "ExpressionStatement",
                    "src": "1472:97:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum Proposals.proposalState"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "_state",
                              "referencedDeclaration": 830,
                              "type": "enum Proposals.proposalState"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Proposals._proposal storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 839,
                                      "type": "mapping(address => struct Proposals._proposal storage ref)",
                                      "value": "_proposals"
                                    },
                                    "id": 897,
                                    "name": "Identifier",
                                    "src": "1581:10:1"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 873,
                                      "type": "address",
                                      "value": "provider"
                                    },
                                    "id": 898,
                                    "name": "Identifier",
                                    "src": "1592:8:1"
                                  }
                                ],
                                "id": 899,
                                "name": "IndexAccess",
                                "src": "1581:20:1"
                              }
                            ],
                            "id": 900,
                            "name": "MemberAccess",
                            "src": "1581:27:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "PENDING",
                              "type": "enum Proposals.proposalState"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 823,
                                  "type": "type(enum Proposals.proposalState)",
                                  "value": "proposalState"
                                },
                                "id": 901,
                                "name": "Identifier",
                                "src": "1611:13:1"
                              }
                            ],
                            "id": 902,
                            "name": "MemberAccess",
                            "src": "1611:21:1"
                          }
                        ],
                        "id": 903,
                        "name": "Assignment",
                        "src": "1581:51:1"
                      }
                    ],
                    "id": 904,
                    "name": "ExpressionStatement",
                    "src": "1581:51:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "_providerInfo",
                              "referencedDeclaration": 832,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Proposals._proposal storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 839,
                                      "type": "mapping(address => struct Proposals._proposal storage ref)",
                                      "value": "_proposals"
                                    },
                                    "id": 905,
                                    "name": "Identifier",
                                    "src": "1642:10:1"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 873,
                                      "type": "address",
                                      "value": "provider"
                                    },
                                    "id": 906,
                                    "name": "Identifier",
                                    "src": "1653:8:1"
                                  }
                                ],
                                "id": 907,
                                "name": "IndexAccess",
                                "src": "1642:20:1"
                              }
                            ],
                            "id": 908,
                            "name": "MemberAccess",
                            "src": "1642:34:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 875,
                              "type": "string memory",
                              "value": "providerInfo"
                            },
                            "id": 909,
                            "name": "Identifier",
                            "src": "1679:12:1"
                          }
                        ],
                        "id": 910,
                        "name": "Assignment",
                        "src": "1642:49:1"
                      }
                    ],
                    "id": 911,
                    "name": "ExpressionStatement",
                    "src": "1642:49:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 810,
                              "type": "function (address)",
                              "value": "_SendProposalId"
                            },
                            "id": 912,
                            "name": "Identifier",
                            "src": "1708:15:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 873,
                              "type": "address",
                              "value": "provider"
                            },
                            "id": 913,
                            "name": "Identifier",
                            "src": "1724:8:1"
                          }
                        ],
                        "id": 914,
                        "name": "FunctionCall",
                        "src": "1708:25:1"
                      }
                    ],
                    "id": 915,
                    "name": "EmitStatement",
                    "src": "1703:30:1"
                  }
                ],
                "id": 916,
                "name": "Block",
                "src": "1401:340:1"
              }
            ],
            "id": 917,
            "name": "FunctionDefinition",
            "src": "1318:423:1"
          },
          {
            "attributes": {
              "functionSelector": "03354faa",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "approveProposal",
              "scope": 1052,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "provider",
                      "scope": 964,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 918,
                        "name": "ElementaryTypeName",
                        "src": "1778:7:1"
                      }
                    ],
                    "id": 919,
                    "name": "VariableDeclaration",
                    "src": "1778:16:1"
                  }
                ],
                "id": 920,
                "name": "ParameterList",
                "src": "1777:18:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 921,
                "name": "ParameterList",
                "src": "1802:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e47a6786529766886d436a345077f435d350ad8948cbcc8f80557eed8f833199",
                                  "typeString": "literal_string \"Not allowed to approve proposals\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 922,
                            "name": "Identifier",
                            "src": "1813:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 923,
                                    "name": "Identifier",
                                    "src": "1821:3:1"
                                  }
                                ],
                                "id": 924,
                                "name": "MemberAccess",
                                "src": "1821:10:1"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 835,
                                  "type": "address payable",
                                  "value": "_chairperson"
                                },
                                "id": 925,
                                "name": "Identifier",
                                "src": "1835:12:1"
                              }
                            ],
                            "id": 926,
                            "name": "BinaryOperation",
                            "src": "1821:26:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4e6f7420616c6c6f77656420746f20617070726f76652070726f706f73616c73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Not allowed to approve proposals\"",
                              "value": "Not allowed to approve proposals"
                            },
                            "id": 927,
                            "name": "Literal",
                            "src": "1849:34:1"
                          }
                        ],
                        "id": 928,
                        "name": "FunctionCall",
                        "src": "1813:71:1"
                      }
                    ],
                    "id": 929,
                    "name": "ExpressionStatement",
                    "src": "1813:71:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0908392764ff6d576b46d9dcf28b4be81f3d05bbb0d100b4a2123c28acf9f710",
                                  "typeString": "literal_string \"This proposal cannot be modified\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 930,
                            "name": "Identifier",
                            "src": "1895:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_proposalState_$823",
                                "typeString": "enum Proposals.proposalState"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "PENDING",
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 823,
                                      "type": "type(enum Proposals.proposalState)",
                                      "value": "proposalState"
                                    },
                                    "id": 931,
                                    "name": "Identifier",
                                    "src": "1903:13:1"
                                  }
                                ],
                                "id": 932,
                                "name": "MemberAccess",
                                "src": "1903:21:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "_state",
                                  "referencedDeclaration": 830,
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Proposals._proposal storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 839,
                                          "type": "mapping(address => struct Proposals._proposal storage ref)",
                                          "value": "_proposals"
                                        },
                                        "id": 933,
                                        "name": "Identifier",
                                        "src": "1928:10:1"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 919,
                                          "type": "address",
                                          "value": "provider"
                                        },
                                        "id": 934,
                                        "name": "Identifier",
                                        "src": "1939:8:1"
                                      }
                                    ],
                                    "id": 935,
                                    "name": "IndexAccess",
                                    "src": "1928:20:1"
                                  }
                                ],
                                "id": 936,
                                "name": "MemberAccess",
                                "src": "1928:27:1"
                              }
                            ],
                            "id": 937,
                            "name": "BinaryOperation",
                            "src": "1903:52:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "546869732070726f706f73616c2063616e6e6f74206265206d6f646966696564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"This proposal cannot be modified\"",
                              "value": "This proposal cannot be modified"
                            },
                            "id": 938,
                            "name": "Literal",
                            "src": "1957:34:1"
                          }
                        ],
                        "id": 939,
                        "name": "FunctionCall",
                        "src": "1895:97:1"
                      }
                    ],
                    "id": 940,
                    "name": "ExpressionStatement",
                    "src": "1895:97:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum Proposals.proposalState"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "_state",
                              "referencedDeclaration": 830,
                              "type": "enum Proposals.proposalState"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Proposals._proposal storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 839,
                                      "type": "mapping(address => struct Proposals._proposal storage ref)",
                                      "value": "_proposals"
                                    },
                                    "id": 941,
                                    "name": "Identifier",
                                    "src": "2005:10:1"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 919,
                                      "type": "address",
                                      "value": "provider"
                                    },
                                    "id": 942,
                                    "name": "Identifier",
                                    "src": "2016:8:1"
                                  }
                                ],
                                "id": 943,
                                "name": "IndexAccess",
                                "src": "2005:20:1"
                              }
                            ],
                            "id": 944,
                            "name": "MemberAccess",
                            "src": "2005:27:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "APPROVED",
                              "type": "enum Proposals.proposalState"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 823,
                                  "type": "type(enum Proposals.proposalState)",
                                  "value": "proposalState"
                                },
                                "id": 945,
                                "name": "Identifier",
                                "src": "2035:13:1"
                              }
                            ],
                            "id": 946,
                            "name": "MemberAccess",
                            "src": "2035:22:1"
                          }
                        ],
                        "id": 947,
                        "name": "Assignment",
                        "src": "2005:52:1"
                      }
                    ],
                    "id": 948,
                    "name": "ExpressionStatement",
                    "src": "2005:52:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "addProvider",
                              "referencedDeclaration": 164,
                              "type": "function (address,string memory) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 828,
                                  "type": "contract Certificates",
                                  "value": "_CertificatesContract"
                                },
                                "id": 949,
                                "name": "Identifier",
                                "src": "2068:21:1"
                              }
                            ],
                            "id": 951,
                            "name": "MemberAccess",
                            "src": "2068:33:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 919,
                              "type": "address",
                              "value": "provider"
                            },
                            "id": 952,
                            "name": "Identifier",
                            "src": "2102:8:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_providerInfo",
                              "referencedDeclaration": 832,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Proposals._proposal storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 839,
                                      "type": "mapping(address => struct Proposals._proposal storage ref)",
                                      "value": "_proposals"
                                    },
                                    "id": 953,
                                    "name": "Identifier",
                                    "src": "2112:10:1"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 919,
                                      "type": "address",
                                      "value": "provider"
                                    },
                                    "id": 954,
                                    "name": "Identifier",
                                    "src": "2123:8:1"
                                  }
                                ],
                                "id": 955,
                                "name": "IndexAccess",
                                "src": "2112:20:1"
                              }
                            ],
                            "id": 956,
                            "name": "MemberAccess",
                            "src": "2112:34:1"
                          }
                        ],
                        "id": 957,
                        "name": "FunctionCall",
                        "src": "2068:79:1"
                      }
                    ],
                    "id": 958,
                    "name": "ExpressionStatement",
                    "src": "2068:79:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 814,
                              "type": "function (address)",
                              "value": "_ApproveProposalId"
                            },
                            "id": 959,
                            "name": "Identifier",
                            "src": "2168:18:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 919,
                              "type": "address",
                              "value": "provider"
                            },
                            "id": 960,
                            "name": "Identifier",
                            "src": "2187:8:1"
                          }
                        ],
                        "id": 961,
                        "name": "FunctionCall",
                        "src": "2168:28:1"
                      }
                    ],
                    "id": 962,
                    "name": "EmitStatement",
                    "src": "2163:33:1"
                  }
                ],
                "id": 963,
                "name": "Block",
                "src": "1802:402:1"
              }
            ],
            "id": 964,
            "name": "FunctionDefinition",
            "src": "1753:451:1"
          },
          {
            "attributes": {
              "functionSelector": "cddab28b",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "rejectProposal",
              "scope": 1052,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "provider",
                      "scope": 1001,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 965,
                        "name": "ElementaryTypeName",
                        "src": "2236:7:1"
                      }
                    ],
                    "id": 966,
                    "name": "VariableDeclaration",
                    "src": "2236:16:1"
                  }
                ],
                "id": 967,
                "name": "ParameterList",
                "src": "2235:18:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 968,
                "name": "ParameterList",
                "src": "2260:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e87ab8decf728e60123ed750e36ea6d88255b435f630494cd4bb6c3f67c7bdba",
                                  "typeString": "literal_string \"Not allowed to reject proposals\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 969,
                            "name": "Identifier",
                            "src": "2271:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 970,
                                    "name": "Identifier",
                                    "src": "2279:3:1"
                                  }
                                ],
                                "id": 971,
                                "name": "MemberAccess",
                                "src": "2279:10:1"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 835,
                                  "type": "address payable",
                                  "value": "_chairperson"
                                },
                                "id": 972,
                                "name": "Identifier",
                                "src": "2293:12:1"
                              }
                            ],
                            "id": 973,
                            "name": "BinaryOperation",
                            "src": "2279:26:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4e6f7420616c6c6f77656420746f2072656a6563742070726f706f73616c73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Not allowed to reject proposals\"",
                              "value": "Not allowed to reject proposals"
                            },
                            "id": 974,
                            "name": "Literal",
                            "src": "2307:33:1"
                          }
                        ],
                        "id": 975,
                        "name": "FunctionCall",
                        "src": "2271:70:1"
                      }
                    ],
                    "id": 976,
                    "name": "ExpressionStatement",
                    "src": "2271:70:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0908392764ff6d576b46d9dcf28b4be81f3d05bbb0d100b4a2123c28acf9f710",
                                  "typeString": "literal_string \"This proposal cannot be modified\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 977,
                            "name": "Identifier",
                            "src": "2352:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_proposalState_$823",
                                "typeString": "enum Proposals.proposalState"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "PENDING",
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 823,
                                      "type": "type(enum Proposals.proposalState)",
                                      "value": "proposalState"
                                    },
                                    "id": 978,
                                    "name": "Identifier",
                                    "src": "2360:13:1"
                                  }
                                ],
                                "id": 979,
                                "name": "MemberAccess",
                                "src": "2360:21:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "_state",
                                  "referencedDeclaration": 830,
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Proposals._proposal storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 839,
                                          "type": "mapping(address => struct Proposals._proposal storage ref)",
                                          "value": "_proposals"
                                        },
                                        "id": 980,
                                        "name": "Identifier",
                                        "src": "2385:10:1"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 966,
                                          "type": "address",
                                          "value": "provider"
                                        },
                                        "id": 981,
                                        "name": "Identifier",
                                        "src": "2396:8:1"
                                      }
                                    ],
                                    "id": 982,
                                    "name": "IndexAccess",
                                    "src": "2385:20:1"
                                  }
                                ],
                                "id": 983,
                                "name": "MemberAccess",
                                "src": "2385:27:1"
                              }
                            ],
                            "id": 984,
                            "name": "BinaryOperation",
                            "src": "2360:52:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "546869732070726f706f73616c2063616e6e6f74206265206d6f646966696564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"This proposal cannot be modified\"",
                              "value": "This proposal cannot be modified"
                            },
                            "id": 985,
                            "name": "Literal",
                            "src": "2414:34:1"
                          }
                        ],
                        "id": 986,
                        "name": "FunctionCall",
                        "src": "2352:97:1"
                      }
                    ],
                    "id": 987,
                    "name": "ExpressionStatement",
                    "src": "2352:97:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum Proposals.proposalState"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "_state",
                              "referencedDeclaration": 830,
                              "type": "enum Proposals.proposalState"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Proposals._proposal storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 839,
                                      "type": "mapping(address => struct Proposals._proposal storage ref)",
                                      "value": "_proposals"
                                    },
                                    "id": 988,
                                    "name": "Identifier",
                                    "src": "2462:10:1"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 966,
                                      "type": "address",
                                      "value": "provider"
                                    },
                                    "id": 989,
                                    "name": "Identifier",
                                    "src": "2473:8:1"
                                  }
                                ],
                                "id": 990,
                                "name": "IndexAccess",
                                "src": "2462:20:1"
                              }
                            ],
                            "id": 991,
                            "name": "MemberAccess",
                            "src": "2462:27:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "REJECTED",
                              "type": "enum Proposals.proposalState"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 823,
                                  "type": "type(enum Proposals.proposalState)",
                                  "value": "proposalState"
                                },
                                "id": 992,
                                "name": "Identifier",
                                "src": "2492:13:1"
                              }
                            ],
                            "id": 993,
                            "name": "MemberAccess",
                            "src": "2492:22:1"
                          }
                        ],
                        "id": 994,
                        "name": "Assignment",
                        "src": "2462:52:1"
                      }
                    ],
                    "id": 995,
                    "name": "ExpressionStatement",
                    "src": "2462:52:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 818,
                              "type": "function (address)",
                              "value": "_RejectProposalId"
                            },
                            "id": 996,
                            "name": "Identifier",
                            "src": "2532:17:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 966,
                              "type": "address",
                              "value": "provider"
                            },
                            "id": 997,
                            "name": "Identifier",
                            "src": "2550:8:1"
                          }
                        ],
                        "id": 998,
                        "name": "FunctionCall",
                        "src": "2532:27:1"
                      }
                    ],
                    "id": 999,
                    "name": "EmitStatement",
                    "src": "2527:32:1"
                  }
                ],
                "id": 1000,
                "name": "Block",
                "src": "2260:307:1"
              }
            ],
            "id": 1001,
            "name": "FunctionDefinition",
            "src": "2212:355:1"
          },
          {
            "attributes": {
              "functionSelector": "efec414b",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "retrieveProposal",
              "scope": 1052,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "provider",
                      "scope": 1035,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1002,
                        "name": "ElementaryTypeName",
                        "src": "2605:7:1"
                      }
                    ],
                    "id": 1003,
                    "name": "VariableDeclaration",
                    "src": "2605:16:1"
                  }
                ],
                "id": 1004,
                "name": "ParameterList",
                "src": "2604:18:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1035,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1005,
                        "name": "ElementaryTypeName",
                        "src": "2644:4:1"
                      }
                    ],
                    "id": 1006,
                    "name": "VariableDeclaration",
                    "src": "2644:4:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1035,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1007,
                        "name": "ElementaryTypeName",
                        "src": "2650:6:1"
                      }
                    ],
                    "id": 1008,
                    "name": "VariableDeclaration",
                    "src": "2650:13:1"
                  }
                ],
                "id": 1009,
                "name": "ParameterList",
                "src": "2643:21:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ca5c8ad1855a349d22e6e95653caace74b2a2a8baa1054b1017b98590706ce9a",
                                  "typeString": "literal_string \"This proposal does not exist\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1010,
                            "name": "Identifier",
                            "src": "2676:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_proposalState_$823",
                                "typeString": "enum Proposals.proposalState"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "NOT_SUBMITTED",
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 823,
                                      "type": "type(enum Proposals.proposalState)",
                                      "value": "proposalState"
                                    },
                                    "id": 1011,
                                    "name": "Identifier",
                                    "src": "2684:13:1"
                                  }
                                ],
                                "id": 1012,
                                "name": "MemberAccess",
                                "src": "2684:27:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "_state",
                                  "referencedDeclaration": 830,
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Proposals._proposal storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 839,
                                          "type": "mapping(address => struct Proposals._proposal storage ref)",
                                          "value": "_proposals"
                                        },
                                        "id": 1013,
                                        "name": "Identifier",
                                        "src": "2715:10:1"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1003,
                                          "type": "address",
                                          "value": "provider"
                                        },
                                        "id": 1014,
                                        "name": "Identifier",
                                        "src": "2726:8:1"
                                      }
                                    ],
                                    "id": 1015,
                                    "name": "IndexAccess",
                                    "src": "2715:20:1"
                                  }
                                ],
                                "id": 1016,
                                "name": "MemberAccess",
                                "src": "2715:27:1"
                              }
                            ],
                            "id": 1017,
                            "name": "BinaryOperation",
                            "src": "2684:58:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "546869732070726f706f73616c20646f6573206e6f74206578697374",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"This proposal does not exist\"",
                              "value": "This proposal does not exist"
                            },
                            "id": 1018,
                            "name": "Literal",
                            "src": "2744:30:1"
                          }
                        ],
                        "id": 1019,
                        "name": "FunctionCall",
                        "src": "2676:99:1"
                      }
                    ],
                    "id": 1020,
                    "name": "ExpressionStatement",
                    "src": "2676:99:1"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 1009
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(uint256,string storage ref)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_proposalState_$823",
                                      "typeString": "enum Proposals.proposalState"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint"
                                    },
                                    "id": 1021,
                                    "name": "ElementaryTypeName",
                                    "src": "2796:4:1"
                                  }
                                ],
                                "id": 1022,
                                "name": "ElementaryTypeNameExpression",
                                "src": "2796:4:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "_state",
                                  "referencedDeclaration": 830,
                                  "type": "enum Proposals.proposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Proposals._proposal storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 839,
                                          "type": "mapping(address => struct Proposals._proposal storage ref)",
                                          "value": "_proposals"
                                        },
                                        "id": 1023,
                                        "name": "Identifier",
                                        "src": "2801:10:1"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1003,
                                          "type": "address",
                                          "value": "provider"
                                        },
                                        "id": 1024,
                                        "name": "Identifier",
                                        "src": "2812:8:1"
                                      }
                                    ],
                                    "id": 1025,
                                    "name": "IndexAccess",
                                    "src": "2801:20:1"
                                  }
                                ],
                                "id": 1026,
                                "name": "MemberAccess",
                                "src": "2801:27:1"
                              }
                            ],
                            "id": 1027,
                            "name": "FunctionCall",
                            "src": "2796:33:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_providerInfo",
                              "referencedDeclaration": 832,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Proposals._proposal storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 839,
                                      "type": "mapping(address => struct Proposals._proposal storage ref)",
                                      "value": "_proposals"
                                    },
                                    "id": 1028,
                                    "name": "Identifier",
                                    "src": "2831:10:1"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1003,
                                      "type": "address",
                                      "value": "provider"
                                    },
                                    "id": 1029,
                                    "name": "Identifier",
                                    "src": "2842:8:1"
                                  }
                                ],
                                "id": 1030,
                                "name": "IndexAccess",
                                "src": "2831:20:1"
                              }
                            ],
                            "id": 1031,
                            "name": "MemberAccess",
                            "src": "2831:34:1"
                          }
                        ],
                        "id": 1032,
                        "name": "TupleExpression",
                        "src": "2795:71:1"
                      }
                    ],
                    "id": 1033,
                    "name": "Return",
                    "src": "2788:78:1"
                  }
                ],
                "id": 1034,
                "name": "Block",
                "src": "2665:209:1"
              }
            ],
            "id": 1035,
            "name": "FunctionDefinition",
            "src": "2579:295:1"
          },
          {
            "attributes": {
              "functionSelector": "3bd2993c",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "retrieveCertificatesContractAddress",
              "scope": 1052,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1036,
                "name": "ParameterList",
                "src": "2967:2:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1043,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract Certificates",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Certificates",
                          "referencedDeclaration": 803,
                          "type": "contract Certificates"
                        },
                        "id": 1037,
                        "name": "UserDefinedTypeName",
                        "src": "2991:12:1"
                      }
                    ],
                    "id": 1038,
                    "name": "VariableDeclaration",
                    "src": "2991:12:1"
                  }
                ],
                "id": 1039,
                "name": "ParameterList",
                "src": "2990:14:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1039
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 828,
                          "type": "contract Certificates",
                          "value": "_CertificatesContract"
                        },
                        "id": 1040,
                        "name": "Identifier",
                        "src": "3023:21:1"
                      }
                    ],
                    "id": 1041,
                    "name": "Return",
                    "src": "3016:28:1"
                  }
                ],
                "id": 1042,
                "name": "Block",
                "src": "3005:47:1"
              }
            ],
            "id": 1043,
            "name": "FunctionDefinition",
            "src": "2923:129:1"
          },
          {
            "attributes": {
              "functionSelector": "db85bc4d",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "retrieveChairPerson",
              "scope": 1052,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1044,
                "name": "ParameterList",
                "src": "3092:2:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1051,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1045,
                        "name": "ElementaryTypeName",
                        "src": "3116:7:1"
                      }
                    ],
                    "id": 1046,
                    "name": "VariableDeclaration",
                    "src": "3116:7:1"
                  }
                ],
                "id": 1047,
                "name": "ParameterList",
                "src": "3115:9:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1047
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 835,
                          "type": "address payable",
                          "value": "_chairperson"
                        },
                        "id": 1048,
                        "name": "Identifier",
                        "src": "3143:12:1"
                      }
                    ],
                    "id": 1049,
                    "name": "Return",
                    "src": "3136:19:1"
                  }
                ],
                "id": 1050,
                "name": "Block",
                "src": "3125:38:1"
              }
            ],
            "id": 1051,
            "name": "FunctionDefinition",
            "src": "3064:99:1"
          }
        ],
        "id": 1052,
        "name": "ContractDefinition",
        "src": "558:2614:1"
      }
    ],
    "id": 1053,
    "name": "SourceUnit",
    "src": "39:3133:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x147d57060cEEbe8a6B761859b7D7655AcfA75508",
      "transactionHash": "0x20aca4f090990076bb1164872c06ca0855a6868089ac969d4d4d3f66da1d4d1f"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-04T12:27:18.284Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}