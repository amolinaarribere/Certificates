{
  "contractName": "BeaconProxy",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":\"BeaconProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xe002cfae5c997ad96a1b435be136d2a31a4bd6310f0be84e4d1a7e0c4dc93a5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1fee8a32d72129ec1d23b60d7fddec3b6ef81f3dd8e225c0f732b482fb67125\",\"dweb:/ipfs/QmRAhXZZH95JpUmMeBGBDb4rhV8pEnDZLaTYazRC2dVaZp\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x97d5615ed968b9457ec0ca61fe32465381f7b7d4b65df4ee689f7dbe1a2a7a25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54acff584108517978409e881c0713250196b39054aa47e2cee5b6b9d41a2759\",\"dweb:/ipfs/QmQbZ9rJ3ThNEkrceNemTKjaN5Z9v6mVZuk5CdHZbvoFWb\"]},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x4151ebe3cad53de88e858a3b2a62ad09d72413f94814245805ce035213dca200\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfee83cd076446eb89d79a100f9c56b3a5e3ce66cdcc23543b144b823b5a1784\",\"dweb:/ipfs/QmU2YCB4XEAV8iSn9XQd69dLf7vA7QqRripZcUV2PcFqRo\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x1787aee0279f26d98400e030f9780d4fba6dc9aec7388fa31deca8959f47adb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ad655bbccda034dfa9dcce58be2f14105c3db41909dd8983febb03020c0954\",\"dweb:/ipfs/QmemV5KpajYrN78JMYgYctESkgfJvzRmMCqz88eiFyER9u\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2c035598c90ecd26c00f2b73207b4b4d52e3c46484f6e1380e4f9bb4a43cabc7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b04637146b14ae894c047c0dbd933c3ebf76898cd895aa881f5ea4d5db337da2\",\"dweb:/ipfs/QmZE73N5EvuAch1CX88DePfCgmwjLvKSaFEunjy5UoAuU9\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xff211e55ae47cb2f597e0b1046132bc7f034b9d6a1d57c490ed83f17977a87f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://355d2525ec0dd2d47a586f63938c0c3c528324465a41ddef3e471302c13a4f9e\",\"dweb:/ipfs/QmQyCmpV2zvw4mkWTMaAkVxUb9LvHMigi15aRzCXNkzeyz\"]}},\"version\":1}",
  "bytecode": "0x608060405260405161099338038061099383398101604081905261002291610470565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5161057f565b60008051602061094c83398151915214610069576100696105d0565b6100758282600061007c565b50506105fc565b61008583610156565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100c65750805b156101515761014f836001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561010757600080fd5b505afa15801561011b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013f9190610455565b836102f660201b6100291760201c565b505b505050565b6101698161032260201b6100551760201c565b6101c85760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61024b816001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561020457600080fd5b505afa158015610218573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023c9190610455565b61032260201b6100551760201c565b6102b05760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101bf565b806102d560008051602061094c83398151915260001b61032860201b61005b1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b606061031b838360405180606001604052806027815260200161096c6027913961032b565b9392505050565b3b151590565b90565b6060833b61038a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101bf565b600080856001600160a01b0316856040516103a59190610530565b600060405180830381855af49150503d80600081146103e0576040519150601f19603f3d011682016040523d82523d6000602084013e6103e5565b606091505b5090925090506103f6828286610400565b9695505050505050565b6060831561040f57508161031b565b82511561041f5782518084602001fd5b8160405162461bcd60e51b81526004016101bf919061054c565b80516001600160a01b038116811461045057600080fd5b919050565b60006020828403121561046757600080fd5b61031b82610439565b6000806040838503121561048357600080fd5b61048c83610439565b60208401519092506001600160401b03808211156104a957600080fd5b818501915085601f8301126104bd57600080fd5b8151818111156104cf576104cf6105e6565b604051601f8201601f19908116603f011681019083821181831017156104f7576104f76105e6565b8160405282815288602084870101111561051057600080fd5b6105218360208301602088016105a4565b80955050505050509250929050565b600082516105428184602087016105a4565b9190910192915050565b602081526000825180602084015261056b8160408501602087016105a4565b601f01601f19169190910160400192915050565b60008282101561059f57634e487b7160e01b600052601160045260246000fd5b500390565b60005b838110156105bf5781810151838201526020016105a7565b8381111561014f5750506000910152565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6103418061060b6000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261005e565b610106565b565b606061004e83836040518060600160405280602781526020016102e56027913961012a565b9392505050565b3b151590565b90565b60006100917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100c957600080fd5b505afa1580156100dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610101919061023c565b905090565b3660008037600080366000845af43d6000803e808015610125573d6000f35b3d6000fd5b6060833b61018e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b0316856040516101a99190610265565b600060405180830381855af49150503d80600081146101e4576040519150601f19603f3d011682016040523d82523d6000602084013e6101e9565b606091505b50915091506101f9828286610203565b9695505050505050565b6060831561021257508161004e565b8251156102225782518084602001fd5b8160405162461bcd60e51b81526004016101859190610281565b60006020828403121561024e57600080fd5b81516001600160a01b038116811461004e57600080fd5b600082516102778184602087016102b4565b9190910192915050565b60208152600082518060208401526102a08160408501602087016102b4565b601f01601f19169190910160400192915050565b60005b838110156102cf5781810151838201526020016102b7565b838111156102de576000848401525b5050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d403ceeafd1a8a95bac5042ee17868655bf495ec1518e7fe81eb94935c79e11764736f6c63430008070033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
  "deployedBytecode": "0x60806040523661001357610011610017565b005b6100115b61002761002261005e565b610106565b565b606061004e83836040518060600160405280602781526020016102e56027913961012a565b9392505050565b3b151590565b90565b60006100917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100c957600080fd5b505afa1580156100dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610101919061023c565b905090565b3660008037600080366000845af43d6000803e808015610125573d6000f35b3d6000fd5b6060833b61018e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b0316856040516101a99190610265565b600060405180830381855af49150503d80600081146101e4576040519150601f19603f3d011682016040523d82523d6000602084013e6101e9565b606091505b50915091506101f9828286610203565b9695505050505050565b6060831561021257508161004e565b8251156102225782518084602001fd5b8160405162461bcd60e51b81526004016101859190610281565b60006020828403121561024e57600080fd5b81516001600160a01b038116811461004e57600080fd5b600082516102778184602087016102b4565b9190910192915050565b60208152600082518060208401526102a08160408501602087016102b4565b601f01601f19169190910160400192915050565b60005b838110156102cf5781810151838201526020016102b7565b838111156102de576000848401525b5050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d403ceeafd1a8a95bac5042ee17868655bf495ec1518e7fe81eb94935c79e11764736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4030:63",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:63",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:63",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:63"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:63"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:63"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:63"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:63",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:63",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:63"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:63"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:63",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:63"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:63"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:63"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:63"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:63"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:63"
                  },
                  "nodeType": "YulIf",
                  "src": "115:70:63"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:63",
                "type": ""
              }
            ],
            "src": "14:177:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "277:127:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "323:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "332:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "335:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "325:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "325:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "325:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "298:7:63"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "307:9:63"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "294:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "294:23:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "290:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "290:32:63"
                  },
                  "nodeType": "YulIf",
                  "src": "287:52:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "348:50:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "388:9:63"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "358:29:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:40:63"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "348:6:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "243:9:63",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "254:7:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "266:6:63",
                "type": ""
              }
            ],
            "src": "196:208:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "516:861:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "562:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "571:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "574:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "564:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "564:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "564:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "537:7:63"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "546:9:63"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "533:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "533:23:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "558:2:63",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "529:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "529:32:63"
                  },
                  "nodeType": "YulIf",
                  "src": "526:52:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "587:50:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "627:9:63"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "597:29:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "597:40:63"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "587:6:63"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "646:39:63",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "670:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "681:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "666:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "666:18:63"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "660:5:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "660:25:63"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "650:6:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "694:28:63",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "712:2:63",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "716:1:63",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "708:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "708:10:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "720:1:63",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "704:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "704:18:63"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "698:2:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "749:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "758:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "761:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "751:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "751:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "751:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "737:6:63"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "745:2:63"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "734:2:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "734:14:63"
                  },
                  "nodeType": "YulIf",
                  "src": "731:34:63"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "774:32:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "788:9:63"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "799:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "784:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "784:22:63"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "778:2:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "854:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "863:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "866:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "856:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "856:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "856:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "833:2:63"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "837:4:63",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "829:3:63"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "829:13:63"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "844:7:63"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "825:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "825:27:63"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "818:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "818:35:63"
                  },
                  "nodeType": "YulIf",
                  "src": "815:55:63"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "879:19:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "895:2:63"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "889:5:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "889:9:63"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "883:2:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "921:22:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "923:16:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "923:18:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "923:18:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "913:2:63"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "917:2:63"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "910:2:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "910:10:63"
                  },
                  "nodeType": "YulIf",
                  "src": "907:36:63"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "952:17:63",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "966:2:63",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "962:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "962:7:63"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "956:2:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "978:23:63",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "998:2:63",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "992:5:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "992:9:63"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "982:6:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1010:71:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1032:6:63"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1056:2:63"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1060:4:63",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1052:3:63"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1052:13:63"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1067:2:63"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1048:3:63"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1048:22:63"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1072:2:63",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1044:3:63"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1044:31:63"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1077:2:63"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1040:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1040:40:63"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1028:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1028:53:63"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1014:10:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1140:22:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1142:16:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1142:18:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1142:18:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1099:10:63"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1111:2:63"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1096:2:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1096:18:63"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1119:10:63"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1131:6:63"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1116:2:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1116:22:63"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1093:2:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1093:46:63"
                  },
                  "nodeType": "YulIf",
                  "src": "1090:72:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1178:2:63",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1182:10:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1171:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1171:22:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1171:22:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1209:6:63"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1217:2:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1202:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1202:18:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1202:18:63"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1266:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1275:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1278:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1268:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1268:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1268:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1243:2:63"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1247:2:63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1239:3:63"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1239:11:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1252:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1235:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1235:20:63"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1257:7:63"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1232:2:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1232:33:63"
                  },
                  "nodeType": "YulIf",
                  "src": "1229:53:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1317:2:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1321:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1313:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1313:11:63"
                      },
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1330:6:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1338:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1326:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1326:15:63"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1343:2:63"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1291:21:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1291:55:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1291:55:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1355:16:63",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1365:6:63"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1355:6:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "474:9:63",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "485:7:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "497:6:63",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "505:6:63",
                "type": ""
              }
            ],
            "src": "409:968:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1519:137:63",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1529:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1549:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1543:5:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1543:13:63"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1533:6:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1591:6:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1599:4:63",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1587:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1587:17:63"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1606:3:63"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1611:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1565:21:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1565:53:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1565:53:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1627:23:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1638:3:63"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1643:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1634:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1634:16:63"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1627:3:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1495:3:63",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1500:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1511:3:63",
                "type": ""
              }
            ],
            "src": "1382:274:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1782:262:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1799:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1810:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1792:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1792:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1792:21:63"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1822:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1842:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1836:5:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1836:13:63"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1826:6:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1869:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1880:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1865:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1865:18:63"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1885:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1858:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1858:34:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1858:34:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1927:6:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1935:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1923:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1923:15:63"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1944:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1955:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1940:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1940:18:63"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1960:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1901:21:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1901:66:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1901:66:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1976:62:63",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1992:9:63"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2011:6:63"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2019:2:63",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2007:3:63"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2007:15:63"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2028:2:63",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2024:3:63"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2024:7:63"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2003:3:63"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2003:29:63"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1988:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1988:45:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2035:2:63",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1984:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1984:54:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1976:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1751:9:63",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1762:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1773:4:63",
                "type": ""
              }
            ],
            "src": "1661:383:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2223:227:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2240:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2251:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2233:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2233:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2233:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2274:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2285:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2270:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2270:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2290:2:63",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2263:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2263:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2263:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2313:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2324:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2309:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2309:18:63"
                      },
                      {
                        "hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2329:34:63",
                        "type": "",
                        "value": "ERC1967: new beacon is not a con"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2302:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2302:62:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2302:62:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2384:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2395:2:63",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2380:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2380:18:63"
                      },
                      {
                        "hexValue": "7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2400:7:63",
                        "type": "",
                        "value": "tract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2373:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2373:35:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2373:35:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2417:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2429:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2440:3:63",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2425:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2425:19:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2417:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2200:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2214:4:63",
                "type": ""
              }
            ],
            "src": "2049:401:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2629:228:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2646:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2657:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2639:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2639:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2639:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2680:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2691:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2676:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2676:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2696:2:63",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2669:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2669:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2669:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2719:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2730:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2715:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2715:18:63"
                      },
                      {
                        "hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2735:34:63",
                        "type": "",
                        "value": "Address: delegate call to non-co"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2708:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2708:62:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2708:62:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2790:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2801:2:63",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2786:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2786:18:63"
                      },
                      {
                        "hexValue": "6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2806:8:63",
                        "type": "",
                        "value": "ntract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2779:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2779:36:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2779:36:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2824:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2836:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2847:3:63",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2832:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2832:19:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2824:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2606:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2620:4:63",
                "type": ""
              }
            ],
            "src": "2455:402:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3036:238:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3053:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3064:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3046:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3046:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3046:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3087:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3098:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3083:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3083:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3103:2:63",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3076:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3076:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3076:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3126:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3137:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3122:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3122:18:63"
                      },
                      {
                        "hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e2069",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3142:34:63",
                        "type": "",
                        "value": "ERC1967: beacon implementation i"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3115:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3115:62:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3115:62:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3197:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3208:2:63",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3193:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3193:18:63"
                      },
                      {
                        "hexValue": "73206e6f74206120636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3213:18:63",
                        "type": "",
                        "value": "s not a contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3186:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3186:46:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3186:46:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3241:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3253:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3264:3:63",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3249:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3249:19:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3241:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3013:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3027:4:63",
                "type": ""
              }
            ],
            "src": "2862:412:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3328:173:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3358:111:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3379:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3386:3:63",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3391:10:63",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3382:3:63"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3382:20:63"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3372:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3372:31:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3372:31:63"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3423:1:63",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3426:4:63",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3416:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3416:15:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3416:15:63"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3451:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3454:4:63",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3444:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3444:15:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3444:15:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3344:1:63"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3347:1:63"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3341:2:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3341:8:63"
                  },
                  "nodeType": "YulIf",
                  "src": "3338:131:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3478:17:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3490:1:63"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3493:1:63"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3486:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3486:9:63"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "3478:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3310:1:63",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3313:1:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "3319:4:63",
                "type": ""
              }
            ],
            "src": "3279:222:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3559:205:63",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3569:10:63",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3578:1:63",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3573:1:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3638:63:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3663:3:63"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3668:1:63"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3659:3:63"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3659:11:63"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "3682:3:63"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "3687:1:63"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3678:3:63"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3678:11:63"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3672:5:63"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3672:18:63"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3652:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3652:39:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3652:39:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3599:1:63"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3602:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3596:2:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3596:13:63"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3610:19:63",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3612:15:63",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3621:1:63"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3624:2:63",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3617:3:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3617:10:63"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3612:1:63"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3592:3:63",
                    "statements": []
                  },
                  "src": "3588:113:63"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3727:31:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3740:3:63"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "3745:6:63"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3736:3:63"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3736:16:63"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3754:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3729:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3729:27:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3729:27:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3716:1:63"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3719:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3713:2:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3713:13:63"
                  },
                  "nodeType": "YulIf",
                  "src": "3710:48:63"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "3537:3:63",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "3542:3:63",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3547:6:63",
                "type": ""
              }
            ],
            "src": "3506:258:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3801:95:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3818:1:63",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3825:3:63",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3830:10:63",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3821:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3821:20:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3811:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3811:31:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3811:31:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3858:1:63",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3861:4:63",
                        "type": "",
                        "value": "0x01"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3851:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3851:15:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3851:15:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3882:1:63",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3885:4:63",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3875:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3875:15:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3875:15:63"
                }
              ]
            },
            "name": "panic_error_0x01",
            "nodeType": "YulFunctionDefinition",
            "src": "3769:127:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3933:95:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3950:1:63",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3957:3:63",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3962:10:63",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3953:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3953:20:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3943:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3943:31:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3943:31:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3990:1:63",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3993:4:63",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3983:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3983:15:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3983:15:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4014:1:63",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4017:4:63",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4007:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4007:15:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4007:15:63"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "3901:127:63"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory(add(_2, 32), add(memPtr, 32), _3)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1967: new beacon is not a con\")\n        mstore(add(headStart, 96), \"tract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"ERC1967: beacon implementation i\")\n        mstore(add(headStart, 96), \"s not a contract\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 63,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1643:63",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:63",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:63",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:63"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:63"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:63"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:63"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:63"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:63"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:63"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:63"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:63",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:63",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:63"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:63"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:63",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:63"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:63"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:63"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:63"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:63"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:63"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:63",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:63"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:63",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:63",
                "type": ""
              }
            ],
            "src": "14:290:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "446:137:63",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "456:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "476:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "470:5:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "470:13:63"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "460:6:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "518:6:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "526:4:63",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "514:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "514:17:63"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "533:3:63"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "538:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "492:21:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "492:53:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "492:53:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "554:23:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "565:3:63"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "570:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "561:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "561:16:63"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "554:3:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "422:3:63",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "427:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "438:3:63",
                "type": ""
              }
            ],
            "src": "309:274:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "709:262:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "726:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "737:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "719:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "719:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "719:21:63"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "749:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "769:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "763:5:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "763:13:63"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "753:6:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "796:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "807:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "792:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "792:18:63"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "812:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "785:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "785:34:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "785:34:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "854:6:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "862:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "850:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "850:15:63"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "871:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "882:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "867:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "867:18:63"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "887:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "828:21:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "828:66:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "828:66:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "903:62:63",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "919:9:63"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "938:6:63"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "946:2:63",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "934:3:63"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "934:15:63"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "955:2:63",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "951:3:63"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "951:7:63"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "930:3:63"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "930:29:63"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "915:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "915:45:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "962:2:63",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "911:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "911:54:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "903:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "678:9:63",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "689:6:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "700:4:63",
                "type": ""
              }
            ],
            "src": "588:383:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1150:228:63",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1167:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1178:2:63",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1160:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1160:21:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1160:21:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1201:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1212:2:63",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1197:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1197:18:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1217:2:63",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1190:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1190:30:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1190:30:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1240:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1251:2:63",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1236:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1236:18:63"
                      },
                      {
                        "hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1256:34:63",
                        "type": "",
                        "value": "Address: delegate call to non-co"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1229:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1229:62:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1229:62:63"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1311:9:63"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1322:2:63",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1307:3:63"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1307:18:63"
                      },
                      {
                        "hexValue": "6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1327:8:63",
                        "type": "",
                        "value": "ntract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1300:6:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1300:36:63"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1300:36:63"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1345:27:63",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1357:9:63"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1368:3:63",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1353:3:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1353:19:63"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1345:4:63"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1127:9:63",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1141:4:63",
                "type": ""
              }
            ],
            "src": "976:402:63"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1436:205:63",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1446:10:63",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1455:1:63",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1450:1:63",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1515:63:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "1540:3:63"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "1545:1:63"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1536:3:63"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1536:11:63"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "1559:3:63"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1564:1:63"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1555:3:63"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1555:11:63"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1549:5:63"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1549:18:63"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1529:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1529:39:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1529:39:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1476:1:63"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1479:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1473:2:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1473:13:63"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1487:19:63",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1489:15:63",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1498:1:63"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1501:2:63",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1494:3:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1494:10:63"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1489:1:63"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1469:3:63",
                    "statements": []
                  },
                  "src": "1465:113:63"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1604:31:63",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "1617:3:63"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "1622:6:63"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1613:3:63"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1613:16:63"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1631:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1606:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1606:27:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1606:27:63"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1593:1:63"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1596:6:63"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1590:2:63"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1590:13:63"
                  },
                  "nodeType": "YulIf",
                  "src": "1587:48:63"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "1414:3:63",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "1419:3:63",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1424:6:63",
                "type": ""
              }
            ],
            "src": "1383:258:63"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n}",
      "id": 63,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "516:1650:55:-:0;;;1010:208;;;;;;;;;;;;;;;;;;:::i;:::-;1107:46;1152:1;1115:33;1107:46;:::i;:::-;-1:-1:-1;;;;;;;;;;;1083:71:55;1076:79;;;;:::i;:::-;1166:44;1190:6;1198:4;1204:5;1166:23;:44::i;:::-;1010:208;;516:1650;;6500:353:53;6641:21;6652:9;6641:10;:21::i;:::-;6678:25;;-1:-1:-1;;;;;6678:25:53;;;;;;;;6732:1;6718:4;:11;:15;:28;;;;6737:9;6718:28;6714:132;;;6763:71;6800:9;-1:-1:-1;;;;;6792:33:53;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6829:4;6763:28;;;;;:71;;:::i;:::-;;6714:132;6500:353;;;:::o;5811:378::-;5877:29;5896:9;5877:18;;;;;:29;;:::i;:::-;5869:79;;;;-1:-1:-1;;;5869:79:53;;2251:2:63;5869:79:53;;;2233:21:63;2290:2;2270:18;;;2263:30;2329:34;2309:18;;;2302:62;-1:-1:-1;;;2380:18:63;;;2373:35;2425:19;;5869:79:53;;;;;;;;;5981:55;6008:9;-1:-1:-1;;;;;6000:33:53;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5981:18;;;;;:55;;:::i;:::-;5959:153;;;;-1:-1:-1;;;5959:153:53;;3064:2:63;5959:153:53;;;3046:21:63;3103:2;3083:18;;;3076:30;3142:34;3122:18;;;3115:62;-1:-1:-1;;;3193:18:63;;;3186:46;3249:19;;5959:153:53;2862:412:63;5959:153:53;6172:9;6123:40;-1:-1:-1;;;;;;;;;;;6150:12:53;;6123:26;;;;;:40;;:::i;:::-;:58;;-1:-1:-1;;;;;;6123:58:53;-1:-1:-1;;;;;6123:58:53;;;;;;;;;;-1:-1:-1;5811:378:53:o;6339:200:60:-;6422:12;6454:77;6475:6;6483:4;6454:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6447:84;6339:200;-1:-1:-1;;;6339:200:60:o;743:387::-;1066:20;1114:8;;;743:387::o;1592:151:62:-;1721:4;1592:151::o;6733:397:60:-;6878:12;1066:20;;6903:69;;;;-1:-1:-1;;;6903:69:60;;2657:2:63;6903:69:60;;;2639:21:63;2696:2;2676:18;;;2669:30;2735:34;2715:18;;;2708:62;-1:-1:-1;;;2786:18:63;;;2779:36;2832:19;;6903:69:60;2455:402:63;6903:69:60;7027:25;;6986:12;;;;-1:-1:-1;;;;;7027:19:60;;;:25;;7047:4;;7027:25;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6985:67:60;;-1:-1:-1;6985:67:60;-1:-1:-1;7070:52:60;6985:67;;7109:12;7070:17;:52::i;:::-;7063:59;6733:397;-1:-1:-1;;;;;;6733:397:60:o;7138:712::-;7288:12;7317:7;7313:530;;;-1:-1:-1;7348:10:60;7341:17;;7313:530;7462:17;;:21;7458:374;;7660:10;7654:17;7721:15;7708:10;7704:2;7700:19;7693:44;7458:374;7796:20;;-1:-1:-1;;;7796:20:60;;;;7803:12;;7796:20;;;:::i;14:177:63:-;93:13;;-1:-1:-1;;;;;135:31:63;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:208::-;266:6;319:2;307:9;298:7;294:23;290:32;287:52;;;335:1;332;325:12;287:52;358:40;388:9;358:40;:::i;409:968::-;497:6;505;558:2;546:9;537:7;533:23;529:32;526:52;;;574:1;571;564:12;526:52;597:40;627:9;597:40;:::i;:::-;681:2;666:18;;660:25;587:50;;-1:-1:-1;;;;;;734:14:63;;;731:34;;;761:1;758;751:12;731:34;799:6;788:9;784:22;774:32;;844:7;837:4;833:2;829:13;825:27;815:55;;866:1;863;856:12;815:55;895:2;889:9;917:2;913;910:10;907:36;;;923:18;;:::i;:::-;998:2;992:9;966:2;1052:13;;-1:-1:-1;;1048:22:63;;;1072:2;1044:31;1040:40;1028:53;;;1096:18;;;1116:22;;;1093:46;1090:72;;;1142:18;;:::i;:::-;1182:10;1178:2;1171:22;1217:2;1209:6;1202:18;1257:7;1252:2;1247;1243;1239:11;1235:20;1232:33;1229:53;;;1278:1;1275;1268:12;1229:53;1291:55;1343:2;1338;1330:6;1326:15;1321:2;1317;1313:11;1291:55;:::i;:::-;1365:6;1355:16;;;;;;;409:968;;;;;:::o;1382:274::-;1511:3;1549:6;1543:13;1565:53;1611:6;1606:3;1599:4;1591:6;1587:17;1565:53;:::i;:::-;1634:16;;;;;1382:274;-1:-1:-1;;1382:274:63:o;1661:383::-;1810:2;1799:9;1792:21;1773:4;1842:6;1836:13;1885:6;1880:2;1869:9;1865:18;1858:34;1901:66;1960:6;1955:2;1944:9;1940:18;1935:2;1927:6;1923:15;1901:66;:::i;:::-;2028:2;2007:15;-1:-1:-1;;2003:29:63;1988:45;;;;2035:2;1984:54;;1661:383;-1:-1:-1;;1661:383:63:o;3279:222::-;3319:4;3347:1;3344;3341:8;3338:131;;;3391:10;3386:3;3382:20;3379:1;3372:31;3426:4;3423:1;3416:15;3454:4;3451:1;3444:15;3338:131;-1:-1:-1;3486:9:63;;3279:222::o;3506:258::-;3578:1;3588:113;3602:6;3599:1;3596:13;3588:113;;;3678:11;;;3672:18;3659:11;;;3652:39;3624:2;3617:10;3588:113;;;3719:6;3716:1;3713:13;3710:48;;;-1:-1:-1;;3754:1:63;3736:16;;3729:27;3506:258::o;3769:127::-;3830:10;3825:3;3821:20;3818:1;3811:31;3861:4;3858:1;3851:15;3885:4;3882:1;3875:15;3901:127;3962:10;3957:3;3953:20;3950:1;3943:31;3993:4;3990:1;3983:15;4017:4;4014:1;4007:15;3901:127;516:1650:55;;;;;;",
  "deployedSourceMap": "516:1650:55:-:0;;;;;;2907:11:54;:9;:11::i;:::-;516:1650:55;;2676:11:54;2313:113;2390:28;2400:17;:15;:17::i;:::-;2390:9;:28::i;:::-;2313:113::o;6339:200:60:-;6422:12;6454:77;6475:6;6483:4;6454:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6447:84;6339:200;-1:-1:-1;;;6339:200:60:o;743:387::-;1066:20;1114:8;;;743:387::o;1592:151:62:-;1721:4;1592:151::o;1498:140:55:-;5343:66:53;5670:46;1592:38:55;;;-1:-1:-1;;;1592:38:55;;;;1565:7;;-1:-1:-1;;;;;5670:46:53;;1592:36:55;;:38;;;;;;;;;;;;;;5670:46:53;1592:38:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1585:45;;1498:140;:::o;903:918:54:-;1246:14;1243:1;1240;1227:34;1464:1;1461;1445:14;1442:1;1426:14;1419:5;1406:60;1543:16;1540:1;1537;1522:38;1583:6;1652:68;;;;1771:16;1768:1;1761:27;1652:68;1688:16;1685:1;1678:27;6733:397:60;6878:12;1066:20;;6903:69;;;;-1:-1:-1;;;6903:69:60;;1178:2:63;6903:69:60;;;1160:21:63;1217:2;1197:18;;;1190:30;1256:34;1236:18;;;1229:62;-1:-1:-1;;;1307:18:63;;;1300:36;1353:19;;6903:69:60;;;;;;;;;7027:25;;6986:12;;;;-1:-1:-1;;;;;7027:19:60;;;:25;;7047:4;;7027:25;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6985:67;;;;7070:52;7088:7;7097:10;7109:12;7070:17;:52::i;:::-;7063:59;6733:397;-1:-1:-1;;;;;;6733:397:60:o;7138:712::-;7288:12;7317:7;7313:530;;;-1:-1:-1;7348:10:60;7341:17;;7313:530;7462:17;;:21;7458:374;;7660:10;7654:17;7721:15;7708:10;7704:2;7700:19;7693:44;7458:374;7796:20;;-1:-1:-1;;;7796:20:60;;;;7803:12;;7796:20;;;:::i;14:290:63:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:63;;214:42;;204:70;;270:1;267;260:12;309:274;438:3;476:6;470:13;492:53;538:6;533:3;526:4;518:6;514:17;492:53;:::i;:::-;561:16;;;;;309:274;-1:-1:-1;;309:274:63:o;588:383::-;737:2;726:9;719:21;700:4;769:6;763:13;812:6;807:2;796:9;792:18;785:34;828:66;887:6;882:2;871:9;867:18;862:2;854:6;850:15;828:66;:::i;:::-;955:2;934:15;-1:-1:-1;;930:29:63;915:45;;;;962:2;911:54;;588:383;-1:-1:-1;;588:383:63:o;1383:258::-;1455:1;1465:113;1479:6;1476:1;1473:13;1465:113;;;1555:11;;;1549:18;1536:11;;;1529:39;1501:2;1494:10;1465:113;;;1596:6;1593:1;1590:13;1587:48;;;1631:1;1622:6;1617:3;1613:16;1606:27;1587:48;;1383:258;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IBeacon.sol\";\r\nimport \"../Proxy.sol\";\r\nimport \"../ERC1967/ERC1967Upgrade.sol\";\r\n\r\n/**\r\n * @dev This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}.\r\n *\r\n * The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\r\n * conflict with the storage layout of the implementation behind the proxy.\r\n *\r\n * _Available since v3.4._\r\n */\r\ncontract BeaconProxy is Proxy, ERC1967Upgrade {\r\n    /**\r\n     * @dev Initializes the proxy with `beacon`.\r\n     *\r\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\r\n     * will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity\r\n     * constructor.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `beacon` must be a contract with the interface {IBeacon}.\r\n     */\r\n    constructor(address beacon, bytes memory data) payable {\r\n        assert(_BEACON_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.beacon\")) - 1));\r\n        _upgradeBeaconToAndCall(beacon, data, false);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current beacon address.\r\n     */\r\n    function _beacon() internal view virtual returns (address) {\r\n        return _getBeacon();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current implementation address of the associated beacon.\r\n     */\r\n    function _implementation() internal view virtual override returns (address) {\r\n        return IBeacon(_getBeacon()).implementation();\r\n    }\r\n\r\n    /**\r\n     * @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\r\n     *\r\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `beacon` must be a contract.\r\n     * - The implementation returned by `beacon` must be a contract.\r\n     */\r\n    function _setBeacon(address beacon, bytes memory data) internal virtual {\r\n        _upgradeBeaconToAndCall(beacon, data, false);\r\n    }\r\n}\r\n",
  "sourcePath": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
    "exportedSymbols": {
      "Address": [
        12694
      ],
      "BeaconProxy": [
        12013
      ],
      "ERC1967Upgrade": [
        11879
      ],
      "IBeacon": [
        12023
      ],
      "Proxy": [
        11931
      ],
      "StorageSlot": [
        12775
      ]
    },
    "id": 12014,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11933,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:55"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "file": "./IBeacon.sol",
        "id": 11934,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12014,
        "sourceUnit": 12024,
        "src": "62:23:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
        "file": "../Proxy.sol",
        "id": 11935,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12014,
        "sourceUnit": 11932,
        "src": "87:22:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "file": "../ERC1967/ERC1967Upgrade.sol",
        "id": 11936,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12014,
        "sourceUnit": 11880,
        "src": "111:39:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11938,
              "name": "Proxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11931,
              "src": "540:5:55"
            },
            "id": 11939,
            "nodeType": "InheritanceSpecifier",
            "src": "540:5:55"
          },
          {
            "baseName": {
              "id": 11940,
              "name": "ERC1967Upgrade",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11879,
              "src": "547:14:55"
            },
            "id": 11941,
            "nodeType": "InheritanceSpecifier",
            "src": "547:14:55"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11937,
          "nodeType": "StructuredDocumentation",
          "src": "154:360:55",
          "text": " @dev This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}.\n The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n conflict with the storage layout of the implementation behind the proxy.\n _Available since v3.4._"
        },
        "fullyImplemented": true,
        "id": 12013,
        "linearizedBaseContracts": [
          12013,
          11879,
          11931
        ],
        "name": "BeaconProxy",
        "nameLocation": "525:11:55",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11971,
              "nodeType": "Block",
              "src": "1065:153:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 11962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11950,
                          "name": "_BEACON_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11786,
                          "src": "1083:12:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 11960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "656970313936372e70726f78792e626561636f6e",
                                        "id": 11956,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1125:22:55",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51",
                                          "typeString": "literal_string \"eip1967.proxy.beacon\""
                                        },
                                        "value": "eip1967.proxy.beacon"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51",
                                          "typeString": "literal_string \"eip1967.proxy.beacon\""
                                        }
                                      ],
                                      "id": 11955,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967288,
                                      "src": "1115:9:55",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 11957,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1115:33:55",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 11954,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1107:7:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 11953,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1107:7:55",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 11958,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1107:42:55",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 11959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1152:1:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1107:46:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1099:7:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 11951,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1099:7:55",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1099:55:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1083:71:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11949,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "1076:6:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 11963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1076:79:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11964,
                  "nodeType": "ExpressionStatement",
                  "src": "1076:79:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11966,
                        "name": "beacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11944,
                        "src": "1190:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11967,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11946,
                        "src": "1198:4:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 11968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1204:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11965,
                      "name": "_upgradeBeaconToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11878,
                      "src": "1166:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 11969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1166:44:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11970,
                  "nodeType": "ExpressionStatement",
                  "src": "1166:44:55"
                }
              ]
            },
            "documentation": {
              "id": 11942,
              "nodeType": "StructuredDocumentation",
              "src": "569:435:55",
              "text": " @dev Initializes the proxy with `beacon`.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity\n constructor.\n Requirements:\n - `beacon` must be a contract with the interface {IBeacon}."
            },
            "id": 11972,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11944,
                  "mutability": "mutable",
                  "name": "beacon",
                  "nameLocation": "1030:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 11972,
                  "src": "1022:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11943,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11946,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1051:4:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 11972,
                  "src": "1038:17:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11945,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1038:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1021:35:55"
            },
            "returnParameters": {
              "id": 11948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1065:0:55"
            },
            "scope": 12013,
            "src": "1010:208:55",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11981,
              "nodeType": "Block",
              "src": "1352:38:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 11978,
                      "name": "_getBeacon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11804,
                      "src": "1370:10:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 11979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1370:12:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 11977,
                  "id": 11980,
                  "nodeType": "Return",
                  "src": "1363:19:55"
                }
              ]
            },
            "documentation": {
              "id": 11973,
              "nodeType": "StructuredDocumentation",
              "src": "1226:61:55",
              "text": " @dev Returns the current beacon address."
            },
            "id": 11982,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beacon",
            "nameLocation": "1302:7:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1309:2:55"
            },
            "returnParameters": {
              "id": 11977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11976,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11982,
                  "src": "1343:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1343:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1342:9:55"
            },
            "scope": 12013,
            "src": "1293:97:55",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              11896
            ],
            "body": {
              "id": 11996,
              "nodeType": "Block",
              "src": "1574:64:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 11990,
                              "name": "_getBeacon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11804,
                              "src": "1600:10:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 11991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1600:12:55",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11989,
                          "name": "IBeacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12023,
                          "src": "1592:7:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBeacon_$12023_$",
                            "typeString": "type(contract IBeacon)"
                          }
                        },
                        "id": 11992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1592:21:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBeacon_$12023",
                          "typeString": "contract IBeacon"
                        }
                      },
                      "id": 11993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "implementation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12022,
                      "src": "1592:36:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 11994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1592:38:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 11988,
                  "id": 11995,
                  "nodeType": "Return",
                  "src": "1585:45:55"
                }
              ]
            },
            "documentation": {
              "id": 11983,
              "nodeType": "StructuredDocumentation",
              "src": "1398:94:55",
              "text": " @dev Returns the current implementation address of the associated beacon."
            },
            "id": 11997,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_implementation",
            "nameLocation": "1507:15:55",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11985,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1547:8:55"
            },
            "parameters": {
              "id": 11984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1522:2:55"
            },
            "returnParameters": {
              "id": 11988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11987,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11997,
                  "src": "1565:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11986,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1565:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1564:9:55"
            },
            "scope": 12013,
            "src": "1498:140:55",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12011,
              "nodeType": "Block",
              "src": "2100:63:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12006,
                        "name": "beacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12000,
                        "src": "2135:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12007,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12002,
                        "src": "2143:4:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 12008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2149:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12005,
                      "name": "_upgradeBeaconToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11878,
                      "src": "2111:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 12009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2111:44:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12010,
                  "nodeType": "ExpressionStatement",
                  "src": "2111:44:55"
                }
              ]
            },
            "documentation": {
              "id": 11998,
              "nodeType": "StructuredDocumentation",
              "src": "1646:376:55",
              "text": " @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n Requirements:\n - `beacon` must be a contract.\n - The implementation returned by `beacon` must be a contract."
            },
            "id": 12012,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBeacon",
            "nameLocation": "2037:10:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12000,
                  "mutability": "mutable",
                  "name": "beacon",
                  "nameLocation": "2056:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12012,
                  "src": "2048:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2048:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12002,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2077:4:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12012,
                  "src": "2064:17:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12001,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2064:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2047:35:55"
            },
            "returnParameters": {
              "id": 12004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2100:0:55"
            },
            "scope": 12013,
            "src": "2028:135:55",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 12014,
        "src": "516:1650:55",
        "usedErrors": []
      }
    ],
    "src": "35:2133:55"
  },
  "legacyAST": {
    "absolutePath": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol",
    "exportedSymbols": {
      "Address": [
        12694
      ],
      "BeaconProxy": [
        12013
      ],
      "ERC1967Upgrade": [
        11879
      ],
      "IBeacon": [
        12023
      ],
      "Proxy": [
        11931
      ],
      "StorageSlot": [
        12775
      ]
    },
    "id": 12014,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11933,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:55"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "file": "./IBeacon.sol",
        "id": 11934,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12014,
        "sourceUnit": 12024,
        "src": "62:23:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
        "file": "../Proxy.sol",
        "id": 11935,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12014,
        "sourceUnit": 11932,
        "src": "87:22:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "file": "../ERC1967/ERC1967Upgrade.sol",
        "id": 11936,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12014,
        "sourceUnit": 11880,
        "src": "111:39:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11938,
              "name": "Proxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11931,
              "src": "540:5:55"
            },
            "id": 11939,
            "nodeType": "InheritanceSpecifier",
            "src": "540:5:55"
          },
          {
            "baseName": {
              "id": 11940,
              "name": "ERC1967Upgrade",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11879,
              "src": "547:14:55"
            },
            "id": 11941,
            "nodeType": "InheritanceSpecifier",
            "src": "547:14:55"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11937,
          "nodeType": "StructuredDocumentation",
          "src": "154:360:55",
          "text": " @dev This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}.\n The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n conflict with the storage layout of the implementation behind the proxy.\n _Available since v3.4._"
        },
        "fullyImplemented": true,
        "id": 12013,
        "linearizedBaseContracts": [
          12013,
          11879,
          11931
        ],
        "name": "BeaconProxy",
        "nameLocation": "525:11:55",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11971,
              "nodeType": "Block",
              "src": "1065:153:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 11962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11950,
                          "name": "_BEACON_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11786,
                          "src": "1083:12:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 11960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "656970313936372e70726f78792e626561636f6e",
                                        "id": 11956,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1125:22:55",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51",
                                          "typeString": "literal_string \"eip1967.proxy.beacon\""
                                        },
                                        "value": "eip1967.proxy.beacon"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51",
                                          "typeString": "literal_string \"eip1967.proxy.beacon\""
                                        }
                                      ],
                                      "id": 11955,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967288,
                                      "src": "1115:9:55",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 11957,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1115:33:55",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 11954,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1107:7:55",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 11953,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1107:7:55",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 11958,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1107:42:55",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 11959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1152:1:55",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1107:46:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1099:7:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 11951,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1099:7:55",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1099:55:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1083:71:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11949,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "1076:6:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 11963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1076:79:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11964,
                  "nodeType": "ExpressionStatement",
                  "src": "1076:79:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11966,
                        "name": "beacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11944,
                        "src": "1190:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11967,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11946,
                        "src": "1198:4:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 11968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1204:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11965,
                      "name": "_upgradeBeaconToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11878,
                      "src": "1166:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 11969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1166:44:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11970,
                  "nodeType": "ExpressionStatement",
                  "src": "1166:44:55"
                }
              ]
            },
            "documentation": {
              "id": 11942,
              "nodeType": "StructuredDocumentation",
              "src": "569:435:55",
              "text": " @dev Initializes the proxy with `beacon`.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity\n constructor.\n Requirements:\n - `beacon` must be a contract with the interface {IBeacon}."
            },
            "id": 11972,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11944,
                  "mutability": "mutable",
                  "name": "beacon",
                  "nameLocation": "1030:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 11972,
                  "src": "1022:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11943,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11946,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1051:4:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 11972,
                  "src": "1038:17:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11945,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1038:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1021:35:55"
            },
            "returnParameters": {
              "id": 11948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1065:0:55"
            },
            "scope": 12013,
            "src": "1010:208:55",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11981,
              "nodeType": "Block",
              "src": "1352:38:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 11978,
                      "name": "_getBeacon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11804,
                      "src": "1370:10:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 11979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1370:12:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 11977,
                  "id": 11980,
                  "nodeType": "Return",
                  "src": "1363:19:55"
                }
              ]
            },
            "documentation": {
              "id": 11973,
              "nodeType": "StructuredDocumentation",
              "src": "1226:61:55",
              "text": " @dev Returns the current beacon address."
            },
            "id": 11982,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beacon",
            "nameLocation": "1302:7:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1309:2:55"
            },
            "returnParameters": {
              "id": 11977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11976,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11982,
                  "src": "1343:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1343:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1342:9:55"
            },
            "scope": 12013,
            "src": "1293:97:55",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              11896
            ],
            "body": {
              "id": 11996,
              "nodeType": "Block",
              "src": "1574:64:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 11990,
                              "name": "_getBeacon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11804,
                              "src": "1600:10:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 11991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1600:12:55",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11989,
                          "name": "IBeacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12023,
                          "src": "1592:7:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBeacon_$12023_$",
                            "typeString": "type(contract IBeacon)"
                          }
                        },
                        "id": 11992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1592:21:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBeacon_$12023",
                          "typeString": "contract IBeacon"
                        }
                      },
                      "id": 11993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "implementation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12022,
                      "src": "1592:36:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 11994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1592:38:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 11988,
                  "id": 11995,
                  "nodeType": "Return",
                  "src": "1585:45:55"
                }
              ]
            },
            "documentation": {
              "id": 11983,
              "nodeType": "StructuredDocumentation",
              "src": "1398:94:55",
              "text": " @dev Returns the current implementation address of the associated beacon."
            },
            "id": 11997,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_implementation",
            "nameLocation": "1507:15:55",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11985,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1547:8:55"
            },
            "parameters": {
              "id": 11984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1522:2:55"
            },
            "returnParameters": {
              "id": 11988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11987,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11997,
                  "src": "1565:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11986,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1565:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1564:9:55"
            },
            "scope": 12013,
            "src": "1498:140:55",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12011,
              "nodeType": "Block",
              "src": "2100:63:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12006,
                        "name": "beacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12000,
                        "src": "2135:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12007,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12002,
                        "src": "2143:4:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 12008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2149:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 12005,
                      "name": "_upgradeBeaconToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11878,
                      "src": "2111:23:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 12009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2111:44:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12010,
                  "nodeType": "ExpressionStatement",
                  "src": "2111:44:55"
                }
              ]
            },
            "documentation": {
              "id": 11998,
              "nodeType": "StructuredDocumentation",
              "src": "1646:376:55",
              "text": " @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n Requirements:\n - `beacon` must be a contract.\n - The implementation returned by `beacon` must be a contract."
            },
            "id": 12012,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBeacon",
            "nameLocation": "2037:10:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12000,
                  "mutability": "mutable",
                  "name": "beacon",
                  "nameLocation": "2056:6:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12012,
                  "src": "2048:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2048:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12002,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2077:4:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 12012,
                  "src": "2064:17:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12001,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2064:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2047:35:55"
            },
            "returnParameters": {
              "id": 12004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2100:0:55"
            },
            "scope": 12013,
            "src": "2028:135:55",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 12014,
        "src": "516:1650:55",
        "usedErrors": []
      }
    ],
    "src": "35:2133:55"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-10-27T11:53:43.807Z",
  "devdoc": {
    "details": "This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}